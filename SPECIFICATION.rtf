{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 \ul \ulc0 MIDISWITCHER Midibox
\b0 \ulnone \
\
\ul Questions\
\ulnone - ou est stock\'e9e la table des presets et les options ? (eeprom/flash)\
- possibilit\'e9 de nommer les presets ?\
- mettre des capteur de luminosit\'e9 sur les leds des p\'e9dales ?\
\
\ul Definition des besoins\ulnone \
	5 loops for external pedals\
	3 relays to control switches (mutual exclusive)\
	midi in/out/through\
	LCD display\
	4 menu buttons (change programs, midi channel\'85)\
	8 user buttons with led (toggle loops)\
	presets saving\
	optional : mode to switch user buttons to recall a specific preset\
\
\ul Fonctionnement\ulnone \
	R\'e9ception de messages "Program change" (PC) sur le canal MIDI configur\'e9 ( de 1 \'e0 16, ou n'importe lequel si 0)\
	PC00 : all off\
	PC01\'85100 : rappel direct du preset\
	PC101\'85108 : toggle relais 1\'858\
	PC109\'85110 : UP/DOWN preset\
	Lorsqu'un preset est actif, la modification est imm\'e9diate en appuyant sur les boutons, pour sauvegarder appuyer OK une premi\'e8re fois, choisir le preset avec UP/DOWN, et appuyer sur OK une seconde fois pour confirmer, ou sur CHANNEL pour annuler.\
	Pour modifier le canal midi, appuyer sur CHANNEL, changer le num\'e9ro de canal en appuyant sur UP/DOWN, puis confirmer en appuyant sur OK, ou annuler en appuyant sur CHANNEL.\
\
\ul Specification logicielle\ulnone \

\i Main options :\
	MIDI_channel = short\
	active_preset = short\
	midi_Send_on_button_pressed = Y/N\
	reload_preset_if_active = Y/N\
	relay [ 1\'858 ] type\
	relay [ 1\'858 ] mode\
	relay [ 1\'858] state\
\
relay_type\
	Toggle = 0\
	momentary = 1\
\
relay_mode\
	free = 0\
	radio = 1\
\
function do_relay ( short relay_nb )\
\{\
	short FOUND = 0;\
\
	if ( relay_mode ( relay_nb ) == free )\
	\{\
		toggle_dout ( relay_nb )\
	\}\
	else if ( relay_mode  ( relay_nb ) == radio )\
	\{\
		if ( relay_nb est actif )\
		\{\
			toggle_dout ( relay_nb )\
		\}\
		else\
		\{\
			for ( i=1\'858 )\
			\{\
				if ( relay_i est de type group ET relay_nb est actif )\
				\{\
					d\'e9sactiver led relay_i\
					push relay_nb\
					activer led_relay_nb\
					FOUND = 1\
				\}\
				i++\
			\}\
			if ( ! FOUND )\
				toggle_dout ( relay_nb )\
		\}\
	\}\
	if ( midi_Send_on_button_pressed ) \
		send_PC  ( relay_nb )\
\}
\i0 \
\

\i function toggle_dout ( short relay_nb )\
\{\
	if ( relay_type ( relay_nb ) == toggle )\
	\{\
		toggle relay_nb\
		toggle relay_nb led\
	\}\
	else if ( relay_type ( relay_nb ) == momentary )\
	\{\
		push relay_nb\
		toggle relay_nb led\
	\}\
\}
\i0 \
\
function recall_preset ( short number )\
\{\
\}\
\
function gestion_menu\
\{\
\}\
\

\i button_pressed ( number )\
\{\
	if ( pedal_button )\
	\{\
		do_relay ( number )\
	\}\
	else if ( menu_button )\
	\{\
		gestion_menu ()\
	\}\
	else\
 		Erreur bouton inconnu\
\}
\i0 \
\
midi_receive\
\{\
	if ( ! program_change )\
		exit;\
\
	LCD_show ( message )\
\
	if ( program_change < 100 )\
		recall_preset ( program_change )\
	else if ( program_change < 109 )\
		do_relay ( program_change - 100)\
	else if ( program_change == 109 )\
		recall_preset ( -1 )\
	else if ( program_change == 110 )\
		recall_preset ( +1 )\
\}\
\

\i init_pic\
\{\
	activer le premier bouton du group (num\'e9ro le plus faible)\
\}}