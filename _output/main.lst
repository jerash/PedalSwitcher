gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.8.0 #5117 (Mar 23 2008) (Mac OS X i386)
               00004 ; This file was generated Mon Feb  4 11:12:39 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f452
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _MidiChannel
               00016         global _CurrentPreset
               00017         global _SendMidiOnButtonChange
               00018         global _ReloadActivePreset
               00019         global _ForceStartupPreset
               00020         global _ThisStartupPreset
               00021         global _RelayType
               00022         global _RelayMode
               00023         global _FootPreset
               00024         global _RelayState
               00025         global _LastButton
               00026         global _MenuPos
               00027         global _TargetPreset
               00028         global _MidiIn
               00029         global _toggle_dout
               00030         global _DoRelay
               00031         global _FootButton
               00032         global _RelayButton
               00033         global _MenuButton
               00034         global _LoadTestPreset
               00035         global _LoadGlobalOptions
               00036         global _SaveGlobalOptions
               00037         global _SetActivePreset
               00038         global _FootLedsOff
               00039         global _SetFootLed
               00040         global _LoadPreset
               00041         global _SavePreset
               00042         global _Preset_Up
               00043         global _Preset_Down
               00044         global _FactoryReset
               00045         global _StartupPreset
               00046         global _Init
               00047         global _Tick
               00048         global _Timer
               00049         global _DISPLAY_Init
               00050         global _DISPLAY_Tick
               00051         global _MPROC_NotifyReceivedEvnt
               00052         global _MPROC_NotifyFoundEvent
               00053         global _MPROC_NotifyTimeout
               00054         global _MPROC_NotifyReceivedByte
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         global _SR_Service_Prepare
               00056         global _SR_Service_Finish
               00057         global _DIN_NotifyToggle
               00058         global _ENC_NotifyChange
               00059         global _AIN_NotifyChange
               00060         global _RelayLedPin
               00061         global _RelayPin
               00062         global _FootLedPin
               00063         global _ButtonPin
               00064         global _MenuButtonPin
               00065         global _FootButtonPin
               00066 
               00067 ;--------------------------------------------------------
               00068 ; extern variables in this module
               00069 ;--------------------------------------------------------
               00070         extern _MIOS_BOX_CFG0
               00071         extern _MIOS_BOX_CFG1
               00072         extern _MIOS_BOX_STAT
               00073         extern _MIOS_PARAMETER1
               00074         extern _MIOS_PARAMETER2
               00075         extern _MIOS_PARAMETER3
               00076         extern _PORTAbits
               00077         extern _PORTBbits
               00078         extern _PORTCbits
               00079         extern _PORTDbits
               00080         extern _PORTEbits
               00081         extern _LATAbits
               00082         extern _LATBbits
               00083         extern _LATCbits
               00084         extern _LATDbits
               00085         extern _LATEbits
               00086         extern _TRISAbits
               00087         extern _TRISBbits
               00088         extern _TRISCbits
               00089         extern _TRISDbits
               00090         extern _TRISEbits
               00091         extern _PIE1bits
               00092         extern _PIR1bits
               00093         extern _IPR1bits
               00094         extern _PIE2bits
               00095         extern _PIR2bits
               00096         extern _IPR2bits
               00097         extern _EECON1bits
               00098         extern _RCSTAbits
               00099         extern _TXSTAbits
               00100         extern _T3CONbits
               00101         extern _CCP2CONbits
               00102         extern _CCP1CONbits
               00103         extern _ADCON1bits
               00104         extern _ADCON0bits
               00105         extern _SSPCON2bits
               00106         extern _SSPCON1bits
               00107         extern _SSPSTATbits
               00108         extern _T2CONbits
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _T1CONbits
               00110         extern _RCONbits
               00111         extern _WDTCONbits
               00112         extern _LVDCONbits
               00113         extern _OSCCONbits
               00114         extern _T0CONbits
               00115         extern _STATUSbits
               00116         extern _INTCON3bits
               00117         extern _INTCON2bits
               00118         extern _INTCONbits
               00119         extern _STKPTRbits
               00120         extern _PORTA
               00121         extern _PORTB
               00122         extern _PORTC
               00123         extern _PORTD
               00124         extern _PORTE
               00125         extern _LATA
               00126         extern _LATB
               00127         extern _LATC
               00128         extern _LATD
               00129         extern _LATE
               00130         extern _TRISA
               00131         extern _TRISB
               00132         extern _TRISC
               00133         extern _TRISD
               00134         extern _TRISE
               00135         extern _PIE1
               00136         extern _PIR1
               00137         extern _IPR1
               00138         extern _PIE2
               00139         extern _PIR2
               00140         extern _IPR2
               00141         extern _EECON1
               00142         extern _EECON2
               00143         extern _EEDATA
               00144         extern _EEADR
               00145         extern _RCSTA
               00146         extern _TXSTA
               00147         extern _TXREG
               00148         extern _RCREG
               00149         extern _SPBRG
               00150         extern _T3CON
               00151         extern _TMR3L
               00152         extern _TMR3H
               00153         extern _CCP2CON
               00154         extern _CCPR2L
               00155         extern _CCPR2H
               00156         extern _CCP1CON
               00157         extern _CCPR1L
               00158         extern _CCPR1H
               00159         extern _ADCON1
               00160         extern _ADCON0
               00161         extern _ADRESL
               00162         extern _ADRESH
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _SSPCON2
               00164         extern _SSPCON1
               00165         extern _SSPSTAT
               00166         extern _SSPADD
               00167         extern _SSPBUF
               00168         extern _T2CON
               00169         extern _PR2
               00170         extern _TMR2
               00171         extern _T1CON
               00172         extern _TMR1L
               00173         extern _TMR1H
               00174         extern _RCON
               00175         extern _WDTCON
               00176         extern _LVDCON
               00177         extern _OSCCON
               00178         extern _T0CON
               00179         extern _TMR0L
               00180         extern _TMR0H
               00181         extern _STATUS
               00182         extern _FSR2L
               00183         extern _FSR2H
               00184         extern _PLUSW2
               00185         extern _PREINC2
               00186         extern _POSTDEC2
               00187         extern _POSTINC2
               00188         extern _INDF2
               00189         extern _BSR
               00190         extern _FSR1L
               00191         extern _FSR1H
               00192         extern _PLUSW1
               00193         extern _PREINC1
               00194         extern _POSTDEC1
               00195         extern _POSTINC1
               00196         extern _INDF1
               00197         extern _WREG
               00198         extern _FSR0L
               00199         extern _FSR0H
               00200         extern _PLUSW0
               00201         extern _PREINC0
               00202         extern _POSTDEC0
               00203         extern _POSTINC0
               00204         extern _INDF0
               00205         extern _INTCON3
               00206         extern _INTCON2
               00207         extern _INTCON
               00208         extern _PRODL
               00209         extern _PRODH
               00210         extern _TABLAT
               00211         extern _TBLPTRL
               00212         extern _TBLPTRH
               00213         extern _TBLPTRU
               00214         extern _PCL
               00215         extern _PCLATH
               00216         extern _PCLATU
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _STKPTR
               00218         extern _TOSL
               00219         extern _TOSH
               00220         extern _TOSU
               00221         extern _MIOS_MIDI_BeginStream
               00222         extern _MIOS_MIDI_EndStream
               00223         extern _MIOS_MIDI_TxBufferPut
               00224         extern _MIOS_DOUT_PinSet
               00225         extern _MIOS_DOUT_PinSet0
               00226         extern _MIOS_DOUT_PinSet1
               00227         extern _MIOS_SRIO_NumberSet
               00228         extern _MIOS_SRIO_UpdateFrqSet
               00229         extern _MIOS_SRIO_DebounceSet
               00230         extern _MIOS_LCD_Clear
               00231         extern _MIOS_LCD_CursorSet
               00232         extern _MIOS_LCD_PrintBCD1
               00233         extern _MIOS_LCD_PrintBCD2
               00234         extern _MIOS_LCD_PrintBCD3
               00235         extern _MIOS_LCD_PrintChar
               00236         extern _MIOS_LCD_MessageStart
               00237         extern _MIOS_LCD_PrintCString
               00238         extern _MIOS_EEPROM_Read
               00239         extern _MIOS_EEPROM_Write
               00240         extern _MIOS_Delay
               00241         extern _DEBUG_MSG_SendHeader
               00242         extern _DEBUG_MSG_SendFooter
               00243         extern _DEBUG_MSG_SendChar
               00244         extern _DEBUG_MSG_SendCString
               00245         extern _DEBUG_MSG_SendBCD1
               00246         extern _DEBUG_MSG_SendBCD3
               00247         extern _mios_enc_pin_table
               00248         extern _mios_mproc_event_table
               00249         extern _MIOS_MPROC_EVENT_TABLE
               00250         extern _MIOS_ENC_PIN_TABLE
               00251 ;--------------------------------------------------------
               00252 ;       Equates to used internal registers
               00253 ;--------------------------------------------------------
  00000FD8     00254 STATUS  equ     0xfd8
  00000FF9     00255 PCL     equ     0xff9
  00000FFA     00256 PCLATH  equ     0xffa
  00000FFB     00257 PCLATU  equ     0xffb
  00000FE8     00258 WREG    equ     0xfe8
  00000FF6     00259 TBLPTRL equ     0xff6
  00000FF7     00260 TBLPTRH equ     0xff7
  00000FF8     00261 TBLPTRU equ     0xff8
  00000FF5     00262 TABLAT  equ     0xff5
  00000FE1     00263 FSR0L equ 0xfe1 ;; normaly 0xfe9, changed by mios-gpasm
  00000FE2     00264 FSR0H equ 0xfe2 ;; normaly 0xfea, changed by mios-gpasm
  00000FE9     00265 FSR1L equ 0xfe9 ;; normaly 0xfe1, changed by mios-gpasm
  00000FD9     00266 FSR2L   equ     0xfd9
  00000FE7     00267 INDF0 equ 0xfe7 ;; normaly 0xfef, changed by mios-gpasm
  00000FED     00268 POSTDEC1 equ 0xfed ;; normaly 0xfe5, changed by mios-gpasm
  00000FEC     00269 PREINC1 equ 0xfec ;; normaly 0xfe4, changed by mios-gpasm
  00000FDB     00270 PLUSW2  equ     0xfdb
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271 
               00272 
               00273 ; Internal registers
               00274 .registers udata_ovr 0x0010 ;; normaly 0x0000, changed by mios-gpasm
               00275 r0x00   res     1
               00276 r0x01   res     1
               00277 r0x02   res     1
               00278 r0x03   res     1
               00279 r0x04   res     1
               00280 r0x05   res     1
               00281 r0x06   res     1
               00282 r0x07   res     1
               00283 r0x08   res     1
               00284 r0x09   res     1
               00285 
               00286 udata_main_0    udata
               00287 _RelayType      res     8
               00288 
               00289 udata_main_1    udata
               00290 _RelayState     res     8
               00291 
               00292 udata_main_2    udata
               00293 _RelayMode      res     8
               00294 
               00295 udata_main_3    udata
               00296 _MidiChannel    res     1
               00297 
               00298 udata_main_4    udata
               00299 _CurrentPreset  res     1
               00300 
               00301 udata_main_5    udata
               00302 _SendMidiOnButtonChange res     1
               00303 
               00304 udata_main_6    udata
               00305 _ReloadActivePreset     res     1
               00306 
               00307 udata_main_7    udata
               00308 _ForceStartupPreset     res     1
               00309 
               00310 udata_main_8    udata
               00311 _ThisStartupPreset      res     1
               00312 
               00313 udata_main_9    udata
               00314 _FootPreset     res     4
               00315 
               00316 udata_main_10   udata
               00317 _LoadPreset_TargetRelayState_1_1        res     8
               00318 
               00319 udata_main_11   udata
               00320 _LastButton     res     1
               00321 
               00322 udata_main_12   udata
               00323 _MenuPos        res     1
               00324 
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325 udata_main_13   udata
               00326 _MidiIn res     1
               00327 
               00328 udata_main_14   udata
               00329 _TargetPreset   res     1
               00330 
               00331 ;--------------------------------------------------------
               00332 ; global & static initialisations
               00333 ;--------------------------------------------------------
               00334 ; I code from now on!
               00335 ; ; Starting pCode block
               00336 S_main__AIN_NotifyChange        code
0000           00337 _AIN_NotifyChange:
               00338 ;       .line   1581; main.c    void AIN_NotifyChange(unsigned char pin, unsigned int pin_value) __wparam
0000 CFD9 FFED 00339         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00340         MOVFF   FSR1L, FSR2L
               00341 ;       .line   1583; main.c    }
0008 CFEC FFD9 00342         MOVFF   PREINC1, FSR2L
000C 0012      00343         RETURN  
               00344 
               00345 ; ; Starting pCode block
               00346 S_main__ENC_NotifyChange        code
0000           00347 _ENC_NotifyChange:
               00348 ;       .line   1574; main.c    void ENC_NotifyChange(unsigned char encoder, char incrementer) __wparam
0000 CFD9 FFED 00349         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00350         MOVFF   FSR1L, FSR2L
               00351 ;       .line   1576; main.c    }
0008 CFEC FFD9 00352         MOVFF   PREINC1, FSR2L
000C 0012      00353         RETURN  
               00354 
               00355 ; ; Starting pCode block
               00356 S_main__DIN_NotifyToggle        code
0000           00357 _DIN_NotifyToggle:
               00358 ;       .line   1511; main.c    void DIN_NotifyToggle(unsigned char pin, unsigned char pin_value) __wparam
0000 CFD9 FFED 00359         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00360         MOVFF   FSR1L, FSR2L
0008 C000 FFED 00361         MOVFF   r0x00, POSTDEC1
000C C000 FFED 00362         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 00363         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 00364         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 00365         MOVFF   r0x04, POSTDEC1
001C C000 FFED 00366         MOVFF   r0x05, POSTDEC1
0020 6E00      00367         MOVWF   r0x00
0022 0E02      00368         MOVLW   0x02
0024 CFDB F000 00369         MOVFF   PLUSW2, r0x01
               00370 ;       .line   1516; main.c    number = FootButton(pin);
0028 5000      00371         MOVF    r0x00, W
002A 6EED      00372         MOVWF   POSTDEC1
002C EC00 F000 00373         CALL    _FootButton
0030 6E00      00374         MOVWF   r0x02
0032 2AE9      00375         INCF    FSR1L, F
               00376 ;       .line   1517; main.c    if ( number > 0)
0034 5000      00377         MOVF    r0x02, W
0036 B4D8      00378         BTFSC   STATUS, 2
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 D000      00379         BRA     _00726_DS_
               00380 ;       .line   1520; main.c    DEBUG_MSG_SendHeader();
003A EC00 F000 00381         CALL    _DEBUG_MSG_SendHeader
               00382 ;       .line   1521; main.c    DEBUG_MSG_SendCString("Footswitch: ");
003E 0E00      00383         MOVLW   UPPER(__str_71)
0040 6EED      00384         MOVWF   POSTDEC1
0042 0E00      00385         MOVLW   HIGH(__str_71)
0044 6EED      00386         MOVWF   POSTDEC1
0046 0E00      00387         MOVLW   LOW(__str_71)
0048 EC00 F000 00388         CALL    _DEBUG_MSG_SendCString
004C 0E02      00389         MOVLW   0x02
004E 26E9      00390         ADDWF   FSR1L, F
               00391 ;       .line   1522; main.c    DEBUG_MSG_SendBCD3(pin);
0050 5000      00392         MOVF    r0x00, W
0052 EC00 F000 00393         CALL    _DEBUG_MSG_SendBCD3
               00394 ;       .line   1523; main.c    DEBUG_MSG_SendChar(' ');
0056 0E20      00395         MOVLW   0x20
0058 EC00 F000 00396         CALL    _DEBUG_MSG_SendChar
               00397 ;       .line   1524; main.c    DEBUG_MSG_SendCString(pin_value ? "depressed" : "pressed");
005C 5000      00398         MOVF    r0x01, W
005E E000      00399         BZ      _00738_DS_
0060 0E00      00400         MOVLW   LOW(__str_72)
0062 6E00      00401         MOVWF   r0x03
0064 0E00      00402         MOVLW   HIGH(__str_72)
0066 6E00      00403         MOVWF   r0x04
0068 0E00      00404         MOVLW   UPPER(__str_72)
006A 6E00      00405         MOVWF   r0x05
006C D000      00406         BRA     _00739_DS_
006E           00407 _00738_DS_:
006E 0E00      00408         MOVLW   LOW(__str_73)
0070 6E00      00409         MOVWF   r0x03
0072 0E00      00410         MOVLW   HIGH(__str_73)
0074 6E00      00411         MOVWF   r0x04
0076 0E00      00412         MOVLW   UPPER(__str_73)
0078 6E00      00413         MOVWF   r0x05
007A           00414 _00739_DS_:
007A 5000      00415         MOVF    r0x05, W
007C 6EED      00416         MOVWF   POSTDEC1
007E 5000      00417         MOVF    r0x04, W
0080 6EED      00418         MOVWF   POSTDEC1
0082 5000      00419         MOVF    r0x03, W
0084 EC00 F000 00420         CALL    _DEBUG_MSG_SendCString
0088 0E02      00421         MOVLW   0x02
008A 26E9      00422         ADDWF   FSR1L, F
               00423 ;       .line   1525; main.c    DEBUG_MSG_SendFooter();
008C EC00 F000 00424         CALL    _DEBUG_MSG_SendFooter
               00425 ;       .line   1528; main.c    LoadPreset( FootPreset[number-1] );
0090 0400      00426         DECF    r0x02, W
0092 6E00      00427         MOVWF   r0x03
0094 6A00      00428         CLRF    r0x04
0096 0E00      00429         MOVLW   LOW(_FootPreset)
0098 2600      00430         ADDWF   r0x03, F
009A 0E00      00431         MOVLW   HIGH(_FootPreset)
009C 2200      00432         ADDWFC  r0x04, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E C000 FFE1 00433         MOVFF   r0x03, FSR0L
00A2 C000 FFE2 00434         MOVFF   r0x04, FSR0H
00A6 CFE7 F000 00435         MOVFF   INDF0, r0x03
00AA 5000      00436         MOVF    r0x03, W
00AC 6EED      00437         MOVWF   POSTDEC1
00AE EC00 F000 00438         CALL    _LoadPreset
00B2 2AE9      00439         INCF    FSR1L, F
               00440 ;       .line   1529; main.c    return;
00B4 D000      00441         BRA     _00736_DS_
00B6           00442 _00726_DS_:
               00443 ;       .line   1533; main.c    if( pin_value == 0 ) 
00B6 5000      00444         MOVF    r0x01, W
00B8 A4D8      00445         BTFSS   STATUS, 2
00BA D000      00446         BRA     _00736_DS_
               00447 ;       .line   1536; main.c    DEBUG_MSG_SendHeader();
00BC EC00 F000 00448         CALL    _DEBUG_MSG_SendHeader
               00449 ;       .line   1537; main.c    DEBUG_MSG_SendCString("Button: ");
00C0 0E00      00450         MOVLW   UPPER(__str_74)
00C2 6EED      00451         MOVWF   POSTDEC1
00C4 0E00      00452         MOVLW   HIGH(__str_74)
00C6 6EED      00453         MOVWF   POSTDEC1
00C8 0E00      00454         MOVLW   LOW(__str_74)
00CA EC00 F000 00455         CALL    _DEBUG_MSG_SendCString
00CE 0E02      00456         MOVLW   0x02
00D0 26E9      00457         ADDWF   FSR1L, F
               00458 ;       .line   1538; main.c    DEBUG_MSG_SendBCD3(pin);
00D2 5000      00459         MOVF    r0x00, W
00D4 EC00 F000 00460         CALL    _DEBUG_MSG_SendBCD3
               00461 ;       .line   1539; main.c    DEBUG_MSG_SendChar(' ');
00D8 0E20      00462         MOVLW   0x20
00DA EC00 F000 00463         CALL    _DEBUG_MSG_SendChar
               00464 ;       .line   1540; main.c    DEBUG_MSG_SendCString(pin_value ? "depressed" : "pressed");
00DE 5000      00465         MOVF    r0x01, W
00E0 E000      00466         BZ      _00740_DS_
00E2 0E00      00467         MOVLW   LOW(__str_72)
00E4 6E00      00468         MOVWF   r0x01
00E6 0E00      00469         MOVLW   HIGH(__str_72)
00E8 6E00      00470         MOVWF   r0x03
00EA 0E00      00471         MOVLW   UPPER(__str_72)
00EC 6E00      00472         MOVWF   r0x04
00EE D000      00473         BRA     _00741_DS_
00F0           00474 _00740_DS_:
00F0 0E00      00475         MOVLW   LOW(__str_73)
00F2 6E00      00476         MOVWF   r0x01
00F4 0E00      00477         MOVLW   HIGH(__str_73)
00F6 6E00      00478         MOVWF   r0x03
00F8 0E00      00479         MOVLW   UPPER(__str_73)
00FA 6E00      00480         MOVWF   r0x04
00FC           00481 _00741_DS_:
00FC 5000      00482         MOVF    r0x04, W
00FE 6EED      00483         MOVWF   POSTDEC1
0100 5000      00484         MOVF    r0x03, W
0102 6EED      00485         MOVWF   POSTDEC1
0104 5000      00486         MOVF    r0x01, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0106 EC00 F000 00487         CALL    _DEBUG_MSG_SendCString
010A 0E02      00488         MOVLW   0x02
010C 26E9      00489         ADDWF   FSR1L, F
               00490 ;       .line   1541; main.c    DEBUG_MSG_SendFooter();
010E EC00 F000 00491         CALL    _DEBUG_MSG_SendFooter
               00492 ;       .line   1544; main.c    number = RelayButton(pin);
0112 5000      00493         MOVF    r0x00, W
0114 6EED      00494         MOVWF   POSTDEC1
0116 EC00 F000 00495         CALL    _RelayButton
011A 6E00      00496         MOVWF   r0x02
011C 2AE9      00497         INCF    FSR1L, F
               00498 ;       .line   1545; main.c    if ( number )
011E 5000      00499         MOVF    r0x02, W
0120 E000      00500         BZ      _00728_DS_
               00501 ;       .line   1548; main.c    DoRelay(number-1);
0122 0400      00502         DECF    r0x02, W
0124 6E00      00503         MOVWF   r0x01
0126 5000      00504         MOVF    r0x01, W
0128 6EED      00505         MOVWF   POSTDEC1
012A EC00 F000 00506         CALL    _DoRelay
012E 2AE9      00507         INCF    FSR1L, F
               00508 ;       .line   1549; main.c    return;
0130 D000      00509         BRA     _00736_DS_
0132           00510 _00728_DS_:
               00511 ;       .line   1552; main.c    number = MenuButton(pin);
0132 5000      00512         MOVF    r0x00, W
0134 6EED      00513         MOVWF   POSTDEC1
0136 EC00 F000 00514         CALL    _MenuButton
013A 6E00      00515         MOVWF   r0x02
013C 2AE9      00516         INCF    FSR1L, F
               00517 ;       .line   1553; main.c    if(( number == MENU_BUTTON_1 ) || ( number == MENU_BUTTON_2 ) ||
013E 5000      00518         MOVF    r0x02, W
0140 0A01      00519         XORLW   0x01
0142 E000      00520         BZ      _00729_DS_
0144 5000      00521         MOVF    r0x02, W
0146 0A02      00522         XORLW   0x02
0148 E000      00523         BZ      _00729_DS_
               00524 ;       .line   1554; main.c    ( number == MENU_BUTTON_3 ) || ( number == MENU_BUTTON_4 ))
014A 5000      00525         MOVF    r0x02, W
014C 0A03      00526         XORLW   0x03
014E E000      00527         BZ      _00729_DS_
0150 5000      00528         MOVF    r0x02, W
0152 0A04      00529         XORLW   0x04
0154 E100      00530         BNZ     _00730_DS_
0156           00531 _00729_DS_:
               00532 ;       .line   1556; main.c    LastButton = number;
0156 C000 F000 00533         MOVFF   r0x02, _LastButton
               00534 ;       .line   1557; main.c    return;
015A D000      00535         BRA     _00736_DS_
015C           00536 _00730_DS_:
               00537 ;       .line   1561; main.c    DEBUG_MSG_SendHeader();
015C EC00 F000 00538         CALL    _DEBUG_MSG_SendHeader
               00539 ;       .line   1562; main.c    DEBUG_MSG_SendCString("NOTHING TO DO IN DIN NOTIFY");
0160 0E00      00540         MOVLW   UPPER(__str_75)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0162 6EED      00541         MOVWF   POSTDEC1
0164 0E00      00542         MOVLW   HIGH(__str_75)
0166 6EED      00543         MOVWF   POSTDEC1
0168 0E00      00544         MOVLW   LOW(__str_75)
016A EC00 F000 00545         CALL    _DEBUG_MSG_SendCString
016E 0E02      00546         MOVLW   0x02
0170 26E9      00547         ADDWF   FSR1L, F
               00548 ;       .line   1563; main.c    DEBUG_MSG_SendFooter();
0172 EC00 F000 00549         CALL    _DEBUG_MSG_SendFooter
0176           00550 _00736_DS_:
0176 CFEC F000 00551         MOVFF   PREINC1, r0x05
017A CFEC F000 00552         MOVFF   PREINC1, r0x04
017E CFEC F000 00553         MOVFF   PREINC1, r0x03
0182 CFEC F000 00554         MOVFF   PREINC1, r0x02
0186 CFEC F000 00555         MOVFF   PREINC1, r0x01
018A CFEC F000 00556         MOVFF   PREINC1, r0x00
018E CFEC FFD9 00557         MOVFF   PREINC1, FSR2L
0192 0012      00558         RETURN  
               00559 
               00560 ; ; Starting pCode block
               00561 S_main__SR_Service_Finish       code
0000           00562 _SR_Service_Finish:
               00563 ;       .line   1505; main.c    }
0000 0012      00564         RETURN  
               00565 
               00566 ; ; Starting pCode block
               00567 S_main__SR_Service_Prepare      code
0000           00568 _SR_Service_Prepare:
               00569 ;       .line   1498; main.c    }
0000 0012      00570         RETURN  
               00571 
               00572 ; ; Starting pCode block
               00573 S_main__MPROC_NotifyReceivedByte        code
0000           00574 _MPROC_NotifyReceivedByte:
               00575 ;       .line   1489; main.c    void MPROC_NotifyReceivedByte(unsigned char byte) __wparam
0000 CFD9 FFED 00576         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00577         MOVFF   FSR1L, FSR2L
               00578 ;       .line   1491; main.c    }
0008 CFEC FFD9 00579         MOVFF   PREINC1, FSR2L
000C 0012      00580         RETURN  
               00581 
               00582 ; ; Starting pCode block
               00583 S_main__MPROC_NotifyTimeout     code
0000           00584 _MPROC_NotifyTimeout:
               00585 ;       .line   1484; main.c    }
0000 0012      00586         RETURN  
               00587 
               00588 ; ; Starting pCode block
               00589 S_main__MPROC_NotifyFoundEvent  code
0000           00590 _MPROC_NotifyFoundEvent:
               00591 ;       .line   1474; main.c    void MPROC_NotifyFoundEvent(unsigned entry, unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam
0000 CFD9 FFED 00592         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00593         MOVFF   FSR1L, FSR2L
               00594 ;       .line   1476; main.c    }
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 CFEC FFD9 00595         MOVFF   PREINC1, FSR2L
000C 0012      00596         RETURN  
               00597 
               00598 ; ; Starting pCode block
               00599 S_main__MPROC_NotifyReceivedEvnt        code
0000           00600 _MPROC_NotifyReceivedEvnt:
               00601 ;       .line   1327; main.c    void MPROC_NotifyReceivedEvnt(unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam
0000 CFD9 FFED 00602         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00603         MOVFF   FSR1L, FSR2L
0008 C000 FFED 00604         MOVFF   r0x00, POSTDEC1
000C C000 FFED 00605         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 00606         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 00607         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 00608         MOVFF   r0x04, POSTDEC1
001C C000 FFED 00609         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 00610         MOVFF   r0x06, POSTDEC1
0024 6E00      00611         MOVWF   r0x00
0026 0E02      00612         MOVLW   0x02
0028 CFDB F000 00613         MOVFF   PLUSW2, r0x01
002C 0E03      00614         MOVLW   0x03
002E CFDB F000 00615         MOVFF   PLUSW2, r0x02
               00616 ;       .line   1344; main.c    DEBUG_MSG_SendHeader();
0032 EC00 F000 00617         CALL    _DEBUG_MSG_SendHeader
               00618 ;       .line   1345; main.c    DEBUG_MSG_SendCString("Received Midi Message : ");
0036 0E00      00619         MOVLW   UPPER(__str_59)
0038 6EED      00620         MOVWF   POSTDEC1
003A 0E00      00621         MOVLW   HIGH(__str_59)
003C 6EED      00622         MOVWF   POSTDEC1
003E 0E00      00623         MOVLW   LOW(__str_59)
0040 EC00 F000 00624         CALL    _DEBUG_MSG_SendCString
0044 0E02      00625         MOVLW   0x02
0046 26E9      00626         ADDWF   FSR1L, F
               00627 ;       .line   1346; main.c    DEBUG_MSG_SendBCD3(evnt0);
0048 5000      00628         MOVF    r0x00, W
004A EC00 F000 00629         CALL    _DEBUG_MSG_SendBCD3
               00630 ;       .line   1347; main.c    DEBUG_MSG_SendChar(' ');
004E 0E20      00631         MOVLW   0x20
0050 EC00 F000 00632         CALL    _DEBUG_MSG_SendChar
               00633 ;       .line   1348; main.c    DEBUG_MSG_SendBCD3(evnt1);
0054 5000      00634         MOVF    r0x01, W
0056 EC00 F000 00635         CALL    _DEBUG_MSG_SendBCD3
               00636 ;       .line   1349; main.c    DEBUG_MSG_SendChar(' ');
005A 0E20      00637         MOVLW   0x20
005C EC00 F000 00638         CALL    _DEBUG_MSG_SendChar
               00639 ;       .line   1350; main.c    DEBUG_MSG_SendBCD3(evnt2);
0060 5000      00640         MOVF    r0x02, W
0062 EC00 F000 00641         CALL    _DEBUG_MSG_SendBCD3
               00642 ;       .line   1351; main.c    DEBUG_MSG_SendFooter();
0066 EC00 F000 00643         CALL    _DEBUG_MSG_SendFooter
               00644 ;       .line   1355; main.c    MidiIn = 1;
006A 0E01      00645         MOVLW   0x01
006C 0000      00646         BANKSEL _MidiIn
006E 6F00      00647         MOVWF   _MidiIn, B
0070 0000      00648         BANKSEL _MidiChannel
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00649 ;       .line   1358; main.c    if ( (MidiChannel!=0) && ((evnt0 & 0x0F) != (MidiChannel-1)) )
0072 5100      00650         MOVF    _MidiChannel, W, B
0074 E000      00651         BZ      _00658_DS_
0076 0E0F      00652         MOVLW   0x0f
0078 1400      00653         ANDWF   r0x00, W
007A 6E00      00654         MOVWF   r0x03
007C C000 F000 00655         MOVFF   _MidiChannel, r0x04
0080 6A00      00656         CLRF    r0x05
0082 0EFF      00657         MOVLW   0xff
0084 2600      00658         ADDWF   r0x04, F
0086 A0D8      00659         BTFSS   STATUS, 0
0088 0600      00660         DECF    r0x05, F
008A 6A00      00661         CLRF    r0x06
008C 5000      00662         MOVF    r0x03, W
008E 1800      00663         XORWF   r0x04, W
0090 E100      00664         BNZ     _00691_DS_
0092 5000      00665         MOVF    r0x06, W
0094 1800      00666         XORWF   r0x05, W
0096 E000      00667         BZ      _00658_DS_
0098           00668 _00691_DS_:
               00669 ;       .line   1362; main.c    DEBUG_MSG_SendHeader();
0098 EC00 F000 00670         CALL    _DEBUG_MSG_SendHeader
               00671 ;       .line   1363; main.c    DEBUG_MSG_SendCString("Ignored, Bad MIDI channel");
009C 0E00      00672         MOVLW   UPPER(__str_60)
009E 6EED      00673         MOVWF   POSTDEC1
00A0 0E00      00674         MOVLW   HIGH(__str_60)
00A2 6EED      00675         MOVWF   POSTDEC1
00A4 0E00      00676         MOVLW   LOW(__str_60)
00A6 EC00 F000 00677         CALL    _DEBUG_MSG_SendCString
00AA 0E02      00678         MOVLW   0x02
00AC 26E9      00679         ADDWF   FSR1L, F
               00680 ;       .line   1364; main.c    DEBUG_MSG_SendFooter();
00AE EC00 F000 00681         CALL    _DEBUG_MSG_SendFooter
               00682 ;       .line   1366; main.c    return;
00B2 D000      00683         BRA     _00678_DS_
00B4           00684 _00658_DS_:
               00685 ;       .line   1370; main.c    if ( (evnt0 & 0xF0) != 0xC0 ) //Program change messages only
00B4 0EF0      00686         MOVLW   0xf0
00B6 1400      00687         ANDWF   r0x00, W
00B8 6E00      00688         MOVWF   r0x03
00BA 5000      00689         MOVF    r0x03, W
00BC 0AC0      00690         XORLW   0xc0
00BE E000      00691         BZ      _00661_DS_
               00692 ;       .line   1374; main.c    DEBUG_MSG_SendHeader();
00C0 EC00 F000 00693         CALL    _DEBUG_MSG_SendHeader
               00694 ;       .line   1375; main.c    DEBUG_MSG_SendCString("Ignored, not a PC message");
00C4 0E00      00695         MOVLW   UPPER(__str_61)
00C6 6EED      00696         MOVWF   POSTDEC1
00C8 0E00      00697         MOVLW   HIGH(__str_61)
00CA 6EED      00698         MOVWF   POSTDEC1
00CC 0E00      00699         MOVLW   LOW(__str_61)
00CE EC00 F000 00700         CALL    _DEBUG_MSG_SendCString
00D2 0E02      00701         MOVLW   0x02
00D4 26E9      00702         ADDWF   FSR1L, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00703 ;       .line   1376; main.c    DEBUG_MSG_SendFooter();
00D6 EC00 F000 00704         CALL    _DEBUG_MSG_SendFooter
               00705 ;       .line   1378; main.c    return;
00DA D000      00706         BRA     _00678_DS_
00DC           00707 _00661_DS_:
               00708 ;       .line   1383; main.c    if ( evnt1 <= 99 ) 
00DC 0E64      00709         MOVLW   0x64
00DE 5C00      00710         SUBWF   r0x01, W
00E0 E200      00711         BC      _00676_DS_
               00712 ;       .line   1386; main.c    DEBUG_MSG_SendHeader();
00E2 EC00 F000 00713         CALL    _DEBUG_MSG_SendHeader
               00714 ;       .line   1387; main.c    DEBUG_MSG_SendCString("PC");
00E6 0E00      00715         MOVLW   UPPER(__str_62)
00E8 6EED      00716         MOVWF   POSTDEC1
00EA 0E00      00717         MOVLW   HIGH(__str_62)
00EC 6EED      00718         MOVWF   POSTDEC1
00EE 0E00      00719         MOVLW   LOW(__str_62)
00F0 EC00 F000 00720         CALL    _DEBUG_MSG_SendCString
00F4 0E02      00721         MOVLW   0x02
00F6 26E9      00722         ADDWF   FSR1L, F
               00723 ;       .line   1388; main.c    DEBUG_MSG_SendBCD3(evnt1);
00F8 5000      00724         MOVF    r0x01, W
00FA EC00 F000 00725         CALL    _DEBUG_MSG_SendBCD3
               00726 ;       .line   1389; main.c    DEBUG_MSG_SendCString(" : Loading preset");
00FE 0E00      00727         MOVLW   UPPER(__str_63)
0100 6EED      00728         MOVWF   POSTDEC1
0102 0E00      00729         MOVLW   HIGH(__str_63)
0104 6EED      00730         MOVWF   POSTDEC1
0106 0E00      00731         MOVLW   LOW(__str_63)
0108 EC00 F000 00732         CALL    _DEBUG_MSG_SendCString
010C 0E02      00733         MOVLW   0x02
010E 26E9      00734         ADDWF   FSR1L, F
               00735 ;       .line   1390; main.c    DEBUG_MSG_SendFooter();
0110 EC00 F000 00736         CALL    _DEBUG_MSG_SendFooter
               00737 ;       .line   1394; main.c    LoadPreset(evnt1+1);    // preset start @ 1
0114 2800      00738         INCF    r0x01, W
0116 6E00      00739         MOVWF   r0x03
0118 5000      00740         MOVF    r0x03, W
011A 6EED      00741         MOVWF   POSTDEC1
011C EC00 F000 00742         CALL    _LoadPreset
0120 2AE9      00743         INCF    FSR1L, F
0122 D000      00744         BRA     _00678_DS_
0124           00745 _00676_DS_:
               00746 ;       .line   1399; main.c    else if  (evnt1 <= 107 )
0124 0E6C      00747         MOVLW   0x6c
0126 5C00      00748         SUBWF   r0x01, W
0128 E200      00749         BC      _00673_DS_
               00750 ;       .line   1402; main.c    DEBUG_MSG_SendHeader();
012A EC00 F000 00751         CALL    _DEBUG_MSG_SendHeader
               00752 ;       .line   1403; main.c    DEBUG_MSG_SendCString("PC");
012E 0E00      00753         MOVLW   UPPER(__str_62)
0130 6EED      00754         MOVWF   POSTDEC1
0132 0E00      00755         MOVLW   HIGH(__str_62)
0134 6EED      00756         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0136 0E00      00757         MOVLW   LOW(__str_62)
0138 EC00 F000 00758         CALL    _DEBUG_MSG_SendCString
013C 0E02      00759         MOVLW   0x02
013E 26E9      00760         ADDWF   FSR1L, F
               00761 ;       .line   1404; main.c    DEBUG_MSG_SendBCD3(evnt1);
0140 5000      00762         MOVF    r0x01, W
0142 EC00 F000 00763         CALL    _DEBUG_MSG_SendBCD3
               00764 ;       .line   1405; main.c    DEBUG_MSG_SendCString(" : Toggle Relay");
0146 0E00      00765         MOVLW   UPPER(__str_64)
0148 6EED      00766         MOVWF   POSTDEC1
014A 0E00      00767         MOVLW   HIGH(__str_64)
014C 6EED      00768         MOVWF   POSTDEC1
014E 0E00      00769         MOVLW   LOW(__str_64)
0150 EC00 F000 00770         CALL    _DEBUG_MSG_SendCString
0154 0E02      00771         MOVLW   0x02
0156 26E9      00772         ADDWF   FSR1L, F
               00773 ;       .line   1406; main.c    DEBUG_MSG_SendBCD3(evnt1-99);
0158 0E9D      00774         MOVLW   0x9d
015A 2400      00775         ADDWF   r0x01, W
015C 6E00      00776         MOVWF   r0x03
015E 5000      00777         MOVF    r0x03, W
0160 EC00 F000 00778         CALL    _DEBUG_MSG_SendBCD3
               00779 ;       .line   1407; main.c    DEBUG_MSG_SendCString(" Status");
0164 0E00      00780         MOVLW   UPPER(__str_65)
0166 6EED      00781         MOVWF   POSTDEC1
0168 0E00      00782         MOVLW   HIGH(__str_65)
016A 6EED      00783         MOVWF   POSTDEC1
016C 0E00      00784         MOVLW   LOW(__str_65)
016E EC00 F000 00785         CALL    _DEBUG_MSG_SendCString
0172 0E02      00786         MOVLW   0x02
0174 26E9      00787         ADDWF   FSR1L, F
               00788 ;       .line   1408; main.c    DEBUG_MSG_SendFooter();
0176 EC00 F000 00789         CALL    _DEBUG_MSG_SendFooter
               00790 ;       .line   1411; main.c    DoRelay(evnt1-100);     // relays start @ 0
017A 0E9C      00791         MOVLW   0x9c
017C 2400      00792         ADDWF   r0x01, W
017E 6E00      00793         MOVWF   r0x03
0180 5000      00794         MOVF    r0x03, W
0182 6EED      00795         MOVWF   POSTDEC1
0184 EC00 F000 00796         CALL    _DoRelay
0188 2AE9      00797         INCF    FSR1L, F
018A D000      00798         BRA     _00678_DS_
018C           00799 _00673_DS_:
               00800 ;       .line   1416; main.c    else if ( evnt1 == 108 )
018C 5000      00801         MOVF    r0x01, W
018E 0A6C      00802         XORLW   0x6c
0190 E100      00803         BNZ     _00670_DS_
               00804 ;       .line   1419; main.c    DEBUG_MSG_SendHeader();
0192 EC00 F000 00805         CALL    _DEBUG_MSG_SendHeader
               00806 ;       .line   1420; main.c    DEBUG_MSG_SendCString("PC109 : Up one preset");
0196 0E00      00807         MOVLW   UPPER(__str_66)
0198 6EED      00808         MOVWF   POSTDEC1
019A 0E00      00809         MOVLW   HIGH(__str_66)
019C 6EED      00810         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
019E 0E00      00811         MOVLW   LOW(__str_66)
01A0 EC00 F000 00812         CALL    _DEBUG_MSG_SendCString
01A4 0E02      00813         MOVLW   0x02
01A6 26E9      00814         ADDWF   FSR1L, F
               00815 ;       .line   1421; main.c    DEBUG_MSG_SendCString("from");
01A8 0E00      00816         MOVLW   UPPER(__str_67)
01AA 6EED      00817         MOVWF   POSTDEC1
01AC 0E00      00818         MOVLW   HIGH(__str_67)
01AE 6EED      00819         MOVWF   POSTDEC1
01B0 0E00      00820         MOVLW   LOW(__str_67)
01B2 EC00 F000 00821         CALL    _DEBUG_MSG_SendCString
01B6 0E02      00822         MOVLW   0x02
01B8 26E9      00823         ADDWF   FSR1L, F
01BA 0000      00824         BANKSEL _CurrentPreset
               00825 ;       .line   1422; main.c    DEBUG_MSG_SendBCD3(CurrentPreset);
01BC 5100      00826         MOVF    _CurrentPreset, W, B
01BE EC00 F000 00827         CALL    _DEBUG_MSG_SendBCD3
               00828 ;       .line   1423; main.c    DEBUG_MSG_SendCString("to");
01C2 0E00      00829         MOVLW   UPPER(__str_68)
01C4 6EED      00830         MOVWF   POSTDEC1
01C6 0E00      00831         MOVLW   HIGH(__str_68)
01C8 6EED      00832         MOVWF   POSTDEC1
01CA 0E00      00833         MOVLW   LOW(__str_68)
01CC EC00 F000 00834         CALL    _DEBUG_MSG_SendCString
01D0 0E02      00835         MOVLW   0x02
01D2 26E9      00836         ADDWF   FSR1L, F
               00837 ;       .line   1424; main.c    DEBUG_MSG_SendBCD3(evnt1);
01D4 5000      00838         MOVF    r0x01, W
01D6 EC00 F000 00839         CALL    _DEBUG_MSG_SendBCD3
               00840 ;       .line   1425; main.c    DEBUG_MSG_SendFooter();
01DA EC00 F000 00841         CALL    _DEBUG_MSG_SendFooter
               00842 ;       .line   1429; main.c    if(!Preset_Up())
01DE EC00 F000 00843         CALL    _Preset_Up
01E2 6E00      00844         MOVWF   r0x03
01E4 5000      00845         MOVF    r0x03, W
01E6 A4D8      00846         BTFSS   STATUS, 2
01E8 D000      00847         BRA     _00678_DS_
               00848 ;       .line   1430; main.c    { return;}
01EA D000      00849         BRA     _00678_DS_
01EC           00850 _00670_DS_:
               00851 ;       .line   1433; main.c    else if ( evnt1 == 109 )
01EC 5000      00852         MOVF    r0x01, W
01EE 0A6D      00853         XORLW   0x6d
01F0 E100      00854         BNZ     _00667_DS_
               00855 ;       .line   1436; main.c    DEBUG_MSG_SendHeader();
01F2 EC00 F000 00856         CALL    _DEBUG_MSG_SendHeader
               00857 ;       .line   1437; main.c    DEBUG_MSG_SendCString("PC109 : Up one preset");
01F6 0E00      00858         MOVLW   UPPER(__str_66)
01F8 6EED      00859         MOVWF   POSTDEC1
01FA 0E00      00860         MOVLW   HIGH(__str_66)
01FC 6EED      00861         MOVWF   POSTDEC1
01FE 0E00      00862         MOVLW   LOW(__str_66)
0200 EC00 F000 00863         CALL    _DEBUG_MSG_SendCString
0204 0E02      00864         MOVLW   0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0206 26E9      00865         ADDWF   FSR1L, F
               00866 ;       .line   1438; main.c    DEBUG_MSG_SendCString("from");
0208 0E00      00867         MOVLW   UPPER(__str_67)
020A 6EED      00868         MOVWF   POSTDEC1
020C 0E00      00869         MOVLW   HIGH(__str_67)
020E 6EED      00870         MOVWF   POSTDEC1
0210 0E00      00871         MOVLW   LOW(__str_67)
0212 EC00 F000 00872         CALL    _DEBUG_MSG_SendCString
0216 0E02      00873         MOVLW   0x02
0218 26E9      00874         ADDWF   FSR1L, F
021A 0000      00875         BANKSEL _CurrentPreset
               00876 ;       .line   1439; main.c    DEBUG_MSG_SendBCD3(CurrentPreset);
021C 5100      00877         MOVF    _CurrentPreset, W, B
021E EC00 F000 00878         CALL    _DEBUG_MSG_SendBCD3
               00879 ;       .line   1440; main.c    DEBUG_MSG_SendCString("to");
0222 0E00      00880         MOVLW   UPPER(__str_68)
0224 6EED      00881         MOVWF   POSTDEC1
0226 0E00      00882         MOVLW   HIGH(__str_68)
0228 6EED      00883         MOVWF   POSTDEC1
022A 0E00      00884         MOVLW   LOW(__str_68)
022C EC00 F000 00885         CALL    _DEBUG_MSG_SendCString
0230 0E02      00886         MOVLW   0x02
0232 26E9      00887         ADDWF   FSR1L, F
               00888 ;       .line   1441; main.c    DEBUG_MSG_SendBCD3(evnt1);
0234 5000      00889         MOVF    r0x01, W
0236 EC00 F000 00890         CALL    _DEBUG_MSG_SendBCD3
               00891 ;       .line   1442; main.c    DEBUG_MSG_SendFooter();
023A EC00 F000 00892         CALL    _DEBUG_MSG_SendFooter
               00893 ;       .line   1446; main.c    if(!Preset_Down())
023E EC00 F000 00894         CALL    _Preset_Down
0242 6E00      00895         MOVWF   r0x03
0244 5000      00896         MOVF    r0x03, W
0246 E100      00897         BNZ     _00678_DS_
               00898 ;       .line   1447; main.c    { return;}
0248 D000      00899         BRA     _00678_DS_
024A           00900 _00667_DS_:
               00901 ;       .line   1455; main.c    DEBUG_MSG_SendHeader();
024A EC00 F000 00902         CALL    _DEBUG_MSG_SendHeader
               00903 ;       .line   1456; main.c    DEBUG_MSG_SendCString("Ignored Midi In message: ");
024E 0E00      00904         MOVLW   UPPER(__str_69)
0250 6EED      00905         MOVWF   POSTDEC1
0252 0E00      00906         MOVLW   HIGH(__str_69)
0254 6EED      00907         MOVWF   POSTDEC1
0256 0E00      00908         MOVLW   LOW(__str_69)
0258 EC00 F000 00909         CALL    _DEBUG_MSG_SendCString
025C 0E02      00910         MOVLW   0x02
025E 26E9      00911         ADDWF   FSR1L, F
               00912 ;       .line   1457; main.c    DEBUG_MSG_SendBCD3(evnt0);
0260 5000      00913         MOVF    r0x00, W
0262 EC00 F000 00914         CALL    _DEBUG_MSG_SendBCD3
               00915 ;       .line   1458; main.c    DEBUG_MSG_SendChar(' ');
0266 0E20      00916         MOVLW   0x20
0268 EC00 F000 00917         CALL    _DEBUG_MSG_SendChar
               00918 ;       .line   1459; main.c    DEBUG_MSG_SendBCD3(evnt1);
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
026C 5000      00919         MOVF    r0x01, W
026E EC00 F000 00920         CALL    _DEBUG_MSG_SendBCD3
               00921 ;       .line   1460; main.c    DEBUG_MSG_SendChar(' ');
0272 0E20      00922         MOVLW   0x20
0274 EC00 F000 00923         CALL    _DEBUG_MSG_SendChar
               00924 ;       .line   1461; main.c    DEBUG_MSG_SendBCD3(evnt2);
0278 5000      00925         MOVF    r0x02, W
027A EC00 F000 00926         CALL    _DEBUG_MSG_SendBCD3
               00927 ;       .line   1462; main.c    DEBUG_MSG_SendCString("PC number too high");
027E 0E00      00928         MOVLW   UPPER(__str_70)
0280 6EED      00929         MOVWF   POSTDEC1
0282 0E00      00930         MOVLW   HIGH(__str_70)
0284 6EED      00931         MOVWF   POSTDEC1
0286 0E00      00932         MOVLW   LOW(__str_70)
0288 EC00 F000 00933         CALL    _DEBUG_MSG_SendCString
028C 0E02      00934         MOVLW   0x02
028E 26E9      00935         ADDWF   FSR1L, F
               00936 ;       .line   1463; main.c    DEBUG_MSG_SendFooter();
0290 EC00 F000 00937         CALL    _DEBUG_MSG_SendFooter
0294           00938 _00678_DS_:
               00939 ;       .line   1465; main.c    return;
0294 CFEC F000 00940         MOVFF   PREINC1, r0x06
0298 CFEC F000 00941         MOVFF   PREINC1, r0x05
029C CFEC F000 00942         MOVFF   PREINC1, r0x04
02A0 CFEC F000 00943         MOVFF   PREINC1, r0x03
02A4 CFEC F000 00944         MOVFF   PREINC1, r0x02
02A8 CFEC F000 00945         MOVFF   PREINC1, r0x01
02AC CFEC F000 00946         MOVFF   PREINC1, r0x00
02B0 CFEC FFD9 00947         MOVFF   PREINC1, FSR2L
02B4 0012      00948         RETURN  
               00949 
               00950 ; ; Starting pCode block
               00951 S_main__DISPLAY_Tick    code
0000           00952 _DISPLAY_Tick:
0000 0000      00953         BANKSEL _MidiIn
               00954 ;       .line   1314; main.c    if ( MidiIn )
0002 5100      00955         MOVF    _MidiIn, W, B
0004 E000      00956         BZ      _00652_DS_
               00957 ;       .line   1317; main.c    MIOS_LCD_CursorSet(0x00 + 15);
0006 0E0F      00958         MOVLW   0x0f
0008 EC00 F000 00959         CALL    _MIOS_LCD_CursorSet
               00960 ;       .line   1318; main.c    MIOS_LCD_PrintChar('M');
000C 0E4D      00961         MOVLW   0x4d
000E EC00 F000 00962         CALL    _MIOS_LCD_PrintChar
               00963 ;       .line   1319; main.c    MIOS_LCD_MessageStart(40);
0012 0E28      00964         MOVLW   0x28
0014 EC00 F000 00965         CALL    _MIOS_LCD_MessageStart
0018 0000      00966         BANKSEL _MidiIn
               00967 ;       .line   1320; main.c    MidiIn=0;
001A 6B00      00968         CLRF    _MidiIn, B
001C           00969 _00652_DS_:
001C 0012      00970         RETURN  
               00971 
               00972 ; ; Starting pCode block
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00973 S_main__DISPLAY_Init    code
0000           00974 _DISPLAY_Init:
               00975 ;       .line   1297; main.c    MIOS_LCD_Clear();
0000 EC00 F000 00976         CALL    _MIOS_LCD_Clear
               00977 ;       .line   1298; main.c    MIOS_LCD_CursorSet(0x00 + 0);
0004 0E00      00978         MOVLW   0x00
0006 EC00 F000 00979         CALL    _MIOS_LCD_CursorSet
               00980 ;       .line   1299; main.c    MIOS_LCD_PrintCString("PROG");
000A 0E00      00981         MOVLW   UPPER(__str_56)
000C 6EED      00982         MOVWF   POSTDEC1
000E 0E00      00983         MOVLW   HIGH(__str_56)
0010 6EED      00984         MOVWF   POSTDEC1
0012 0E00      00985         MOVLW   LOW(__str_56)
0014 EC00 F000 00986         CALL    _MIOS_LCD_PrintCString
0018 0E02      00987         MOVLW   0x02
001A 26E9      00988         ADDWF   FSR1L, F
               00989 ;       .line   1300; main.c    MIOS_LCD_CursorSet(0x40 + 0);
001C 0E40      00990         MOVLW   0x40
001E EC00 F000 00991         CALL    _MIOS_LCD_CursorSet
               00992 ;       .line   1301; main.c    MIOS_LCD_PrintCString("OPTS");
0022 0E00      00993         MOVLW   UPPER(__str_57)
0024 6EED      00994         MOVWF   POSTDEC1
0026 0E00      00995         MOVLW   HIGH(__str_57)
0028 6EED      00996         MOVWF   POSTDEC1
002A 0E00      00997         MOVLW   LOW(__str_57)
002C EC00 F000 00998         CALL    _MIOS_LCD_PrintCString
0030 0E02      00999         MOVLW   0x02
0032 26E9      01000         ADDWF   FSR1L, F
               01001 ;       .line   1302; main.c    MIOS_LCD_CursorSet(0x00 + 6);
0034 0E06      01002         MOVLW   0x06
0036 EC00 F000 01003         CALL    _MIOS_LCD_CursorSet
               01004 ;       .line   1303; main.c    MIOS_LCD_PrintCString("Preset ");
003A 0E00      01005         MOVLW   UPPER(__str_58)
003C 6EED      01006         MOVWF   POSTDEC1
003E 0E00      01007         MOVLW   HIGH(__str_58)
0040 6EED      01008         MOVWF   POSTDEC1
0042 0E00      01009         MOVLW   LOW(__str_58)
0044 EC00 F000 01010         CALL    _MIOS_LCD_PrintCString
0048 0E02      01011         MOVLW   0x02
004A 26E9      01012         ADDWF   FSR1L, F
               01013 ;       .line   1304; main.c    MIOS_LCD_CursorSet(0x40 + 8);
004C 0E48      01014         MOVLW   0x48
004E EC00 F000 01015         CALL    _MIOS_LCD_CursorSet
0052 0000      01016         BANKSEL _CurrentPreset
               01017 ;       .line   1305; main.c    MIOS_LCD_PrintBCD3(CurrentPreset);
0054 5100      01018         MOVF    _CurrentPreset, W, B
0056 EC00 F000 01019         CALL    _MIOS_LCD_PrintBCD3
005A 0012      01020         RETURN  
               01021 
               01022 ; ; Starting pCode block
               01023 S_main__Timer   code
0000           01024 _Timer:
               01025 ;       .line   1288; main.c    }
0000 0012      01026         RETURN  
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01027 
               01028 ; ; Starting pCode block
               01029 S_main__Tick    code
0000           01030 _Tick:
               01031 ;       .line   895; main.c     void Tick(void) __wparam
0000 C000 FFED 01032         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 01033         MOVFF   r0x01, POSTDEC1
0008 C000 FFED 01034         MOVFF   r0x02, POSTDEC1
000C C000 FFED 01035         MOVFF   r0x03, POSTDEC1
0010 C000 FFED 01036         MOVFF   r0x04, POSTDEC1
0014 C000 FFED 01037         MOVFF   r0x05, POSTDEC1
0018 0000      01038         BANKSEL _MenuPos
               01039 ;       .line   898; main.c     if ( MenuPos == 0 ) // default screen
001A 5100      01040         MOVF    _MenuPos, W, B
001C A4D8      01041         BTFSS   STATUS, 2
001E D000      01042         BRA     _00562_DS_
               01043 ;       .line   900; main.c     switch (LastButton)
0020 0E05      01044         MOVLW   0x05
0022 0000      01045         BANKSEL _LastButton
0024 5D00      01046         SUBWF   _LastButton, W, B
0026 B0D8      01047         BTFSC   STATUS, 0
0028 EF00 F000 01048         GOTO    _00563_DS_
002C C000 FFED 01049         MOVFF   r0x06, POSTDEC1
0030 C000 FFED 01050         MOVFF   r0x07, POSTDEC1
0034 6A00      01051         CLRF    r0x07
               01052 ; removed redundant BANKSEL
0036 3500      01053         RLCF    _LastButton, W, B
0038 3600      01054         RLCF    r0x07, F
003A 34E8      01055         RLCF    WREG, W
003C 3600      01056         RLCF    r0x07, F
003E 0BFC      01057         ANDLW   0xfc
0040 6E00      01058         MOVWF   r0x06
0042 0E00      01059         MOVLW   UPPER(_00621_DS_)
0044 6EFB      01060         MOVWF   PCLATU
0046 0E00      01061         MOVLW   HIGH(_00621_DS_)
0048 6EFA      01062         MOVWF   PCLATH
004A 0E00      01063         MOVLW   LOW(_00621_DS_)
004C 2600      01064         ADDWF   r0x06, F
004E 5000      01065         MOVF    r0x07, W
0050 22FA      01066         ADDWFC  PCLATH, F
0052 B0D8      01067         BTFSC   STATUS, 0
0054 2AFB      01068         INCF    PCLATU, F
0056 5000      01069         MOVF    r0x06, W
0058 CFEC F000 01070         MOVFF   PREINC1, r0x07
005C CFEC F000 01071         MOVFF   PREINC1, r0x06
0060 6EF9      01072         MOVWF   PCL
0062           01073 _00621_DS_:
0062 EF00 F000 01074         GOTO    _00432_DS_
0066 EF00 F000 01075         GOTO    _00433_DS_
006A EF00 F000 01076         GOTO    _00434_DS_
006E EF00 F000 01077         GOTO    _00435_DS_
0072 EF00 F000 01078         GOTO    _00436_DS_
0076           01079 _00432_DS_:
               01080 ;       .line   903; main.c     break;
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0076 EF00 F000 01081         GOTO    _00563_DS_
007A           01082 _00433_DS_:
               01083 ;       .line   907; main.c     MenuPos = 1;
007A 0E01      01084         MOVLW   0x01
007C 0000      01085         BANKSEL _MenuPos
007E 6F00      01086         MOVWF   _MenuPos, B
               01087 ;       .line   909; main.c     TargetPreset = CurrentPreset;
0080 C000 F000 01088         MOVFF   _CurrentPreset, _TargetPreset
               01089 ;       .line   910; main.c     MIOS_LCD_Clear();
0084 EC00 F000 01090         CALL    _MIOS_LCD_Clear
               01091 ;       .line   911; main.c     MIOS_LCD_CursorSet(0x00 + 0);
0088 0E00      01092         MOVLW   0x00
008A EC00 F000 01093         CALL    _MIOS_LCD_CursorSet
               01094 ;       .line   912; main.c     MIOS_LCD_PrintCString("SAVE");
008E 0E00      01095         MOVLW   UPPER(__str_28)
0090 6EED      01096         MOVWF   POSTDEC1
0092 0E00      01097         MOVLW   HIGH(__str_28)
0094 6EED      01098         MOVWF   POSTDEC1
0096 0E00      01099         MOVLW   LOW(__str_28)
0098 EC00 F000 01100         CALL    _MIOS_LCD_PrintCString
009C 0E02      01101         MOVLW   0x02
009E 26E9      01102         ADDWF   FSR1L, F
               01103 ;       .line   913; main.c     MIOS_LCD_CursorSet(0x40 + 0);
00A0 0E40      01104         MOVLW   0x40
00A2 EC00 F000 01105         CALL    _MIOS_LCD_CursorSet
               01106 ;       .line   914; main.c     MIOS_LCD_PrintCString("BACK");
00A6 0E00      01107         MOVLW   UPPER(__str_29)
00A8 6EED      01108         MOVWF   POSTDEC1
00AA 0E00      01109         MOVLW   HIGH(__str_29)
00AC 6EED      01110         MOVWF   POSTDEC1
00AE 0E00      01111         MOVLW   LOW(__str_29)
00B0 EC00 F000 01112         CALL    _MIOS_LCD_PrintCString
00B4 0E02      01113         MOVLW   0x02
00B6 26E9      01114         ADDWF   FSR1L, F
               01115 ;       .line   915; main.c     MIOS_LCD_CursorSet(0x00 + 6);
00B8 0E06      01116         MOVLW   0x06
00BA EC00 F000 01117         CALL    _MIOS_LCD_CursorSet
               01118 ;       .line   916; main.c     MIOS_LCD_PrintCString("to preset ");
00BE 0E00      01119         MOVLW   UPPER(__str_30)
00C0 6EED      01120         MOVWF   POSTDEC1
00C2 0E00      01121         MOVLW   HIGH(__str_30)
00C4 6EED      01122         MOVWF   POSTDEC1
00C6 0E00      01123         MOVLW   LOW(__str_30)
00C8 EC00 F000 01124         CALL    _MIOS_LCD_PrintCString
00CC 0E02      01125         MOVLW   0x02
00CE 26E9      01126         ADDWF   FSR1L, F
               01127 ;       .line   917; main.c     MIOS_LCD_CursorSet(0x40 + 8);
00D0 0E48      01128         MOVLW   0x48
00D2 EC00 F000 01129         CALL    _MIOS_LCD_CursorSet
00D6 0000      01130         BANKSEL _TargetPreset
               01131 ;       .line   918; main.c     MIOS_LCD_PrintBCD3(TargetPreset);
00D8 5100      01132         MOVF    _TargetPreset, W, B
00DA EC00 F000 01133         CALL    _MIOS_LCD_PrintBCD3
               01134 ;       .line   919; main.c     break;
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE EF00 F000 01135         GOTO    _00563_DS_
00E2           01136 _00434_DS_:
               01137 ;       .line   923; main.c     MenuPos = 6;
00E2 0E06      01138         MOVLW   0x06
00E4 0000      01139         BANKSEL _MenuPos
00E6 6F00      01140         MOVWF   _MenuPos, B
               01141 ;       .line   925; main.c     TargetPreset = CurrentPreset;
00E8 C000 F000 01142         MOVFF   _CurrentPreset, _TargetPreset
               01143 ;       .line   926; main.c     MIOS_LCD_Clear();
00EC EC00 F000 01144         CALL    _MIOS_LCD_Clear
               01145 ;       .line   927; main.c     MIOS_LCD_CursorSet(0x00 + 0);
00F0 0E00      01146         MOVLW   0x00
00F2 EC00 F000 01147         CALL    _MIOS_LCD_CursorSet
               01148 ;       .line   928; main.c     MIOS_LCD_PrintCString(">");
00F6 0E00      01149         MOVLW   UPPER(__str_31)
00F8 6EED      01150         MOVWF   POSTDEC1
00FA 0E00      01151         MOVLW   HIGH(__str_31)
00FC 6EED      01152         MOVWF   POSTDEC1
00FE 0E00      01153         MOVLW   LOW(__str_31)
0100 EC00 F000 01154         CALL    _MIOS_LCD_PrintCString
0104 0E02      01155         MOVLW   0x02
0106 26E9      01156         ADDWF   FSR1L, F
               01157 ;       .line   929; main.c     MIOS_LCD_CursorSet(0x40 + 0);
0108 0E40      01158         MOVLW   0x40
010A EC00 F000 01159         CALL    _MIOS_LCD_CursorSet
               01160 ;       .line   930; main.c     MIOS_LCD_PrintCString("Q");
010E 0E00      01161         MOVLW   UPPER(__str_32)
0110 6EED      01162         MOVWF   POSTDEC1
0112 0E00      01163         MOVLW   HIGH(__str_32)
0114 6EED      01164         MOVWF   POSTDEC1
0116 0E00      01165         MOVLW   LOW(__str_32)
0118 EC00 F000 01166         CALL    _MIOS_LCD_PrintCString
011C 0E02      01167         MOVLW   0x02
011E 26E9      01168         ADDWF   FSR1L, F
               01169 ;       .line   931; main.c     MIOS_LCD_CursorSet(0x00 + 1);
0120 0E01      01170         MOVLW   0x01
0122 EC00 F000 01171         CALL    _MIOS_LCD_CursorSet
               01172 ;       .line   932; main.c     MIOS_LCD_PrintCString("  Footswitch 1  ");
0126 0E00      01173         MOVLW   UPPER(__str_33)
0128 6EED      01174         MOVWF   POSTDEC1
012A 0E00      01175         MOVLW   HIGH(__str_33)
012C 6EED      01176         MOVWF   POSTDEC1
012E 0E00      01177         MOVLW   LOW(__str_33)
0130 EC00 F000 01178         CALL    _MIOS_LCD_PrintCString
0134 0E02      01179         MOVLW   0x02
0136 26E9      01180         ADDWF   FSR1L, F
               01181 ;       .line   933; main.c     MIOS_LCD_CursorSet(0x40 + 1);
0138 0E41      01182         MOVLW   0x41
013A EC00 F000 01183         CALL    _MIOS_LCD_CursorSet
               01184 ;       .line   934; main.c     MIOS_LCD_PrintCString("  Preset        ");
013E 0E00      01185         MOVLW   UPPER(__str_34)
0140 6EED      01186         MOVWF   POSTDEC1
0142 0E00      01187         MOVLW   HIGH(__str_34)
0144 6EED      01188         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0146 0E00      01189         MOVLW   LOW(__str_34)
0148 EC00 F000 01190         CALL    _MIOS_LCD_PrintCString
014C 0E02      01191         MOVLW   0x02
014E 26E9      01192         ADDWF   FSR1L, F
               01193 ;       .line   935; main.c     MIOS_LCD_CursorSet(0x40 + 11);
0150 0E4B      01194         MOVLW   0x4b
0152 EC00 F000 01195         CALL    _MIOS_LCD_CursorSet
0156 0000      01196         BANKSEL _FootPreset
               01197 ;       .line   936; main.c     MIOS_LCD_PrintBCD3(FootPreset[0]);
0158 5100      01198         MOVF    _FootPreset, W, B
015A EC00 F000 01199         CALL    _MIOS_LCD_PrintBCD3
               01200 ;       .line   937; main.c     break;
015E EF00 F000 01201         GOTO    _00563_DS_
0162           01202 _00435_DS_:
               01203 ;       .line   940; main.c     Preset_Up();
0162 EC00 F000 01204         CALL    _Preset_Up
               01205 ;       .line   941; main.c     break;
0166 EF00 F000 01206         GOTO    _00563_DS_
016A           01207 _00436_DS_:
               01208 ;       .line   944; main.c     Preset_Down();
016A EC00 F000 01209         CALL    _Preset_Down
               01210 ;       .line   946; main.c     }
016E EF00 F000 01211         GOTO    _00563_DS_
0172           01212 _00562_DS_:
0172 0000      01213         BANKSEL _MenuPos
               01214 ;       .line   948; main.c     else if ( MenuPos == 1 ) // PROG menu
0174 5100      01215         MOVF    _MenuPos, W, B
0176 0A01      01216         XORLW   0x01
0178 E000      01217         BZ      _00623_DS_
017A D000      01218         BRA     _00559_DS_
017C           01219 _00623_DS_:
               01220 ;       .line   950; main.c     switch (LastButton)
017C 0E05      01221         MOVLW   0x05
017E 0000      01222         BANKSEL _LastButton
0180 5D00      01223         SUBWF   _LastButton, W, B
0182 B0D8      01224         BTFSC   STATUS, 0
0184 EF00 F000 01225         GOTO    _00563_DS_
0188 C000 FFED 01226         MOVFF   r0x06, POSTDEC1
018C C000 FFED 01227         MOVFF   r0x07, POSTDEC1
0190 6A00      01228         CLRF    r0x07
               01229 ; removed redundant BANKSEL
0192 3500      01230         RLCF    _LastButton, W, B
0194 3600      01231         RLCF    r0x07, F
0196 34E8      01232         RLCF    WREG, W
0198 3600      01233         RLCF    r0x07, F
019A 0BFC      01234         ANDLW   0xfc
019C 6E00      01235         MOVWF   r0x06
019E 0E00      01236         MOVLW   UPPER(_00625_DS_)
01A0 6EFB      01237         MOVWF   PCLATU
01A2 0E00      01238         MOVLW   HIGH(_00625_DS_)
01A4 6EFA      01239         MOVWF   PCLATH
01A6 0E00      01240         MOVLW   LOW(_00625_DS_)
01A8 2600      01241         ADDWF   r0x06, F
01AA 5000      01242         MOVF    r0x07, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AC 22FA      01243         ADDWFC  PCLATH, F
01AE B0D8      01244         BTFSC   STATUS, 0
01B0 2AFB      01245         INCF    PCLATU, F
01B2 5000      01246         MOVF    r0x06, W
01B4 CFEC F000 01247         MOVFF   PREINC1, r0x07
01B8 CFEC F000 01248         MOVFF   PREINC1, r0x06
01BC 6EF9      01249         MOVWF   PCL
01BE           01250 _00625_DS_:
01BE EF00 F000 01251         GOTO    _00438_DS_
01C2 EF00 F000 01252         GOTO    _00439_DS_
01C6 EF00 F000 01253         GOTO    _00440_DS_
01CA EF00 F000 01254         GOTO    _00442_DS_
01CE EF00 F000 01255         GOTO    _00442_DS_
01D2           01256 _00438_DS_:
               01257 ;       .line   953; main.c     break;
01D2 EF00 F000 01258         GOTO    _00563_DS_
01D6           01259 _00439_DS_:
01D6 0000      01260         BANKSEL _TargetPreset
               01261 ;       .line   957; main.c     SavePreset(TargetPreset);
01D8 5100      01262         MOVF    _TargetPreset, W, B
01DA 6EED      01263         MOVWF   POSTDEC1
01DC EC00 F000 01264         CALL    _SavePreset
01E0 2AE9      01265         INCF    FSR1L, F
01E2 0000      01266         BANKSEL _TargetPreset
               01267 ;       .line   958; main.c     SetActivePreset(TargetPreset);
01E4 5100      01268         MOVF    _TargetPreset, W, B
01E6 6EED      01269         MOVWF   POSTDEC1
01E8 EC00 F000 01270         CALL    _SetActivePreset
01EC 2AE9      01271         INCF    FSR1L, F
01EE 0000      01272         BANKSEL _MenuPos
               01273 ;       .line   960; main.c     MenuPos = 0;
01F0 6B00      01274         CLRF    _MenuPos, B
               01275 ;       .line   961; main.c     break;
01F2 EF00 F000 01276         GOTO    _00563_DS_
01F6           01277 _00440_DS_:
01F6 0000      01278         BANKSEL _MenuPos
               01279 ;       .line   965; main.c     MenuPos = 0;
01F8 6B00      01280         CLRF    _MenuPos, B
               01281 ;       .line   967; main.c     MIOS_LCD_Clear();
01FA EC00 F000 01282         CALL    _MIOS_LCD_Clear
               01283 ;       .line   968; main.c     MIOS_LCD_CursorSet(0x00 + 0);
01FE 0E00      01284         MOVLW   0x00
0200 EC00 F000 01285         CALL    _MIOS_LCD_CursorSet
               01286 ;       .line   969; main.c     MIOS_LCD_PrintCString("**   Nothing  **");
0204 0E00      01287         MOVLW   UPPER(__str_35)
0206 6EED      01288         MOVWF   POSTDEC1
0208 0E00      01289         MOVLW   HIGH(__str_35)
020A 6EED      01290         MOVWF   POSTDEC1
020C 0E00      01291         MOVLW   LOW(__str_35)
020E EC00 F000 01292         CALL    _MIOS_LCD_PrintCString
0212 0E02      01293         MOVLW   0x02
0214 26E9      01294         ADDWF   FSR1L, F
               01295 ;       .line   970; main.c     MIOS_LCD_CursorSet(0x40 + 0);
0216 0E40      01296         MOVLW   0x40
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0218 EC00 F000 01297         CALL    _MIOS_LCD_CursorSet
               01298 ;       .line   971; main.c     MIOS_LCD_PrintCString("**    Saved   **");
021C 0E00      01299         MOVLW   UPPER(__str_36)
021E 6EED      01300         MOVWF   POSTDEC1
0220 0E00      01301         MOVLW   HIGH(__str_36)
0222 6EED      01302         MOVWF   POSTDEC1
0224 0E00      01303         MOVLW   LOW(__str_36)
0226 EC00 F000 01304         CALL    _MIOS_LCD_PrintCString
022A 0E02      01305         MOVLW   0x02
022C 26E9      01306         ADDWF   FSR1L, F
               01307 ;       .line   972; main.c     MIOS_LCD_MessageStart(100);
022E 0E64      01308         MOVLW   0x64
0230 EC00 F000 01309         CALL    _MIOS_LCD_MessageStart
               01310 ;       .line   973; main.c     break;
0234 EF00 F000 01311         GOTO    _00563_DS_
0238           01312 _00442_DS_:
               01313 ;       .line   977; main.c     if ( (LastButton-4) == 0 ) // Down button
0238 C000 F000 01314         MOVFF   _LastButton, r0x00
023C 6A00      01315         CLRF    r0x01
023E 5000      01316         MOVF    r0x00, W
0240 0FFC      01317         ADDLW   0xfc
0242 6E00      01318         MOVWF   r0x02
0244 0EFF      01319         MOVLW   0xff
0246 2000      01320         ADDWFC  r0x01, W
0248 6E00      01321         MOVWF   r0x03
024A 5000      01322         MOVF    r0x02, W
024C 1000      01323         IORWF   r0x03, W
024E E100      01324         BNZ     _00452_DS_
               01325 ;       .line   979; main.c     if ( TargetPreset > 1) 
0250 0E02      01326         MOVLW   0x02
0252 0000      01327         BANKSEL _TargetPreset
0254 5D00      01328         SUBWF   _TargetPreset, W, B
0256 E300      01329         BNC     _00444_DS_
               01330 ; removed redundant BANKSEL
               01331 ;       .line   980; main.c     { TargetPreset--; }
0258 0700      01332         DECF    _TargetPreset, F, B
025A D000      01333         BRA     _00453_DS_
025C           01334 _00444_DS_:
               01335 ;       .line   982; main.c     { TargetPreset = 100; }
025C 0E64      01336         MOVLW   0x64
025E 0000      01337         BANKSEL _TargetPreset
0260 6F00      01338         MOVWF   _TargetPreset, B
0262 D000      01339         BRA     _00453_DS_
0264           01340 _00452_DS_:
               01341 ;       .line   984; main.c     else if ( (LastButton-3) == 0 ) // Up button
0264 0EFD      01342         MOVLW   0xfd
0266 2600      01343         ADDWF   r0x00, F
0268 A0D8      01344         BTFSS   STATUS, 0
026A 0600      01345         DECF    r0x01, F
026C 5000      01346         MOVF    r0x00, W
026E 1000      01347         IORWF   r0x01, W
0270 E100      01348         BNZ     _00453_DS_
               01349 ;       .line   986; main.c     if ( TargetPreset < 100) 
0272 0E64      01350         MOVLW   0x64
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0274 0000      01351         BANKSEL _TargetPreset
0276 5D00      01352         SUBWF   _TargetPreset, W, B
0278 E200      01353         BC      _00447_DS_
               01354 ; removed redundant BANKSEL
               01355 ;       .line   987; main.c     { TargetPreset++; }
027A 2B00      01356         INCF    _TargetPreset, F, B
027C D000      01357         BRA     _00453_DS_
027E           01358 _00447_DS_:
               01359 ;       .line   989; main.c     { TargetPreset = 1; }
027E 0E01      01360         MOVLW   0x01
0280 0000      01361         BANKSEL _TargetPreset
0282 6F00      01362         MOVWF   _TargetPreset, B
0284           01363 _00453_DS_:
               01364 ;       .line   992; main.c     MIOS_LCD_CursorSet(0x40 + 8);
0284 0E48      01365         MOVLW   0x48
0286 EC00 F000 01366         CALL    _MIOS_LCD_CursorSet
028A 0000      01367         BANKSEL _TargetPreset
               01368 ;       .line   993; main.c     MIOS_LCD_PrintBCD3(TargetPreset);
028C 5100      01369         MOVF    _TargetPreset, W, B
028E EC00 F000 01370         CALL    _MIOS_LCD_PrintBCD3
               01371 ;       .line   995; main.c     }
0292 EF00 F000 01372         GOTO    _00563_DS_
0296           01373 _00559_DS_:
               01374 ;       .line   997; main.c     else if ( MenuPos >= 6 ) // OPTS menu
0296 0E06      01375         MOVLW   0x06
0298 0000      01376         BANKSEL _MenuPos
029A 5D00      01377         SUBWF   _MenuPos, W, B
029C 70D8      01378         BTG     STATUS, 0
029E 6A00      01379         CLRF    r0x00
02A0 3600      01380         RLCF    r0x00, F
02A2 5000      01381         MOVF    r0x00, W
02A4 A4D8      01382         BTFSS   STATUS, 2
02A6 EF00 F000 01383         GOTO    _00563_DS_
               01384 ;       .line   999; main.c     switch (LastButton)
02AA 0E05      01385         MOVLW   0x05
02AC 0000      01386         BANKSEL _LastButton
02AE 5D00      01387         SUBWF   _LastButton, W, B
02B0 B0D8      01388         BTFSC   STATUS, 0
02B2 EF00 F000 01389         GOTO    _00563_DS_
02B6 C000 FFED 01390         MOVFF   r0x06, POSTDEC1
02BA C000 FFED 01391         MOVFF   r0x07, POSTDEC1
02BE 6A00      01392         CLRF    r0x07
               01393 ; removed redundant BANKSEL
02C0 3500      01394         RLCF    _LastButton, W, B
02C2 3600      01395         RLCF    r0x07, F
02C4 34E8      01396         RLCF    WREG, W
02C6 3600      01397         RLCF    r0x07, F
02C8 0BFC      01398         ANDLW   0xfc
02CA 6E00      01399         MOVWF   r0x06
02CC 0E00      01400         MOVLW   UPPER(_00631_DS_)
02CE 6EFB      01401         MOVWF   PCLATU
02D0 0E00      01402         MOVLW   HIGH(_00631_DS_)
02D2 6EFA      01403         MOVWF   PCLATH
02D4 0E00      01404         MOVLW   LOW(_00631_DS_)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02D6 2600      01405         ADDWF   r0x06, F
02D8 5000      01406         MOVF    r0x07, W
02DA 22FA      01407         ADDWFC  PCLATH, F
02DC B0D8      01408         BTFSC   STATUS, 0
02DE 2AFB      01409         INCF    PCLATU, F
02E0 5000      01410         MOVF    r0x06, W
02E2 CFEC F000 01411         MOVFF   PREINC1, r0x07
02E6 CFEC F000 01412         MOVFF   PREINC1, r0x06
02EA 6EF9      01413         MOVWF   PCL
02EC           01414 _00631_DS_:
02EC EF00 F000 01415         GOTO    _00455_DS_
02F0 EF00 F000 01416         GOTO    _00456_DS_
02F4 EF00 F000 01417         GOTO    _00488_DS_
02F8 EF00 F000 01418         GOTO    _00490_DS_
02FC EF00 F000 01419         GOTO    _00490_DS_
0300           01420 _00455_DS_:
               01421 ;       .line   1002; main.c    break;
0300 EF00 F000 01422         GOTO    _00563_DS_
0304           01423 _00456_DS_:
               01424 ;       .line   1006; main.c    if ( MenuPos < 29 ) 
0304 0E1D      01425         MOVLW   0x1d
0306 0000      01426         BANKSEL _MenuPos
0308 5D00      01427         SUBWF   _MenuPos, W, B
030A B0D8      01428         BTFSC   STATUS, 0
030C EF00 F000 01429         GOTO    _00486_DS_
               01430 ; removed redundant BANKSEL
               01431 ;       .line   1008; main.c    MenuPos++;
0310 2B00      01432         INCF    _MenuPos, F, B
               01433 ;       .line   1009; main.c    switch (MenuPos)
0312 0E06      01434         MOVLW   0x06
               01435 ; removed redundant BANKSEL
0314 5D00      01436         SUBWF   _MenuPos, W, B
0316 A0D8      01437         BTFSS   STATUS, 0
0318 EF00 F000 01438         GOTO    _00563_DS_
031C 0E1E      01439         MOVLW   0x1e
               01440 ; removed redundant BANKSEL
031E 5D00      01441         SUBWF   _MenuPos, W, B
0320 B0D8      01442         BTFSC   STATUS, 0
0322 EF00 F000 01443         GOTO    _00563_DS_
0326 0EFA      01444         MOVLW   0xfa
               01445 ; removed redundant BANKSEL
0328 2500      01446         ADDWF   _MenuPos, W, B
032A 6E00      01447         MOVWF   r0x01
032C C000 FFED 01448         MOVFF   r0x06, POSTDEC1
0330 C000 FFED 01449         MOVFF   r0x07, POSTDEC1
0334 6A00      01450         CLRF    r0x07
0336 3400      01451         RLCF    r0x01, W
0338 3600      01452         RLCF    r0x07, F
033A 34E8      01453         RLCF    WREG, W
033C 3600      01454         RLCF    r0x07, F
033E 0BFC      01455         ANDLW   0xfc
0340 6E00      01456         MOVWF   r0x06
0342 0E00      01457         MOVLW   UPPER(_00635_DS_)
0344 6EFB      01458         MOVWF   PCLATU
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0346 0E00      01459         MOVLW   HIGH(_00635_DS_)
0348 6EFA      01460         MOVWF   PCLATH
034A 0E00      01461         MOVLW   LOW(_00635_DS_)
034C 2600      01462         ADDWF   r0x06, F
034E 5000      01463         MOVF    r0x07, W
0350 22FA      01464         ADDWFC  PCLATH, F
0352 B0D8      01465         BTFSC   STATUS, 0
0354 2AFB      01466         INCF    PCLATU, F
0356 5000      01467         MOVF    r0x06, W
0358 CFEC F000 01468         MOVFF   PREINC1, r0x07
035C CFEC F000 01469         MOVFF   PREINC1, r0x06
0360 6EF9      01470         MOVWF   PCL
0362           01471 _00635_DS_:
0362 EF00 F000 01472         GOTO    _00457_DS_
0366 EF00 F000 01473         GOTO    _00458_DS_
036A EF00 F000 01474         GOTO    _00459_DS_
036E EF00 F000 01475         GOTO    _00460_DS_
0372 EF00 F000 01476         GOTO    _00461_DS_
0376 EF00 F000 01477         GOTO    _00462_DS_
037A EF00 F000 01478         GOTO    _00466_DS_
037E EF00 F000 01479         GOTO    _00467_DS_
0382 EF00 F000 01480         GOTO    _00472_DS_
0386 EF00 F000 01481         GOTO    _00472_DS_
038A EF00 F000 01482         GOTO    _00472_DS_
038E EF00 F000 01483         GOTO    _00472_DS_
0392 EF00 F000 01484         GOTO    _00472_DS_
0396 EF00 F000 01485         GOTO    _00473_DS_
039A EF00 F000 01486         GOTO    _00474_DS_
039E EF00 F000 01487         GOTO    _00475_DS_
03A2 EF00 F000 01488         GOTO    _00480_DS_
03A6 EF00 F000 01489         GOTO    _00480_DS_
03AA EF00 F000 01490         GOTO    _00480_DS_
03AE EF00 F000 01491         GOTO    _00480_DS_
03B2 EF00 F000 01492         GOTO    _00480_DS_
03B6 EF00 F000 01493         GOTO    _00481_DS_
03BA EF00 F000 01494         GOTO    _00482_DS_
03BE EF00 F000 01495         GOTO    _00483_DS_
03C2           01496 _00457_DS_:
               01497 ;       .line   1012; main.c    MIOS_LCD_CursorSet(0x00 + 1);
03C2 0E01      01498         MOVLW   0x01
03C4 EC00 F000 01499         CALL    _MIOS_LCD_CursorSet
               01500 ;       .line   1013; main.c    MIOS_LCD_PrintCString("  Footswitch 1  ");
03C8 0E00      01501         MOVLW   UPPER(__str_33)
03CA 6EED      01502         MOVWF   POSTDEC1
03CC 0E00      01503         MOVLW   HIGH(__str_33)
03CE 6EED      01504         MOVWF   POSTDEC1
03D0 0E00      01505         MOVLW   LOW(__str_33)
03D2 EC00 F000 01506         CALL    _MIOS_LCD_PrintCString
03D6 0E02      01507         MOVLW   0x02
03D8 26E9      01508         ADDWF   FSR1L, F
               01509 ;       .line   1014; main.c    MIOS_LCD_CursorSet(0x40 + 1);
03DA 0E41      01510         MOVLW   0x41
03DC EC00 F000 01511         CALL    _MIOS_LCD_CursorSet
               01512 ;       .line   1015; main.c    MIOS_LCD_PrintCString("  Preset        ");
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03E0 0E00      01513         MOVLW   UPPER(__str_34)
03E2 6EED      01514         MOVWF   POSTDEC1
03E4 0E00      01515         MOVLW   HIGH(__str_34)
03E6 6EED      01516         MOVWF   POSTDEC1
03E8 0E00      01517         MOVLW   LOW(__str_34)
03EA EC00 F000 01518         CALL    _MIOS_LCD_PrintCString
03EE 0E02      01519         MOVLW   0x02
03F0 26E9      01520         ADDWF   FSR1L, F
               01521 ;       .line   1016; main.c    MIOS_LCD_CursorSet(0x40 + 11);
03F2 0E4B      01522         MOVLW   0x4b
03F4 EC00 F000 01523         CALL    _MIOS_LCD_CursorSet
03F8 0000      01524         BANKSEL _FootPreset
               01525 ;       .line   1017; main.c    MIOS_LCD_PrintBCD3(FootPreset[0]);
03FA 5100      01526         MOVF    _FootPreset, W, B
03FC EC00 F000 01527         CALL    _MIOS_LCD_PrintBCD3
               01528 ;       .line   1018; main.c    break;
0400 EF00 F000 01529         GOTO    _00563_DS_
0404           01530 _00458_DS_:
               01531 ;       .line   1020; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0404 0E01      01532         MOVLW   0x01
0406 EC00 F000 01533         CALL    _MIOS_LCD_CursorSet
               01534 ;       .line   1021; main.c    MIOS_LCD_PrintCString("  Footswitch 2  ");
040A 0E00      01535         MOVLW   UPPER(__str_37)
040C 6EED      01536         MOVWF   POSTDEC1
040E 0E00      01537         MOVLW   HIGH(__str_37)
0410 6EED      01538         MOVWF   POSTDEC1
0412 0E00      01539         MOVLW   LOW(__str_37)
0414 EC00 F000 01540         CALL    _MIOS_LCD_PrintCString
0418 0E02      01541         MOVLW   0x02
041A 26E9      01542         ADDWF   FSR1L, F
               01543 ;       .line   1022; main.c    MIOS_LCD_CursorSet(0x40 + 1);
041C 0E41      01544         MOVLW   0x41
041E EC00 F000 01545         CALL    _MIOS_LCD_CursorSet
               01546 ;       .line   1023; main.c    MIOS_LCD_PrintCString("  Preset        ");
0422 0E00      01547         MOVLW   UPPER(__str_34)
0424 6EED      01548         MOVWF   POSTDEC1
0426 0E00      01549         MOVLW   HIGH(__str_34)
0428 6EED      01550         MOVWF   POSTDEC1
042A 0E00      01551         MOVLW   LOW(__str_34)
042C EC00 F000 01552         CALL    _MIOS_LCD_PrintCString
0430 0E02      01553         MOVLW   0x02
0432 26E9      01554         ADDWF   FSR1L, F
               01555 ;       .line   1024; main.c    MIOS_LCD_CursorSet(0x40 + 11);
0434 0E4B      01556         MOVLW   0x4b
0436 EC00 F000 01557         CALL    _MIOS_LCD_CursorSet
043A 0000      01558         BANKSEL (_FootPreset + 1)
               01559 ;       .line   1025; main.c    MIOS_LCD_PrintBCD3(FootPreset[1]);
043C 5100      01560         MOVF    (_FootPreset + 1), W, B
043E EC00 F000 01561         CALL    _MIOS_LCD_PrintBCD3
               01562 ;       .line   1026; main.c    break;
0442 EF00 F000 01563         GOTO    _00563_DS_
0446           01564 _00459_DS_:
               01565 ;       .line   1028; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0446 0E01      01566         MOVLW   0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0448 EC00 F000 01567         CALL    _MIOS_LCD_CursorSet
               01568 ;       .line   1029; main.c    MIOS_LCD_PrintCString("  Footswitch 3  ");
044C 0E00      01569         MOVLW   UPPER(__str_38)
044E 6EED      01570         MOVWF   POSTDEC1
0450 0E00      01571         MOVLW   HIGH(__str_38)
0452 6EED      01572         MOVWF   POSTDEC1
0454 0E00      01573         MOVLW   LOW(__str_38)
0456 EC00 F000 01574         CALL    _MIOS_LCD_PrintCString
045A 0E02      01575         MOVLW   0x02
045C 26E9      01576         ADDWF   FSR1L, F
               01577 ;       .line   1030; main.c    MIOS_LCD_CursorSet(0x40 + 1);
045E 0E41      01578         MOVLW   0x41
0460 EC00 F000 01579         CALL    _MIOS_LCD_CursorSet
               01580 ;       .line   1031; main.c    MIOS_LCD_PrintCString("  Preset        ");
0464 0E00      01581         MOVLW   UPPER(__str_34)
0466 6EED      01582         MOVWF   POSTDEC1
0468 0E00      01583         MOVLW   HIGH(__str_34)
046A 6EED      01584         MOVWF   POSTDEC1
046C 0E00      01585         MOVLW   LOW(__str_34)
046E EC00 F000 01586         CALL    _MIOS_LCD_PrintCString
0472 0E02      01587         MOVLW   0x02
0474 26E9      01588         ADDWF   FSR1L, F
               01589 ;       .line   1032; main.c    MIOS_LCD_CursorSet(0x40 + 11);
0476 0E4B      01590         MOVLW   0x4b
0478 EC00 F000 01591         CALL    _MIOS_LCD_CursorSet
047C 0000      01592         BANKSEL (_FootPreset + 2)
               01593 ;       .line   1033; main.c    MIOS_LCD_PrintBCD3(FootPreset[2]);
047E 5100      01594         MOVF    (_FootPreset + 2), W, B
0480 EC00 F000 01595         CALL    _MIOS_LCD_PrintBCD3
               01596 ;       .line   1034; main.c    break;
0484 EF00 F000 01597         GOTO    _00563_DS_
0488           01598 _00460_DS_:
               01599 ;       .line   1036; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0488 0E01      01600         MOVLW   0x01
048A EC00 F000 01601         CALL    _MIOS_LCD_CursorSet
               01602 ;       .line   1037; main.c    MIOS_LCD_PrintCString("  Footswitch 4  ");
048E 0E00      01603         MOVLW   UPPER(__str_39)
0490 6EED      01604         MOVWF   POSTDEC1
0492 0E00      01605         MOVLW   HIGH(__str_39)
0494 6EED      01606         MOVWF   POSTDEC1
0496 0E00      01607         MOVLW   LOW(__str_39)
0498 EC00 F000 01608         CALL    _MIOS_LCD_PrintCString
049C 0E02      01609         MOVLW   0x02
049E 26E9      01610         ADDWF   FSR1L, F
               01611 ;       .line   1038; main.c    MIOS_LCD_CursorSet(0x40 + 1);
04A0 0E41      01612         MOVLW   0x41
04A2 EC00 F000 01613         CALL    _MIOS_LCD_CursorSet
               01614 ;       .line   1039; main.c    MIOS_LCD_PrintCString("  Preset        ");
04A6 0E00      01615         MOVLW   UPPER(__str_34)
04A8 6EED      01616         MOVWF   POSTDEC1
04AA 0E00      01617         MOVLW   HIGH(__str_34)
04AC 6EED      01618         MOVWF   POSTDEC1
04AE 0E00      01619         MOVLW   LOW(__str_34)
04B0 EC00 F000 01620         CALL    _MIOS_LCD_PrintCString
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
04B4 0E02      01621         MOVLW   0x02
04B6 26E9      01622         ADDWF   FSR1L, F
               01623 ;       .line   1040; main.c    MIOS_LCD_CursorSet(0x40 + 11);
04B8 0E4B      01624         MOVLW   0x4b
04BA EC00 F000 01625         CALL    _MIOS_LCD_CursorSet
04BE 0000      01626         BANKSEL (_FootPreset + 3)
               01627 ;       .line   1041; main.c    MIOS_LCD_PrintBCD3(FootPreset[3]);
04C0 5100      01628         MOVF    (_FootPreset + 3), W, B
04C2 EC00 F000 01629         CALL    _MIOS_LCD_PrintBCD3
               01630 ;       .line   1042; main.c    break;
04C6 EF00 F000 01631         GOTO    _00563_DS_
04CA           01632 _00461_DS_:
               01633 ;       .line   1044; main.c    MIOS_LCD_CursorSet(0x00 + 1);
04CA 0E01      01634         MOVLW   0x01
04CC EC00 F000 01635         CALL    _MIOS_LCD_CursorSet
               01636 ;       .line   1045; main.c    MIOS_LCD_PrintCString("  MIDI channel  ");
04D0 0E00      01637         MOVLW   UPPER(__str_40)
04D2 6EED      01638         MOVWF   POSTDEC1
04D4 0E00      01639         MOVLW   HIGH(__str_40)
04D6 6EED      01640         MOVWF   POSTDEC1
04D8 0E00      01641         MOVLW   LOW(__str_40)
04DA EC00 F000 01642         CALL    _MIOS_LCD_PrintCString
04DE 0E02      01643         MOVLW   0x02
04E0 26E9      01644         ADDWF   FSR1L, F
               01645 ;       .line   1046; main.c    MIOS_LCD_CursorSet(0x40 + 1);
04E2 0E41      01646         MOVLW   0x41
04E4 EC00 F000 01647         CALL    _MIOS_LCD_CursorSet
               01648 ;       .line   1047; main.c    MIOS_LCD_PrintCString("                ");
04E8 0E00      01649         MOVLW   UPPER(__str_41)
04EA 6EED      01650         MOVWF   POSTDEC1
04EC 0E00      01651         MOVLW   HIGH(__str_41)
04EE 6EED      01652         MOVWF   POSTDEC1
04F0 0E00      01653         MOVLW   LOW(__str_41)
04F2 EC00 F000 01654         CALL    _MIOS_LCD_PrintCString
04F6 0E02      01655         MOVLW   0x02
04F8 26E9      01656         ADDWF   FSR1L, F
               01657 ;       .line   1048; main.c    MIOS_LCD_CursorSet(0x40 + 7);
04FA 0E47      01658         MOVLW   0x47
04FC EC00 F000 01659         CALL    _MIOS_LCD_CursorSet
0500 0000      01660         BANKSEL _MidiChannel
               01661 ;       .line   1049; main.c    MIOS_LCD_PrintBCD2(MidiChannel);
0502 5100      01662         MOVF    _MidiChannel, W, B
0504 EC00 F000 01663         CALL    _MIOS_LCD_PrintBCD2
               01664 ;       .line   1050; main.c    break;
0508 EF00 F000 01665         GOTO    _00563_DS_
050C           01666 _00462_DS_:
               01667 ;       .line   1052; main.c    MIOS_LCD_CursorSet(0x00 + 1);
050C 0E01      01668         MOVLW   0x01
050E EC00 F000 01669         CALL    _MIOS_LCD_CursorSet
               01670 ;       .line   1053; main.c    MIOS_LCD_PrintCString(" Startup Preset ");
0512 0E00      01671         MOVLW   UPPER(__str_42)
0514 6EED      01672         MOVWF   POSTDEC1
0516 0E00      01673         MOVLW   HIGH(__str_42)
0518 6EED      01674         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
051A 0E00      01675         MOVLW   LOW(__str_42)
051C EC00 F000 01676         CALL    _MIOS_LCD_PrintCString
0520 0E02      01677         MOVLW   0x02
0522 26E9      01678         ADDWF   FSR1L, F
               01679 ;       .line   1054; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0524 0E41      01680         MOVLW   0x41
0526 EC00 F000 01681         CALL    _MIOS_LCD_CursorSet
               01682 ;       .line   1055; main.c    MIOS_LCD_PrintCString("                ");
052A 0E00      01683         MOVLW   UPPER(__str_41)
052C 6EED      01684         MOVWF   POSTDEC1
052E 0E00      01685         MOVLW   HIGH(__str_41)
0530 6EED      01686         MOVWF   POSTDEC1
0532 0E00      01687         MOVLW   LOW(__str_41)
0534 EC00 F000 01688         CALL    _MIOS_LCD_PrintCString
0538 0E02      01689         MOVLW   0x02
053A 26E9      01690         ADDWF   FSR1L, F
053C 0000      01691         BANKSEL _ThisStartupPreset
               01692 ;       .line   1056; main.c    if ( ThisStartupPreset == 0 )
053E 5100      01693         MOVF    _ThisStartupPreset, W, B
0540 E100      01694         BNZ     _00464_DS_
               01695 ;       .line   1058; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0542 0E41      01696         MOVLW   0x41
0544 EC00 F000 01697         CALL    _MIOS_LCD_CursorSet
               01698 ;       .line   1059; main.c    MIOS_LCD_PrintCString(" ** Last Used **");
0548 0E00      01699         MOVLW   UPPER(__str_43)
054A 6EED      01700         MOVWF   POSTDEC1
054C 0E00      01701         MOVLW   HIGH(__str_43)
054E 6EED      01702         MOVWF   POSTDEC1
0550 0E00      01703         MOVLW   LOW(__str_43)
0552 EC00 F000 01704         CALL    _MIOS_LCD_PrintCString
0556 0E02      01705         MOVLW   0x02
0558 26E9      01706         ADDWF   FSR1L, F
055A EF00 F000 01707         GOTO    _00563_DS_
055E           01708 _00464_DS_:
               01709 ;       .line   1063; main.c    MIOS_LCD_CursorSet(0x40 + 7);
055E 0E47      01710         MOVLW   0x47
0560 EC00 F000 01711         CALL    _MIOS_LCD_CursorSet
0564 0000      01712         BANKSEL _ThisStartupPreset
               01713 ;       .line   1064; main.c    MIOS_LCD_PrintBCD2(ThisStartupPreset);
0566 5100      01714         MOVF    _ThisStartupPreset, W, B
0568 EC00 F000 01715         CALL    _MIOS_LCD_PrintBCD2
               01716 ;       .line   1066; main.c    break;
056C EF00 F000 01717         GOTO    _00563_DS_
0570           01718 _00466_DS_:
               01719 ;       .line   1068; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0570 0E01      01720         MOVLW   0x01
0572 EC00 F000 01721         CALL    _MIOS_LCD_CursorSet
               01722 ;       .line   1069; main.c    MIOS_LCD_PrintCString("  Send MIDI ?   ");
0576 0E00      01723         MOVLW   UPPER(__str_44)
0578 6EED      01724         MOVWF   POSTDEC1
057A 0E00      01725         MOVLW   HIGH(__str_44)
057C 6EED      01726         MOVWF   POSTDEC1
057E 0E00      01727         MOVLW   LOW(__str_44)
0580 EC00 F000 01728         CALL    _MIOS_LCD_PrintCString
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0584 0E02      01729         MOVLW   0x02
0586 26E9      01730         ADDWF   FSR1L, F
               01731 ;       .line   1070; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0588 0E41      01732         MOVLW   0x41
058A EC00 F000 01733         CALL    _MIOS_LCD_CursorSet
               01734 ;       .line   1071; main.c    MIOS_LCD_PrintCString("                ");
058E 0E00      01735         MOVLW   UPPER(__str_41)
0590 6EED      01736         MOVWF   POSTDEC1
0592 0E00      01737         MOVLW   HIGH(__str_41)
0594 6EED      01738         MOVWF   POSTDEC1
0596 0E00      01739         MOVLW   LOW(__str_41)
0598 EC00 F000 01740         CALL    _MIOS_LCD_PrintCString
059C 0E02      01741         MOVLW   0x02
059E 26E9      01742         ADDWF   FSR1L, F
               01743 ;       .line   1072; main.c    MIOS_LCD_CursorSet(0x40 + 7);
05A0 0E47      01744         MOVLW   0x47
05A2 EC00 F000 01745         CALL    _MIOS_LCD_CursorSet
05A6 0000      01746         BANKSEL _SendMidiOnButtonChange
               01747 ;       .line   1073; main.c    SendMidiOnButtonChange ? MIOS_LCD_PrintCString("Yes") : MIOS_LCD_PrintCString("No");
05A8 5100      01748         MOVF    _SendMidiOnButtonChange, W, B
05AA E000      01749         BZ      _00566_DS_
05AC 0E00      01750         MOVLW   UPPER(__str_45)
05AE 6EED      01751         MOVWF   POSTDEC1
05B0 0E00      01752         MOVLW   HIGH(__str_45)
05B2 6EED      01753         MOVWF   POSTDEC1
05B4 0E00      01754         MOVLW   LOW(__str_45)
05B6 EC00 F000 01755         CALL    _MIOS_LCD_PrintCString
05BA 0E02      01756         MOVLW   0x02
05BC 26E9      01757         ADDWF   FSR1L, F
05BE EF00 F000 01758         GOTO    _00563_DS_
05C2           01759 _00566_DS_:
05C2 0E00      01760         MOVLW   UPPER(__str_46)
05C4 6EED      01761         MOVWF   POSTDEC1
05C6 0E00      01762         MOVLW   HIGH(__str_46)
05C8 6EED      01763         MOVWF   POSTDEC1
05CA 0E00      01764         MOVLW   LOW(__str_46)
05CC EC00 F000 01765         CALL    _MIOS_LCD_PrintCString
05D0 0E02      01766         MOVLW   0x02
05D2 26E9      01767         ADDWF   FSR1L, F
               01768 ;       .line   1074; main.c    break;
05D4 EF00 F000 01769         GOTO    _00563_DS_
05D8           01770 _00467_DS_:
               01771 ;       .line   1076; main.c    MIOS_LCD_CursorSet(0x00 + 1);
05D8 0E01      01772         MOVLW   0x01
05DA EC00 F000 01773         CALL    _MIOS_LCD_CursorSet
               01774 ;       .line   1077; main.c    MIOS_LCD_PrintCString(" Reload Active ?");
05DE 0E00      01775         MOVLW   UPPER(__str_47)
05E0 6EED      01776         MOVWF   POSTDEC1
05E2 0E00      01777         MOVLW   HIGH(__str_47)
05E4 6EED      01778         MOVWF   POSTDEC1
05E6 0E00      01779         MOVLW   LOW(__str_47)
05E8 EC00 F000 01780         CALL    _MIOS_LCD_PrintCString
05EC 0E02      01781         MOVLW   0x02
05EE 26E9      01782         ADDWF   FSR1L, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01783 ;       .line   1078; main.c    MIOS_LCD_CursorSet(0x40 + 1);
05F0 0E41      01784         MOVLW   0x41
05F2 EC00 F000 01785         CALL    _MIOS_LCD_CursorSet
               01786 ;       .line   1079; main.c    MIOS_LCD_PrintCString("                ");
05F6 0E00      01787         MOVLW   UPPER(__str_41)
05F8 6EED      01788         MOVWF   POSTDEC1
05FA 0E00      01789         MOVLW   HIGH(__str_41)
05FC 6EED      01790         MOVWF   POSTDEC1
05FE 0E00      01791         MOVLW   LOW(__str_41)
0600 EC00 F000 01792         CALL    _MIOS_LCD_PrintCString
0604 0E02      01793         MOVLW   0x02
0606 26E9      01794         ADDWF   FSR1L, F
               01795 ;       .line   1080; main.c    MIOS_LCD_CursorSet(0x40 + 7);
0608 0E47      01796         MOVLW   0x47
060A EC00 F000 01797         CALL    _MIOS_LCD_CursorSet
060E 0000      01798         BANKSEL _ReloadActivePreset
               01799 ;       .line   1081; main.c    ReloadActivePreset ? MIOS_LCD_PrintCString("Yes") : MIOS_LCD_PrintCString("No");
0610 5100      01800         MOVF    _ReloadActivePreset, W, B
0612 E000      01801         BZ      _00568_DS_
0614 0E00      01802         MOVLW   UPPER(__str_45)
0616 6EED      01803         MOVWF   POSTDEC1
0618 0E00      01804         MOVLW   HIGH(__str_45)
061A 6EED      01805         MOVWF   POSTDEC1
061C 0E00      01806         MOVLW   LOW(__str_45)
061E EC00 F000 01807         CALL    _MIOS_LCD_PrintCString
0622 0E02      01808         MOVLW   0x02
0624 26E9      01809         ADDWF   FSR1L, F
0626 EF00 F000 01810         GOTO    _00563_DS_
062A           01811 _00568_DS_:
062A 0E00      01812         MOVLW   UPPER(__str_46)
062C 6EED      01813         MOVWF   POSTDEC1
062E 0E00      01814         MOVLW   HIGH(__str_46)
0630 6EED      01815         MOVWF   POSTDEC1
0632 0E00      01816         MOVLW   LOW(__str_46)
0634 EC00 F000 01817         CALL    _MIOS_LCD_PrintCString
0638 0E02      01818         MOVLW   0x02
063A 26E9      01819         ADDWF   FSR1L, F
               01820 ;       .line   1082; main.c    break;
063C EF00 F000 01821         GOTO    _00563_DS_
0640           01822 _00472_DS_:
0640           01823 _00473_DS_:
0640           01824 _00474_DS_:
0640           01825 _00475_DS_:
               01826 ;       .line   1091; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0640 0E01      01827         MOVLW   0x01
0642 EC00 F000 01828         CALL    _MIOS_LCD_CursorSet
               01829 ;       .line   1092; main.c    MIOS_LCD_PrintCString(" Output   type ");
0646 0E00      01830         MOVLW   UPPER(__str_48)
0648 6EED      01831         MOVWF   POSTDEC1
064A 0E00      01832         MOVLW   HIGH(__str_48)
064C 6EED      01833         MOVWF   POSTDEC1
064E 0E00      01834         MOVLW   LOW(__str_48)
0650 EC00 F000 01835         CALL    _MIOS_LCD_PrintCString
0654 0E02      01836         MOVLW   0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0656 26E9      01837         ADDWF   FSR1L, F
               01838 ;       .line   1093; main.c    MIOS_LCD_CursorSet(0x00 + 9);
0658 0E09      01839         MOVLW   0x09
065A EC00 F000 01840         CALL    _MIOS_LCD_CursorSet
               01841 ;       .line   1094; main.c    MIOS_LCD_PrintBCD1(MenuPos-13); //output number
065E 0EF3      01842         MOVLW   0xf3
0660 0000      01843         BANKSEL _MenuPos
0662 2500      01844         ADDWF   _MenuPos, W, B
0664 6E00      01845         MOVWF   r0x01
0666 5000      01846         MOVF    r0x01, W
0668 EC00 F000 01847         CALL    _MIOS_LCD_PrintBCD1
               01848 ;       .line   1095; main.c    MIOS_LCD_CursorSet(0x40 + 1);
066C 0E41      01849         MOVLW   0x41
066E EC00 F000 01850         CALL    _MIOS_LCD_CursorSet
               01851 ;       .line   1096; main.c    MIOS_LCD_PrintCString("                ");
0672 0E00      01852         MOVLW   UPPER(__str_41)
0674 6EED      01853         MOVWF   POSTDEC1
0676 0E00      01854         MOVLW   HIGH(__str_41)
0678 6EED      01855         MOVWF   POSTDEC1
067A 0E00      01856         MOVLW   LOW(__str_41)
067C EC00 F000 01857         CALL    _MIOS_LCD_PrintCString
0680 0E02      01858         MOVLW   0x02
0682 26E9      01859         ADDWF   FSR1L, F
               01860 ;       .line   1097; main.c    MIOS_LCD_CursorSet(0x40 + 3);
0684 0E43      01861         MOVLW   0x43
0686 EC00 F000 01862         CALL    _MIOS_LCD_CursorSet
               01863 ;       .line   1098; main.c    RelayType[MenuPos-14] ? MIOS_LCD_PrintCString("Momentary") : MIOS_LCD_PrintCString("Toggle");
068A 0EF2      01864         MOVLW   0xf2
068C 0000      01865         BANKSEL _MenuPos
068E 2500      01866         ADDWF   _MenuPos, W, B
0690 6E00      01867         MOVWF   r0x01
0692 6A00      01868         CLRF    r0x02
0694 0E00      01869         MOVLW   LOW(_RelayType)
0696 2600      01870         ADDWF   r0x01, F
0698 0E00      01871         MOVLW   HIGH(_RelayType)
069A 2200      01872         ADDWFC  r0x02, F
069C C000 FFE1 01873         MOVFF   r0x01, FSR0L
06A0 C000 FFE2 01874         MOVFF   r0x02, FSR0H
06A4 CFE7 F000 01875         MOVFF   INDF0, r0x01
06A8 5000      01876         MOVF    r0x01, W
06AA E000      01877         BZ      _00570_DS_
06AC 0E00      01878         MOVLW   UPPER(__str_49)
06AE 6EED      01879         MOVWF   POSTDEC1
06B0 0E00      01880         MOVLW   HIGH(__str_49)
06B2 6EED      01881         MOVWF   POSTDEC1
06B4 0E00      01882         MOVLW   LOW(__str_49)
06B6 EC00 F000 01883         CALL    _MIOS_LCD_PrintCString
06BA 0E02      01884         MOVLW   0x02
06BC 26E9      01885         ADDWF   FSR1L, F
06BE EF00 F000 01886         GOTO    _00563_DS_
06C2           01887 _00570_DS_:
06C2 0E00      01888         MOVLW   UPPER(__str_50)
06C4 6EED      01889         MOVWF   POSTDEC1
06C6 0E00      01890         MOVLW   HIGH(__str_50)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
06C8 6EED      01891         MOVWF   POSTDEC1
06CA 0E00      01892         MOVLW   LOW(__str_50)
06CC EC00 F000 01893         CALL    _MIOS_LCD_PrintCString
06D0 0E02      01894         MOVLW   0x02
06D2 26E9      01895         ADDWF   FSR1L, F
               01896 ;       .line   1099; main.c    break;
06D4 EF00 F000 01897         GOTO    _00563_DS_
06D8           01898 _00480_DS_:
06D8           01899 _00481_DS_:
06D8           01900 _00482_DS_:
06D8           01901 _00483_DS_:
               01902 ;       .line   1108; main.c    MIOS_LCD_CursorSet(0x00 + 1);
06D8 0E01      01903         MOVLW   0x01
06DA EC00 F000 01904         CALL    _MIOS_LCD_CursorSet
               01905 ;       .line   1109; main.c    MIOS_LCD_PrintCString(" Output   mode ");
06DE 0E00      01906         MOVLW   UPPER(__str_51)
06E0 6EED      01907         MOVWF   POSTDEC1
06E2 0E00      01908         MOVLW   HIGH(__str_51)
06E4 6EED      01909         MOVWF   POSTDEC1
06E6 0E00      01910         MOVLW   LOW(__str_51)
06E8 EC00 F000 01911         CALL    _MIOS_LCD_PrintCString
06EC 0E02      01912         MOVLW   0x02
06EE 26E9      01913         ADDWF   FSR1L, F
               01914 ;       .line   1110; main.c    MIOS_LCD_CursorSet(0x00 + 9);
06F0 0E09      01915         MOVLW   0x09
06F2 EC00 F000 01916         CALL    _MIOS_LCD_CursorSet
               01917 ;       .line   1111; main.c    MIOS_LCD_PrintBCD1(MenuPos-21); //output number
06F6 0EEB      01918         MOVLW   0xeb
06F8 0000      01919         BANKSEL _MenuPos
06FA 2500      01920         ADDWF   _MenuPos, W, B
06FC 6E00      01921         MOVWF   r0x01
06FE 5000      01922         MOVF    r0x01, W
0700 EC00 F000 01923         CALL    _MIOS_LCD_PrintBCD1
               01924 ;       .line   1112; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0704 0E41      01925         MOVLW   0x41
0706 EC00 F000 01926         CALL    _MIOS_LCD_CursorSet
               01927 ;       .line   1113; main.c    MIOS_LCD_PrintCString("                ");
070A 0E00      01928         MOVLW   UPPER(__str_41)
070C 6EED      01929         MOVWF   POSTDEC1
070E 0E00      01930         MOVLW   HIGH(__str_41)
0710 6EED      01931         MOVWF   POSTDEC1
0712 0E00      01932         MOVLW   LOW(__str_41)
0714 EC00 F000 01933         CALL    _MIOS_LCD_PrintCString
0718 0E02      01934         MOVLW   0x02
071A 26E9      01935         ADDWF   FSR1L, F
               01936 ;       .line   1114; main.c    MIOS_LCD_CursorSet(0x40 + 3);
071C 0E43      01937         MOVLW   0x43
071E EC00 F000 01938         CALL    _MIOS_LCD_CursorSet
               01939 ;       .line   1115; main.c    RelayMode[MenuPos-22] ? MIOS_LCD_PrintCString("Radio") : MIOS_LCD_PrintCString("Free");
0722 0EEA      01940         MOVLW   0xea
0724 0000      01941         BANKSEL _MenuPos
0726 2500      01942         ADDWF   _MenuPos, W, B
0728 6E00      01943         MOVWF   r0x01
072A 6A00      01944         CLRF    r0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
072C 0E00      01945         MOVLW   LOW(_RelayMode)
072E 2600      01946         ADDWF   r0x01, F
0730 0E00      01947         MOVLW   HIGH(_RelayMode)
0732 2200      01948         ADDWFC  r0x02, F
0734 C000 FFE1 01949         MOVFF   r0x01, FSR0L
0738 C000 FFE2 01950         MOVFF   r0x02, FSR0H
073C CFE7 F000 01951         MOVFF   INDF0, r0x01
0740 5000      01952         MOVF    r0x01, W
0742 E000      01953         BZ      _00572_DS_
0744 0E00      01954         MOVLW   UPPER(__str_52)
0746 6EED      01955         MOVWF   POSTDEC1
0748 0E00      01956         MOVLW   HIGH(__str_52)
074A 6EED      01957         MOVWF   POSTDEC1
074C 0E00      01958         MOVLW   LOW(__str_52)
074E EC00 F000 01959         CALL    _MIOS_LCD_PrintCString
0752 0E02      01960         MOVLW   0x02
0754 26E9      01961         ADDWF   FSR1L, F
0756 EF00 F000 01962         GOTO    _00563_DS_
075A           01963 _00572_DS_:
075A 0E00      01964         MOVLW   UPPER(__str_53)
075C 6EED      01965         MOVWF   POSTDEC1
075E 0E00      01966         MOVLW   HIGH(__str_53)
0760 6EED      01967         MOVWF   POSTDEC1
0762 0E00      01968         MOVLW   LOW(__str_53)
0764 EC00 F000 01969         CALL    _MIOS_LCD_PrintCString
0768 0E02      01970         MOVLW   0x02
076A 26E9      01971         ADDWF   FSR1L, F
               01972 ;       .line   1117; main.c    }
076C EF00 F000 01973         GOTO    _00563_DS_
0770           01974 _00486_DS_:
               01975 ;       .line   1121; main.c    MenuPos=6;
0770 0E06      01976         MOVLW   0x06
0772 0000      01977         BANKSEL _MenuPos
0774 6F00      01978         MOVWF   _MenuPos, B
               01979 ;       .line   1122; main.c    MIOS_LCD_CursorSet(0x00 + 1);
0776 0E01      01980         MOVLW   0x01
0778 EC00 F000 01981         CALL    _MIOS_LCD_CursorSet
               01982 ;       .line   1123; main.c    MIOS_LCD_PrintCString("  Footswitch 1  ");
077C 0E00      01983         MOVLW   UPPER(__str_33)
077E 6EED      01984         MOVWF   POSTDEC1
0780 0E00      01985         MOVLW   HIGH(__str_33)
0782 6EED      01986         MOVWF   POSTDEC1
0784 0E00      01987         MOVLW   LOW(__str_33)
0786 EC00 F000 01988         CALL    _MIOS_LCD_PrintCString
078A 0E02      01989         MOVLW   0x02
078C 26E9      01990         ADDWF   FSR1L, F
               01991 ;       .line   1124; main.c    MIOS_LCD_CursorSet(0x40 + 1);
078E 0E41      01992         MOVLW   0x41
0790 EC00 F000 01993         CALL    _MIOS_LCD_CursorSet
               01994 ;       .line   1125; main.c    MIOS_LCD_PrintCString("  Preset        ");
0794 0E00      01995         MOVLW   UPPER(__str_34)
0796 6EED      01996         MOVWF   POSTDEC1
0798 0E00      01997         MOVLW   HIGH(__str_34)
079A 6EED      01998         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
079C 0E00      01999         MOVLW   LOW(__str_34)
079E EC00 F000 02000         CALL    _MIOS_LCD_PrintCString
07A2 0E02      02001         MOVLW   0x02
07A4 26E9      02002         ADDWF   FSR1L, F
               02003 ;       .line   1126; main.c    MIOS_LCD_CursorSet(0x40 + 10);
07A6 0E4A      02004         MOVLW   0x4a
07A8 EC00 F000 02005         CALL    _MIOS_LCD_CursorSet
07AC 0000      02006         BANKSEL _FootPreset
               02007 ;       .line   1127; main.c    MIOS_LCD_PrintBCD3(FootPreset[0]);
07AE 5100      02008         MOVF    _FootPreset, W, B
07B0 EC00 F000 02009         CALL    _MIOS_LCD_PrintBCD3
               02010 ;       .line   1129; main.c    break;
07B4 EF00 F000 02011         GOTO    _00563_DS_
07B8           02012 _00488_DS_:
               02013 ;       .line   1133; main.c    SaveGlobalOptions();
07B8 EC00 F000 02014         CALL    _SaveGlobalOptions
07BC 0000      02015         BANKSEL _MenuPos
               02016 ;       .line   1135; main.c    MenuPos = 0;
07BE 6B00      02017         CLRF    _MenuPos, B
               02018 ;       .line   1137; main.c    MIOS_LCD_Clear();
07C0 EC00 F000 02019         CALL    _MIOS_LCD_Clear
               02020 ;       .line   1138; main.c    MIOS_LCD_CursorSet(0x00 + 0);
07C4 0E00      02021         MOVLW   0x00
07C6 EC00 F000 02022         CALL    _MIOS_LCD_CursorSet
               02023 ;       .line   1139; main.c    MIOS_LCD_PrintCString("**   Options  **");
07CA 0E00      02024         MOVLW   UPPER(__str_54)
07CC 6EED      02025         MOVWF   POSTDEC1
07CE 0E00      02026         MOVLW   HIGH(__str_54)
07D0 6EED      02027         MOVWF   POSTDEC1
07D2 0E00      02028         MOVLW   LOW(__str_54)
07D4 EC00 F000 02029         CALL    _MIOS_LCD_PrintCString
07D8 0E02      02030         MOVLW   0x02
07DA 26E9      02031         ADDWF   FSR1L, F
               02032 ;       .line   1140; main.c    MIOS_LCD_CursorSet(0x40 + 0);
07DC 0E40      02033         MOVLW   0x40
07DE EC00 F000 02034         CALL    _MIOS_LCD_CursorSet
               02035 ;       .line   1141; main.c    MIOS_LCD_PrintCString("**    Saved   **");
07E2 0E00      02036         MOVLW   UPPER(__str_36)
07E4 6EED      02037         MOVWF   POSTDEC1
07E6 0E00      02038         MOVLW   HIGH(__str_36)
07E8 6EED      02039         MOVWF   POSTDEC1
07EA 0E00      02040         MOVLW   LOW(__str_36)
07EC EC00 F000 02041         CALL    _MIOS_LCD_PrintCString
07F0 0E02      02042         MOVLW   0x02
07F2 26E9      02043         ADDWF   FSR1L, F
               02044 ;       .line   1142; main.c    MIOS_LCD_MessageStart(100);
07F4 0E64      02045         MOVLW   0x64
07F6 EC00 F000 02046         CALL    _MIOS_LCD_MessageStart
               02047 ;       .line   1143; main.c    break;
07FA EF00 F000 02048         GOTO    _00563_DS_
07FE           02049 _00490_DS_:
               02050 ;       .line   1147; main.c    switch (MenuPos)
07FE 5000      02051         MOVF    r0x00, W
0800 A4D8      02052         BTFSS   STATUS, 2
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0802 EF00 F000 02053         GOTO    _00563_DS_
0806 0E1E      02054         MOVLW   0x1e
0808 0000      02055         BANKSEL _MenuPos
080A 5D00      02056         SUBWF   _MenuPos, W, B
080C B0D8      02057         BTFSC   STATUS, 0
080E EF00 F000 02058         GOTO    _00563_DS_
0812 0EFA      02059         MOVLW   0xfa
               02060 ; removed redundant BANKSEL
0814 2500      02061         ADDWF   _MenuPos, W, B
0816 6E00      02062         MOVWF   r0x00
0818 C000 FFED 02063         MOVFF   r0x06, POSTDEC1
081C C000 FFED 02064         MOVFF   r0x07, POSTDEC1
0820 6A00      02065         CLRF    r0x07
0822 3400      02066         RLCF    r0x00, W
0824 3600      02067         RLCF    r0x07, F
0826 34E8      02068         RLCF    WREG, W
0828 3600      02069         RLCF    r0x07, F
082A 0BFC      02070         ANDLW   0xfc
082C 6E00      02071         MOVWF   r0x06
082E 0E00      02072         MOVLW   UPPER(_00637_DS_)
0830 6EFB      02073         MOVWF   PCLATU
0832 0E00      02074         MOVLW   HIGH(_00637_DS_)
0834 6EFA      02075         MOVWF   PCLATH
0836 0E00      02076         MOVLW   LOW(_00637_DS_)
0838 2600      02077         ADDWF   r0x06, F
083A 5000      02078         MOVF    r0x07, W
083C 22FA      02079         ADDWFC  PCLATH, F
083E B0D8      02080         BTFSC   STATUS, 0
0840 2AFB      02081         INCF    PCLATU, F
0842 5000      02082         MOVF    r0x06, W
0844 CFEC F000 02083         MOVFF   PREINC1, r0x07
0848 CFEC F000 02084         MOVFF   PREINC1, r0x06
084C 6EF9      02085         MOVWF   PCL
084E           02086 _00637_DS_:
084E EF00 F000 02087         GOTO    _00494_DS_
0852 EF00 F000 02088         GOTO    _00494_DS_
0856 EF00 F000 02089         GOTO    _00494_DS_
085A EF00 F000 02090         GOTO    _00494_DS_
085E EF00 F000 02091         GOTO    _00506_DS_
0862 EF00 F000 02092         GOTO    _00521_DS_
0866 EF00 F000 02093         GOTO    _00536_DS_
086A EF00 F000 02094         GOTO    _00537_DS_
086E EF00 F000 02095         GOTO    _00542_DS_
0872 EF00 F000 02096         GOTO    _00542_DS_
0876 EF00 F000 02097         GOTO    _00542_DS_
087A EF00 F000 02098         GOTO    _00542_DS_
087E EF00 F000 02099         GOTO    _00542_DS_
0882 EF00 F000 02100         GOTO    _00543_DS_
0886 EF00 F000 02101         GOTO    _00544_DS_
088A EF00 F000 02102         GOTO    _00545_DS_
088E EF00 F000 02103         GOTO    _00550_DS_
0892 EF00 F000 02104         GOTO    _00550_DS_
0896 EF00 F000 02105         GOTO    _00550_DS_
089A EF00 F000 02106         GOTO    _00550_DS_
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
089E EF00 F000 02107         GOTO    _00550_DS_
08A2 EF00 F000 02108         GOTO    _00551_DS_
08A6 EF00 F000 02109         GOTO    _00552_DS_
08AA EF00 F000 02110         GOTO    _00553_DS_
08AE           02111 _00494_DS_:
               02112 ;       .line   1153; main.c    if ( (LastButton-4) == 0 ) // Down button
08AE C000 F000 02113         MOVFF   _LastButton, r0x01
08B2 6A00      02114         CLRF    r0x02
08B4 5000      02115         MOVF    r0x01, W
08B6 0FFC      02116         ADDLW   0xfc
08B8 6E00      02117         MOVWF   r0x03
08BA 0EFF      02118         MOVLW   0xff
08BC 2000      02119         ADDWFC  r0x02, W
08BE 6E00      02120         MOVWF   r0x04
08C0 5000      02121         MOVF    r0x03, W
08C2 1000      02122         IORWF   r0x04, W
08C4 E100      02123         BNZ     _00504_DS_
               02124 ;       .line   1155; main.c    if ( FootPreset[MenuPos-6] > 0) 
08C6 0E00      02125         MOVLW   LOW(_FootPreset)
08C8 2400      02126         ADDWF   r0x00, W
08CA 6E00      02127         MOVWF   r0x03
08CC 6A00      02128         CLRF    r0x04
08CE 0E00      02129         MOVLW   HIGH(_FootPreset)
08D0 2200      02130         ADDWFC  r0x04, F
08D2 C000 FFE1 02131         MOVFF   r0x03, FSR0L
08D6 C000 FFE2 02132         MOVFF   r0x04, FSR0H
08DA CFE7 F000 02133         MOVFF   INDF0, r0x05
08DE 5000      02134         MOVF    r0x05, W
08E0 E000      02135         BZ      _00496_DS_
               02136 ;       .line   1156; main.c    { FootPreset[MenuPos-6]--; }
08E2 0600      02137         DECF    r0x05, F
08E4 C000 FFE1 02138         MOVFF   r0x03, FSR0L
08E8 C000 FFE2 02139         MOVFF   r0x04, FSR0H
08EC C000 FFE7 02140         MOVFF   r0x05, INDF0
08F0 D000      02141         BRA     _00505_DS_
08F2           02142 _00496_DS_:
               02143 ;       .line   1158; main.c    { FootPreset[MenuPos-6] = 100; }
08F2 C000 FFE1 02144         MOVFF   r0x03, FSR0L
08F6 C000 FFE2 02145         MOVFF   r0x04, FSR0H
08FA 0E64      02146         MOVLW   0x64
08FC 6EE7      02147         MOVWF   INDF0
08FE D000      02148         BRA     _00505_DS_
0900           02149 _00504_DS_:
               02150 ;       .line   1160; main.c    else if ( (LastButton-3) == 0 ) // Up button
0900 0EFD      02151         MOVLW   0xfd
0902 2600      02152         ADDWF   r0x01, F
0904 A0D8      02153         BTFSS   STATUS, 0
0906 0600      02154         DECF    r0x02, F
0908 5000      02155         MOVF    r0x01, W
090A 1000      02156         IORWF   r0x02, W
090C E100      02157         BNZ     _00505_DS_
               02158 ;       .line   1162; main.c    if ( FootPreset[MenuPos-6] < 100) 
090E 6A00      02159         CLRF    r0x01
0910 0E00      02160         MOVLW   LOW(_FootPreset)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0912 2600      02161         ADDWF   r0x00, F
0914 0E00      02162         MOVLW   HIGH(_FootPreset)
0916 2200      02163         ADDWFC  r0x01, F
0918 C000 FFE1 02164         MOVFF   r0x00, FSR0L
091C C000 FFE2 02165         MOVFF   r0x01, FSR0H
0920 CFE7 F000 02166         MOVFF   INDF0, r0x02
0924 0E64      02167         MOVLW   0x64
0926 5C00      02168         SUBWF   r0x02, W
0928 E200      02169         BC      _00499_DS_
               02170 ;       .line   1163; main.c    { FootPreset[MenuPos-6]++; }
092A 2A00      02171         INCF    r0x02, F
092C C000 FFE1 02172         MOVFF   r0x00, FSR0L
0930 C000 FFE2 02173         MOVFF   r0x01, FSR0H
0934 C000 FFE7 02174         MOVFF   r0x02, INDF0
0938 D000      02175         BRA     _00505_DS_
093A           02176 _00499_DS_:
               02177 ;       .line   1165; main.c    { FootPreset[MenuPos-6] = 0; }
093A C000 FFE1 02178         MOVFF   r0x00, FSR0L
093E C000 FFE2 02179         MOVFF   r0x01, FSR0H
0942 0E00      02180         MOVLW   0x00
0944 6EE7      02181         MOVWF   INDF0
0946           02182 _00505_DS_:
               02183 ;       .line   1167; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0946 0E41      02184         MOVLW   0x41
0948 EC00 F000 02185         CALL    _MIOS_LCD_CursorSet
               02186 ;       .line   1168; main.c    MIOS_LCD_PrintCString("  Preset        ");
094C 0E00      02187         MOVLW   UPPER(__str_34)
094E 6EED      02188         MOVWF   POSTDEC1
0950 0E00      02189         MOVLW   HIGH(__str_34)
0952 6EED      02190         MOVWF   POSTDEC1
0954 0E00      02191         MOVLW   LOW(__str_34)
0956 EC00 F000 02192         CALL    _MIOS_LCD_PrintCString
095A 0E02      02193         MOVLW   0x02
095C 26E9      02194         ADDWF   FSR1L, F
               02195 ;       .line   1169; main.c    MIOS_LCD_CursorSet(0x40 + 11);
095E 0E4B      02196         MOVLW   0x4b
0960 EC00 F000 02197         CALL    _MIOS_LCD_CursorSet
               02198 ;       .line   1170; main.c    MIOS_LCD_PrintBCD3(FootPreset[MenuPos-6]);
0964 0EFA      02199         MOVLW   0xfa
0966 0000      02200         BANKSEL _MenuPos
0968 2500      02201         ADDWF   _MenuPos, W, B
096A 6E00      02202         MOVWF   r0x00
096C 6A00      02203         CLRF    r0x01
096E 0E00      02204         MOVLW   LOW(_FootPreset)
0970 2600      02205         ADDWF   r0x00, F
0972 0E00      02206         MOVLW   HIGH(_FootPreset)
0974 2200      02207         ADDWFC  r0x01, F
0976 C000 FFE1 02208         MOVFF   r0x00, FSR0L
097A C000 FFE2 02209         MOVFF   r0x01, FSR0H
097E CFE7 F000 02210         MOVFF   INDF0, r0x00
0982 5000      02211         MOVF    r0x00, W
0984 EC00 F000 02212         CALL    _MIOS_LCD_PrintBCD3
               02213 ;       .line   1171; main.c    break;
0988 D000      02214         BRA     _00563_DS_
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
098A           02215 _00506_DS_:
               02216 ;       .line   1173; main.c    if ( (LastButton-4) == 0 ) // Down button
098A C000 F000 02217         MOVFF   _LastButton, r0x00
098E 6A00      02218         CLRF    r0x01
0990 5000      02219         MOVF    r0x00, W
0992 0FFC      02220         ADDLW   0xfc
0994 6E00      02221         MOVWF   r0x02
0996 0EFF      02222         MOVLW   0xff
0998 2000      02223         ADDWFC  r0x01, W
099A 6E00      02224         MOVWF   r0x03
099C 5000      02225         MOVF    r0x02, W
099E 1000      02226         IORWF   r0x03, W
09A0 E100      02227         BNZ     _00516_DS_
09A2 0000      02228         BANKSEL _MidiChannel
               02229 ;       .line   1175; main.c    if ( MidiChannel > 0) 
09A4 5100      02230         MOVF    _MidiChannel, W, B
09A6 E000      02231         BZ      _00508_DS_
               02232 ; removed redundant BANKSEL
               02233 ;       .line   1176; main.c    { MidiChannel--; }
09A8 0700      02234         DECF    _MidiChannel, F, B
09AA D000      02235         BRA     _00517_DS_
09AC           02236 _00508_DS_:
               02237 ;       .line   1178; main.c    { MidiChannel = 16; }
09AC 0E10      02238         MOVLW   0x10
09AE 0000      02239         BANKSEL _MidiChannel
09B0 6F00      02240         MOVWF   _MidiChannel, B
09B2 D000      02241         BRA     _00517_DS_
09B4           02242 _00516_DS_:
               02243 ;       .line   1180; main.c    else if ( (LastButton-3) == 0 ) // Up button
09B4 0EFD      02244         MOVLW   0xfd
09B6 2600      02245         ADDWF   r0x00, F
09B8 A0D8      02246         BTFSS   STATUS, 0
09BA 0600      02247         DECF    r0x01, F
09BC 5000      02248         MOVF    r0x00, W
09BE 1000      02249         IORWF   r0x01, W
09C0 E100      02250         BNZ     _00517_DS_
               02251 ;       .line   1182; main.c    if ( MidiChannel < 16) 
09C2 0E10      02252         MOVLW   0x10
09C4 0000      02253         BANKSEL _MidiChannel
09C6 5D00      02254         SUBWF   _MidiChannel, W, B
09C8 E200      02255         BC      _00511_DS_
               02256 ; removed redundant BANKSEL
               02257 ;       .line   1183; main.c    { MidiChannel++; }
09CA 2B00      02258         INCF    _MidiChannel, F, B
09CC D000      02259         BRA     _00517_DS_
09CE           02260 _00511_DS_:
09CE 0000      02261         BANKSEL _MidiChannel
               02262 ;       .line   1185; main.c    { MidiChannel = 0; }
09D0 6B00      02263         CLRF    _MidiChannel, B
09D2           02264 _00517_DS_:
               02265 ;       .line   1187; main.c    MIOS_LCD_CursorSet(0x40 + 1);
09D2 0E41      02266         MOVLW   0x41
09D4 EC00 F000 02267         CALL    _MIOS_LCD_CursorSet
               02268 ;       .line   1188; main.c    MIOS_LCD_PrintCString("                ");
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
09D8 0E00      02269         MOVLW   UPPER(__str_41)
09DA 6EED      02270         MOVWF   POSTDEC1
09DC 0E00      02271         MOVLW   HIGH(__str_41)
09DE 6EED      02272         MOVWF   POSTDEC1
09E0 0E00      02273         MOVLW   LOW(__str_41)
09E2 EC00 F000 02274         CALL    _MIOS_LCD_PrintCString
09E6 0E02      02275         MOVLW   0x02
09E8 26E9      02276         ADDWF   FSR1L, F
               02277 ;       .line   1189; main.c    MIOS_LCD_CursorSet(0x40 + 7);
09EA 0E47      02278         MOVLW   0x47
09EC EC00 F000 02279         CALL    _MIOS_LCD_CursorSet
09F0 0000      02280         BANKSEL _MidiChannel
               02281 ;       .line   1190; main.c    if ( MidiChannel == 0 )
09F2 5100      02282         MOVF    _MidiChannel, W, B
09F4 E100      02283         BNZ     _00519_DS_
               02284 ;       .line   1192; main.c    MIOS_LCD_PrintCString("All");
09F6 0E00      02285         MOVLW   UPPER(__str_55)
09F8 6EED      02286         MOVWF   POSTDEC1
09FA 0E00      02287         MOVLW   HIGH(__str_55)
09FC 6EED      02288         MOVWF   POSTDEC1
09FE 0E00      02289         MOVLW   LOW(__str_55)
0A00 EC00 F000 02290         CALL    _MIOS_LCD_PrintCString
0A04 0E02      02291         MOVLW   0x02
0A06 26E9      02292         ADDWF   FSR1L, F
0A08 D000      02293         BRA     _00563_DS_
0A0A           02294 _00519_DS_:
0A0A 0000      02295         BANKSEL _MidiChannel
               02296 ;       .line   1196; main.c    MIOS_LCD_PrintBCD2(MidiChannel);
0A0C 5100      02297         MOVF    _MidiChannel, W, B
0A0E EC00 F000 02298         CALL    _MIOS_LCD_PrintBCD2
               02299 ;       .line   1198; main.c    break;
0A12 D000      02300         BRA     _00563_DS_
0A14           02301 _00521_DS_:
               02302 ;       .line   1200; main.c    if ( (LastButton-4) == 0 ) // Down button
0A14 C000 F000 02303         MOVFF   _LastButton, r0x00
0A18 6A00      02304         CLRF    r0x01
0A1A 5000      02305         MOVF    r0x00, W
0A1C 0FFC      02306         ADDLW   0xfc
0A1E 6E00      02307         MOVWF   r0x02
0A20 0EFF      02308         MOVLW   0xff
0A22 2000      02309         ADDWFC  r0x01, W
0A24 6E00      02310         MOVWF   r0x03
0A26 5000      02311         MOVF    r0x02, W
0A28 1000      02312         IORWF   r0x03, W
0A2A E100      02313         BNZ     _00531_DS_
0A2C 0000      02314         BANKSEL _ThisStartupPreset
               02315 ;       .line   1202; main.c    if ( ThisStartupPreset > 0) 
0A2E 5100      02316         MOVF    _ThisStartupPreset, W, B
0A30 E000      02317         BZ      _00523_DS_
               02318 ; removed redundant BANKSEL
               02319 ;       .line   1203; main.c    { ThisStartupPreset--; }
0A32 0700      02320         DECF    _ThisStartupPreset, F, B
0A34 D000      02321         BRA     _00532_DS_
0A36           02322 _00523_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02323 ;       .line   1205; main.c    { ThisStartupPreset = 100; }
0A36 0E64      02324         MOVLW   0x64
0A38 0000      02325         BANKSEL _ThisStartupPreset
0A3A 6F00      02326         MOVWF   _ThisStartupPreset, B
0A3C D000      02327         BRA     _00532_DS_
0A3E           02328 _00531_DS_:
               02329 ;       .line   1207; main.c    else if ( (LastButton-3) == 0 ) // Up button
0A3E 0EFD      02330         MOVLW   0xfd
0A40 2600      02331         ADDWF   r0x00, F
0A42 A0D8      02332         BTFSS   STATUS, 0
0A44 0600      02333         DECF    r0x01, F
0A46 5000      02334         MOVF    r0x00, W
0A48 1000      02335         IORWF   r0x01, W
0A4A E100      02336         BNZ     _00532_DS_
               02337 ;       .line   1209; main.c    if ( ThisStartupPreset < 100) 
0A4C 0E64      02338         MOVLW   0x64
0A4E 0000      02339         BANKSEL _ThisStartupPreset
0A50 5D00      02340         SUBWF   _ThisStartupPreset, W, B
0A52 E200      02341         BC      _00526_DS_
               02342 ; removed redundant BANKSEL
               02343 ;       .line   1210; main.c    { ThisStartupPreset++; }
0A54 2B00      02344         INCF    _ThisStartupPreset, F, B
0A56 D000      02345         BRA     _00532_DS_
0A58           02346 _00526_DS_:
0A58 0000      02347         BANKSEL _ThisStartupPreset
               02348 ;       .line   1212; main.c    { ThisStartupPreset = 0; }
0A5A 6B00      02349         CLRF    _ThisStartupPreset, B
0A5C           02350 _00532_DS_:
               02351 ;       .line   1214; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0A5C 0E41      02352         MOVLW   0x41
0A5E EC00 F000 02353         CALL    _MIOS_LCD_CursorSet
               02354 ;       .line   1215; main.c    MIOS_LCD_PrintCString("                ");
0A62 0E00      02355         MOVLW   UPPER(__str_41)
0A64 6EED      02356         MOVWF   POSTDEC1
0A66 0E00      02357         MOVLW   HIGH(__str_41)
0A68 6EED      02358         MOVWF   POSTDEC1
0A6A 0E00      02359         MOVLW   LOW(__str_41)
0A6C EC00 F000 02360         CALL    _MIOS_LCD_PrintCString
0A70 0E02      02361         MOVLW   0x02
0A72 26E9      02362         ADDWF   FSR1L, F
0A74 0000      02363         BANKSEL _ThisStartupPreset
               02364 ;       .line   1216; main.c    if ( ThisStartupPreset == 0 )
0A76 5100      02365         MOVF    _ThisStartupPreset, W, B
0A78 E100      02366         BNZ     _00534_DS_
               02367 ;       .line   1218; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0A7A 0E41      02368         MOVLW   0x41
0A7C EC00 F000 02369         CALL    _MIOS_LCD_CursorSet
               02370 ;       .line   1219; main.c    MIOS_LCD_PrintCString(" ** Last Used **");
0A80 0E00      02371         MOVLW   UPPER(__str_43)
0A82 6EED      02372         MOVWF   POSTDEC1
0A84 0E00      02373         MOVLW   HIGH(__str_43)
0A86 6EED      02374         MOVWF   POSTDEC1
0A88 0E00      02375         MOVLW   LOW(__str_43)
0A8A EC00 F000 02376         CALL    _MIOS_LCD_PrintCString
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0A8E 0E02      02377         MOVLW   0x02
0A90 26E9      02378         ADDWF   FSR1L, F
0A92 0000      02379         BANKSEL _ForceStartupPreset
               02380 ;       .line   1220; main.c    ForceStartupPreset = 0;
0A94 6B00      02381         CLRF    _ForceStartupPreset, B
0A96 D000      02382         BRA     _00563_DS_
0A98           02383 _00534_DS_:
               02384 ;       .line   1224; main.c    MIOS_LCD_CursorSet(0x40 + 7);
0A98 0E47      02385         MOVLW   0x47
0A9A EC00 F000 02386         CALL    _MIOS_LCD_CursorSet
0A9E 0000      02387         BANKSEL _ThisStartupPreset
               02388 ;       .line   1225; main.c    MIOS_LCD_PrintBCD2(ThisStartupPreset);
0AA0 5100      02389         MOVF    _ThisStartupPreset, W, B
0AA2 EC00 F000 02390         CALL    _MIOS_LCD_PrintBCD2
               02391 ;       .line   1226; main.c    ForceStartupPreset = 1;
0AA6 0E01      02392         MOVLW   0x01
0AA8 0000      02393         BANKSEL _ForceStartupPreset
0AAA 6F00      02394         MOVWF   _ForceStartupPreset, B
               02395 ;       .line   1228; main.c    break;
0AAC D000      02396         BRA     _00563_DS_
0AAE           02397 _00536_DS_:
0AAE 0000      02398         BANKSEL _SendMidiOnButtonChange
               02399 ;       .line   1230; main.c    SendMidiOnButtonChange = !SendMidiOnButtonChange;
0AB0 5100      02400         MOVF    _SendMidiOnButtonChange, W, B
0AB2 80D8      02401         BSF     STATUS, 0
0AB4 66E8      02402         TSTFSZ  WREG
0AB6 90D8      02403         BCF     STATUS, 0
               02404 ; removed redundant BANKSEL
0AB8 6B00      02405         CLRF    _SendMidiOnButtonChange, B
0ABA 3700      02406         RLCF    _SendMidiOnButtonChange, F, B
               02407 ;       .line   1231; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0ABC 0E41      02408         MOVLW   0x41
0ABE EC00 F000 02409         CALL    _MIOS_LCD_CursorSet
               02410 ;       .line   1232; main.c    MIOS_LCD_PrintCString("                ");
0AC2 0E00      02411         MOVLW   UPPER(__str_41)
0AC4 6EED      02412         MOVWF   POSTDEC1
0AC6 0E00      02413         MOVLW   HIGH(__str_41)
0AC8 6EED      02414         MOVWF   POSTDEC1
0ACA 0E00      02415         MOVLW   LOW(__str_41)
0ACC EC00 F000 02416         CALL    _MIOS_LCD_PrintCString
0AD0 0E02      02417         MOVLW   0x02
0AD2 26E9      02418         ADDWF   FSR1L, F
               02419 ;       .line   1233; main.c    MIOS_LCD_CursorSet(0x40 + 7);
0AD4 0E47      02420         MOVLW   0x47
0AD6 EC00 F000 02421         CALL    _MIOS_LCD_CursorSet
0ADA 0000      02422         BANKSEL _SendMidiOnButtonChange
               02423 ;       .line   1234; main.c    SendMidiOnButtonChange ? MIOS_LCD_PrintCString("Yes") : MIOS_LCD_PrintCString("No");
0ADC 5100      02424         MOVF    _SendMidiOnButtonChange, W, B
0ADE E000      02425         BZ      _00574_DS_
0AE0 0E00      02426         MOVLW   UPPER(__str_45)
0AE2 6EED      02427         MOVWF   POSTDEC1
0AE4 0E00      02428         MOVLW   HIGH(__str_45)
0AE6 6EED      02429         MOVWF   POSTDEC1
0AE8 0E00      02430         MOVLW   LOW(__str_45)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0AEA EC00 F000 02431         CALL    _MIOS_LCD_PrintCString
0AEE 0E02      02432         MOVLW   0x02
0AF0 26E9      02433         ADDWF   FSR1L, F
0AF2 D000      02434         BRA     _00563_DS_
0AF4           02435 _00574_DS_:
0AF4 0E00      02436         MOVLW   UPPER(__str_46)
0AF6 6EED      02437         MOVWF   POSTDEC1
0AF8 0E00      02438         MOVLW   HIGH(__str_46)
0AFA 6EED      02439         MOVWF   POSTDEC1
0AFC 0E00      02440         MOVLW   LOW(__str_46)
0AFE EC00 F000 02441         CALL    _MIOS_LCD_PrintCString
0B02 0E02      02442         MOVLW   0x02
0B04 26E9      02443         ADDWF   FSR1L, F
               02444 ;       .line   1235; main.c    break;
0B06 D000      02445         BRA     _00563_DS_
0B08           02446 _00537_DS_:
0B08 0000      02447         BANKSEL _ReloadActivePreset
               02448 ;       .line   1237; main.c    ReloadActivePreset = !ReloadActivePreset;
0B0A 5100      02449         MOVF    _ReloadActivePreset, W, B
0B0C 80D8      02450         BSF     STATUS, 0
0B0E 66E8      02451         TSTFSZ  WREG
0B10 90D8      02452         BCF     STATUS, 0
               02453 ; removed redundant BANKSEL
0B12 6B00      02454         CLRF    _ReloadActivePreset, B
0B14 3700      02455         RLCF    _ReloadActivePreset, F, B
               02456 ;       .line   1238; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0B16 0E41      02457         MOVLW   0x41
0B18 EC00 F000 02458         CALL    _MIOS_LCD_CursorSet
               02459 ;       .line   1239; main.c    MIOS_LCD_PrintCString("                ");
0B1C 0E00      02460         MOVLW   UPPER(__str_41)
0B1E 6EED      02461         MOVWF   POSTDEC1
0B20 0E00      02462         MOVLW   HIGH(__str_41)
0B22 6EED      02463         MOVWF   POSTDEC1
0B24 0E00      02464         MOVLW   LOW(__str_41)
0B26 EC00 F000 02465         CALL    _MIOS_LCD_PrintCString
0B2A 0E02      02466         MOVLW   0x02
0B2C 26E9      02467         ADDWF   FSR1L, F
               02468 ;       .line   1240; main.c    MIOS_LCD_CursorSet(0x40 + 7);
0B2E 0E47      02469         MOVLW   0x47
0B30 EC00 F000 02470         CALL    _MIOS_LCD_CursorSet
0B34 0000      02471         BANKSEL _ReloadActivePreset
               02472 ;       .line   1241; main.c    ReloadActivePreset ? MIOS_LCD_PrintCString("Yes") : MIOS_LCD_PrintCString("No");
0B36 5100      02473         MOVF    _ReloadActivePreset, W, B
0B38 E000      02474         BZ      _00576_DS_
0B3A 0E00      02475         MOVLW   UPPER(__str_45)
0B3C 6EED      02476         MOVWF   POSTDEC1
0B3E 0E00      02477         MOVLW   HIGH(__str_45)
0B40 6EED      02478         MOVWF   POSTDEC1
0B42 0E00      02479         MOVLW   LOW(__str_45)
0B44 EC00 F000 02480         CALL    _MIOS_LCD_PrintCString
0B48 0E02      02481         MOVLW   0x02
0B4A 26E9      02482         ADDWF   FSR1L, F
0B4C D000      02483         BRA     _00563_DS_
0B4E           02484 _00576_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0B4E 0E00      02485         MOVLW   UPPER(__str_46)
0B50 6EED      02486         MOVWF   POSTDEC1
0B52 0E00      02487         MOVLW   HIGH(__str_46)
0B54 6EED      02488         MOVWF   POSTDEC1
0B56 0E00      02489         MOVLW   LOW(__str_46)
0B58 EC00 F000 02490         CALL    _MIOS_LCD_PrintCString
0B5C 0E02      02491         MOVLW   0x02
0B5E 26E9      02492         ADDWF   FSR1L, F
               02493 ;       .line   1242; main.c    break;
0B60 D000      02494         BRA     _00563_DS_
0B62           02495 _00542_DS_:
0B62           02496 _00543_DS_:
0B62           02497 _00544_DS_:
0B62           02498 _00545_DS_:
               02499 ;       .line   1251; main.c    RelayType[MenuPos-14]=!RelayType[MenuPos-14];
0B62 0EF2      02500         MOVLW   0xf2
0B64 0000      02501         BANKSEL _MenuPos
0B66 2500      02502         ADDWF   _MenuPos, W, B
0B68 6E00      02503         MOVWF   r0x00
0B6A 6A00      02504         CLRF    r0x01
0B6C 0E00      02505         MOVLW   LOW(_RelayType)
0B6E 2600      02506         ADDWF   r0x00, F
0B70 0E00      02507         MOVLW   HIGH(_RelayType)
0B72 2200      02508         ADDWFC  r0x01, F
0B74 C000 FFE1 02509         MOVFF   r0x00, FSR0L
0B78 C000 FFE2 02510         MOVFF   r0x01, FSR0H
0B7C CFE7 F000 02511         MOVFF   INDF0, r0x02
0B80 5000      02512         MOVF    r0x02, W
0B82 80D8      02513         BSF     STATUS, 0
0B84 66E8      02514         TSTFSZ  WREG
0B86 90D8      02515         BCF     STATUS, 0
0B88 6A00      02516         CLRF    r0x02
0B8A 3600      02517         RLCF    r0x02, F
0B8C C000 FFE1 02518         MOVFF   r0x00, FSR0L
0B90 C000 FFE2 02519         MOVFF   r0x01, FSR0H
0B94 C000 FFE7 02520         MOVFF   r0x02, INDF0
               02521 ;       .line   1252; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0B98 0E41      02522         MOVLW   0x41
0B9A EC00 F000 02523         CALL    _MIOS_LCD_CursorSet
               02524 ;       .line   1253; main.c    MIOS_LCD_PrintCString("                ");
0B9E 0E00      02525         MOVLW   UPPER(__str_41)
0BA0 6EED      02526         MOVWF   POSTDEC1
0BA2 0E00      02527         MOVLW   HIGH(__str_41)
0BA4 6EED      02528         MOVWF   POSTDEC1
0BA6 0E00      02529         MOVLW   LOW(__str_41)
0BA8 EC00 F000 02530         CALL    _MIOS_LCD_PrintCString
0BAC 0E02      02531         MOVLW   0x02
0BAE 26E9      02532         ADDWF   FSR1L, F
               02533 ;       .line   1254; main.c    MIOS_LCD_CursorSet(0x40 + 3);
0BB0 0E43      02534         MOVLW   0x43
0BB2 EC00 F000 02535         CALL    _MIOS_LCD_CursorSet
               02536 ;       .line   1255; main.c    RelayType[MenuPos-14] ? MIOS_LCD_PrintCString("Momentary") : MIOS_LCD_PrintCString("Toggle");
0BB6 0EF2      02537         MOVLW   0xf2
0BB8 0000      02538         BANKSEL _MenuPos
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0BBA 2500      02539         ADDWF   _MenuPos, W, B
0BBC 6E00      02540         MOVWF   r0x00
0BBE 6A00      02541         CLRF    r0x01
0BC0 0E00      02542         MOVLW   LOW(_RelayType)
0BC2 2600      02543         ADDWF   r0x00, F
0BC4 0E00      02544         MOVLW   HIGH(_RelayType)
0BC6 2200      02545         ADDWFC  r0x01, F
0BC8 C000 FFE1 02546         MOVFF   r0x00, FSR0L
0BCC C000 FFE2 02547         MOVFF   r0x01, FSR0H
0BD0 CFE7 F000 02548         MOVFF   INDF0, r0x00
0BD4 5000      02549         MOVF    r0x00, W
0BD6 E000      02550         BZ      _00578_DS_
0BD8 0E00      02551         MOVLW   UPPER(__str_49)
0BDA 6EED      02552         MOVWF   POSTDEC1
0BDC 0E00      02553         MOVLW   HIGH(__str_49)
0BDE 6EED      02554         MOVWF   POSTDEC1
0BE0 0E00      02555         MOVLW   LOW(__str_49)
0BE2 EC00 F000 02556         CALL    _MIOS_LCD_PrintCString
0BE6 0E02      02557         MOVLW   0x02
0BE8 26E9      02558         ADDWF   FSR1L, F
0BEA D000      02559         BRA     _00563_DS_
0BEC           02560 _00578_DS_:
0BEC 0E00      02561         MOVLW   UPPER(__str_50)
0BEE 6EED      02562         MOVWF   POSTDEC1
0BF0 0E00      02563         MOVLW   HIGH(__str_50)
0BF2 6EED      02564         MOVWF   POSTDEC1
0BF4 0E00      02565         MOVLW   LOW(__str_50)
0BF6 EC00 F000 02566         CALL    _MIOS_LCD_PrintCString
0BFA 0E02      02567         MOVLW   0x02
0BFC 26E9      02568         ADDWF   FSR1L, F
               02569 ;       .line   1256; main.c    break;
0BFE D000      02570         BRA     _00563_DS_
0C00           02571 _00550_DS_:
0C00           02572 _00551_DS_:
0C00           02573 _00552_DS_:
0C00           02574 _00553_DS_:
               02575 ;       .line   1265; main.c    RelayMode[MenuPos-22]=!RelayMode[MenuPos-22];
0C00 0EEA      02576         MOVLW   0xea
0C02 0000      02577         BANKSEL _MenuPos
0C04 2500      02578         ADDWF   _MenuPos, W, B
0C06 6E00      02579         MOVWF   r0x00
0C08 6A00      02580         CLRF    r0x01
0C0A 0E00      02581         MOVLW   LOW(_RelayMode)
0C0C 2600      02582         ADDWF   r0x00, F
0C0E 0E00      02583         MOVLW   HIGH(_RelayMode)
0C10 2200      02584         ADDWFC  r0x01, F
0C12 C000 FFE1 02585         MOVFF   r0x00, FSR0L
0C16 C000 FFE2 02586         MOVFF   r0x01, FSR0H
0C1A CFE7 F000 02587         MOVFF   INDF0, r0x02
0C1E 5000      02588         MOVF    r0x02, W
0C20 80D8      02589         BSF     STATUS, 0
0C22 66E8      02590         TSTFSZ  WREG
0C24 90D8      02591         BCF     STATUS, 0
0C26 6A00      02592         CLRF    r0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0C28 3600      02593         RLCF    r0x02, F
0C2A C000 FFE1 02594         MOVFF   r0x00, FSR0L
0C2E C000 FFE2 02595         MOVFF   r0x01, FSR0H
0C32 C000 FFE7 02596         MOVFF   r0x02, INDF0
               02597 ;       .line   1266; main.c    MIOS_LCD_CursorSet(0x40 + 1);
0C36 0E41      02598         MOVLW   0x41
0C38 EC00 F000 02599         CALL    _MIOS_LCD_CursorSet
               02600 ;       .line   1267; main.c    MIOS_LCD_PrintCString("                ");
0C3C 0E00      02601         MOVLW   UPPER(__str_41)
0C3E 6EED      02602         MOVWF   POSTDEC1
0C40 0E00      02603         MOVLW   HIGH(__str_41)
0C42 6EED      02604         MOVWF   POSTDEC1
0C44 0E00      02605         MOVLW   LOW(__str_41)
0C46 EC00 F000 02606         CALL    _MIOS_LCD_PrintCString
0C4A 0E02      02607         MOVLW   0x02
0C4C 26E9      02608         ADDWF   FSR1L, F
               02609 ;       .line   1268; main.c    MIOS_LCD_CursorSet(0x40 + 3);
0C4E 0E43      02610         MOVLW   0x43
0C50 EC00 F000 02611         CALL    _MIOS_LCD_CursorSet
               02612 ;       .line   1269; main.c    RelayMode[MenuPos-22] ? MIOS_LCD_PrintCString("Radio") : MIOS_LCD_PrintCString("Free");
0C54 0EEA      02613         MOVLW   0xea
0C56 0000      02614         BANKSEL _MenuPos
0C58 2500      02615         ADDWF   _MenuPos, W, B
0C5A 6E00      02616         MOVWF   r0x00
0C5C 6A00      02617         CLRF    r0x01
0C5E 0E00      02618         MOVLW   LOW(_RelayMode)
0C60 2600      02619         ADDWF   r0x00, F
0C62 0E00      02620         MOVLW   HIGH(_RelayMode)
0C64 2200      02621         ADDWFC  r0x01, F
0C66 C000 FFE1 02622         MOVFF   r0x00, FSR0L
0C6A C000 FFE2 02623         MOVFF   r0x01, FSR0H
0C6E CFE7 F000 02624         MOVFF   INDF0, r0x00
0C72 5000      02625         MOVF    r0x00, W
0C74 E000      02626         BZ      _00580_DS_
0C76 0E00      02627         MOVLW   UPPER(__str_52)
0C78 6EED      02628         MOVWF   POSTDEC1
0C7A 0E00      02629         MOVLW   HIGH(__str_52)
0C7C 6EED      02630         MOVWF   POSTDEC1
0C7E 0E00      02631         MOVLW   LOW(__str_52)
0C80 EC00 F000 02632         CALL    _MIOS_LCD_PrintCString
0C84 0E02      02633         MOVLW   0x02
0C86 26E9      02634         ADDWF   FSR1L, F
0C88 D000      02635         BRA     _00563_DS_
0C8A           02636 _00580_DS_:
0C8A 0E00      02637         MOVLW   UPPER(__str_53)
0C8C 6EED      02638         MOVWF   POSTDEC1
0C8E 0E00      02639         MOVLW   HIGH(__str_53)
0C90 6EED      02640         MOVWF   POSTDEC1
0C92 0E00      02641         MOVLW   LOW(__str_53)
0C94 EC00 F000 02642         CALL    _MIOS_LCD_PrintCString
0C98 0E02      02643         MOVLW   0x02
0C9A 26E9      02644         ADDWF   FSR1L, F
0C9C           02645 _00563_DS_:
0C9C 0000      02646         BANKSEL _LastButton
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02647 ;       .line   1278; main.c    LastButton = 0;
0C9E 6B00      02648         CLRF    _LastButton, B
0CA0 CFEC F000 02649         MOVFF   PREINC1, r0x05
0CA4 CFEC F000 02650         MOVFF   PREINC1, r0x04
0CA8 CFEC F000 02651         MOVFF   PREINC1, r0x03
0CAC CFEC F000 02652         MOVFF   PREINC1, r0x02
0CB0 CFEC F000 02653         MOVFF   PREINC1, r0x01
0CB4 CFEC F000 02654         MOVFF   PREINC1, r0x00
0CB8 0012      02655         RETURN  
               02656 
               02657 ; ; Starting pCode block
               02658 S_main__Init    code
0000           02659 _Init:
               02660 ;       .line   855; main.c     void Init(void) __wparam
0000 C000 FFED 02661         MOVFF   r0x00, POSTDEC1
               02662 ;       .line   858; main.c     MIOS_SRIO_UpdateFrqSet(1); // ms
0004 0E01      02663         MOVLW   0x01
0006 EC00 F000 02664         CALL    _MIOS_SRIO_UpdateFrqSet
               02665 ;       .line   860; main.c     MIOS_SRIO_NumberSet(NUMBER_OF_SRIO);
000A 0E10      02666         MOVLW   0x10
000C EC00 F000 02667         CALL    _MIOS_SRIO_NumberSet
               02668 ;       .line   862; main.c     MIOS_SRIO_DebounceSet(DIN_DEBOUNCE_VALUE);
0010 0E0A      02669         MOVLW   0x0a
0012 EC00 F000 02670         CALL    _MIOS_SRIO_DebounceSet
0016 0000      02671         BANKSEL _LastButton
               02672 ;       .line   865; main.c     LastButton = 0;
0018 6B00      02673         CLRF    _LastButton, B
001A 0000      02674         BANKSEL _MenuPos
               02675 ;       .line   866; main.c     MenuPos = 0;
001C 6B00      02676         CLRF    _MenuPos, B
001E 0000      02677         BANKSEL _MidiIn
               02678 ;       .line   867; main.c     MidiIn = 0;
0020 6B00      02679         CLRF    _MidiIn, B
               02680 ;       .line   870; main.c     LoadGlobalOptions();
0022 EC00 F000 02681         CALL    _LoadGlobalOptions
               02682 ;       .line   874; main.c     RelayState[5]=1;
0026 0E01      02683         MOVLW   0x01
0028 0000      02684         BANKSEL (_RelayState + 5)
002A 6F00      02685         MOVWF   (_RelayState + 5), B
               02686 ;       .line   876; main.c     MIOS_DOUT_PinSet(RelayLedPin[5], 1);
002C 0E00      02687         MOVLW   LOW(_RelayLedPin + 5)
002E 6EF6      02688         MOVWF   TBLPTRL
0030 0E00      02689         MOVLW   HIGH(_RelayLedPin + 5)
0032 6EF7      02690         MOVWF   TBLPTRH
0034 0E00      02691         MOVLW   UPPER(_RelayLedPin + 5)
0036 6EF8      02692         MOVWF   TBLPTRU
0038 0009      02693         TBLRD*+ 
003A CFF5 F000 02694         MOVFF   TABLAT, r0x00
003E 0E01      02695         MOVLW   0x01
0040 6EED      02696         MOVWF   POSTDEC1
0042 5000      02697         MOVF    r0x00, W
0044 EC00 F000 02698         CALL    _MIOS_DOUT_PinSet
0048 2AE9      02699         INCF    FSR1L, F
               02700 ;       .line   879; main.c     StartupPreset();
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A EC00 F000 02701         CALL    _StartupPreset
               02702 ;       .line   883; main.c     DEBUG_MSG_SendHeader();
004E EC00 F000 02703         CALL    _DEBUG_MSG_SendHeader
               02704 ;       .line   884; main.c     DEBUG_MSG_SendCString("Application ready.");
0052 0E00      02705         MOVLW   UPPER(__str_27)
0054 6EED      02706         MOVWF   POSTDEC1
0056 0E00      02707         MOVLW   HIGH(__str_27)
0058 6EED      02708         MOVWF   POSTDEC1
005A 0E00      02709         MOVLW   LOW(__str_27)
005C EC00 F000 02710         CALL    _DEBUG_MSG_SendCString
0060 0E02      02711         MOVLW   0x02
0062 26E9      02712         ADDWF   FSR1L, F
               02713 ;       .line   885; main.c     DEBUG_MSG_SendFooter();
0064 EC00 F000 02714         CALL    _DEBUG_MSG_SendFooter
0068 CFEC F000 02715         MOVFF   PREINC1, r0x00
006C 0012      02716         RETURN  
               02717 
               02718 ; ; Starting pCode block
               02719 S_main__StartupPreset   code
0000           02720 _StartupPreset:
               02721 ;       .line   830; main.c     void StartupPreset ()
0000 C000 FFED 02722         MOVFF   r0x00, POSTDEC1
0004 0000      02723         BANKSEL _CurrentPreset
               02724 ;       .line   832; main.c     CurrentPreset = 0;  // force preset 0 to allow loading at startup even
0006 6B00      02725         CLRF    _CurrentPreset, B
0008 0000      02726         BANKSEL _ForceStartupPreset
               02727 ;       .line   834; main.c     if ( ForceStartupPreset )
000A 5100      02728         MOVF    _ForceStartupPreset, W, B
000C E000      02729         BZ      _00422_DS_
               02730 ;       .line   836; main.c     ThisStartupPreset = MIOS_EEPROM_Read(0x08);
000E 0E08      02731         MOVLW   0x08
0010 EC00 F000 02732         CALL    _MIOS_EEPROM_Read
0014 0000      02733         BANKSEL _ThisStartupPreset
0016 6F00      02734         MOVWF   _ThisStartupPreset, B
               02735 ;       .line   837; main.c     LoadPreset(ThisStartupPreset);
0018 5100      02736         MOVF    _ThisStartupPreset, W, B
001A 6EED      02737         MOVWF   POSTDEC1
001C EC00 F000 02738         CALL    _LoadPreset
0020 2AE9      02739         INCF    FSR1L, F
               02740 ;       .line   838; main.c     return;
0022 D000      02741         BRA     _00423_DS_
0024           02742 _00422_DS_:
               02743 ;       .line   843; main.c     DEBUG_MSG_SendHeader();
0024 EC00 F000 02744         CALL    _DEBUG_MSG_SendHeader
               02745 ;       .line   844; main.c     DEBUG_MSG_SendCString("STARTUP PRESET");
0028 0E00      02746         MOVLW   UPPER(__str_26)
002A 6EED      02747         MOVWF   POSTDEC1
002C 0E00      02748         MOVLW   HIGH(__str_26)
002E 6EED      02749         MOVWF   POSTDEC1
0030 0E00      02750         MOVLW   LOW(__str_26)
0032 EC00 F000 02751         CALL    _DEBUG_MSG_SendCString
0036 0E02      02752         MOVLW   0x02
0038 26E9      02753         ADDWF   FSR1L, F
003A 0000      02754         BANKSEL _CurrentPreset
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02755 ;       .line   845; main.c     DEBUG_MSG_SendBCD3(CurrentPreset);
003C 5100      02756         MOVF    _CurrentPreset, W, B
003E EC00 F000 02757         CALL    _DEBUG_MSG_SendBCD3
               02758 ;       .line   846; main.c     DEBUG_MSG_SendFooter();
0042 EC00 F000 02759         CALL    _DEBUG_MSG_SendFooter
               02760 ;       .line   848; main.c     LoadPreset(MIOS_EEPROM_Read(0x01));
0046 0E01      02761         MOVLW   0x01
0048 EC00 F000 02762         CALL    _MIOS_EEPROM_Read
004C 6E00      02763         MOVWF   r0x00
004E 5000      02764         MOVF    r0x00, W
0050 6EED      02765         MOVWF   POSTDEC1
0052 EC00 F000 02766         CALL    _LoadPreset
0056 2AE9      02767         INCF    FSR1L, F
0058           02768 _00423_DS_:
0058 CFEC F000 02769         MOVFF   PREINC1, r0x00
005C 0012      02770         RETURN  
               02771 
               02772 ; ; Starting pCode block
               02773 S_main__FactoryReset    code
0000           02774 _FactoryReset:
               02775 ;       .line   760; main.c     unsigned char FactoryReset ()
0000 C000 FFED 02776         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 02777         MOVFF   r0x01, POSTDEC1
0008 C000 FFED 02778         MOVFF   r0x02, POSTDEC1
000C C000 FFED 02779         MOVFF   r0x03, POSTDEC1
               02780 ;       .line   764; main.c     unsigned char error = 0;
0010 6A00      02781         CLRF    r0x00
               02782 ;       .line   767; main.c     DEBUG_MSG_SendHeader();
0012 EC00 F000 02783         CALL    _DEBUG_MSG_SendHeader
               02784 ;       .line   768; main.c     DEBUG_MSG_SendCString("Factory Reset");
0016 0E00      02785         MOVLW   UPPER(__str_25)
0018 6EED      02786         MOVWF   POSTDEC1
001A 0E00      02787         MOVLW   HIGH(__str_25)
001C 6EED      02788         MOVWF   POSTDEC1
001E 0E00      02789         MOVLW   LOW(__str_25)
0020 EC00 F000 02790         CALL    _DEBUG_MSG_SendCString
0024 0E02      02791         MOVLW   0x02
0026 26E9      02792         ADDWF   FSR1L, F
               02793 ;       .line   769; main.c     DEBUG_MSG_SendFooter();
0028 EC00 F000 02794         CALL    _DEBUG_MSG_SendFooter
               02795 ;       .line   778; main.c     MIOS_EEPROM_Write(0x00,eeprom_byte);
002C 0E00      02796         MOVLW   0x00
002E 6EED      02797         MOVWF   POSTDEC1
0030 0E00      02798         MOVLW   0x00
0032 EC00 F000 02799         CALL    _MIOS_EEPROM_Write
0036 2AE9      02800         INCF    FSR1L, F
               02801 ;       .line   781; main.c     SetActivePreset(0);                                                             
0038 0E00      02802         MOVLW   0x00
003A 6EED      02803         MOVWF   POSTDEC1
003C EC00 F000 02804         CALL    _SetActivePreset
0040 2AE9      02805         INCF    FSR1L, F
               02806 ;       .line   785; main.c     MIOS_EEPROM_Write(0x02,eeprom_byte);
0042 0E00      02807         MOVLW   0x00
0044 6EED      02808         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0046 0E02      02809         MOVLW   0x02
0048 EC00 F000 02810         CALL    _MIOS_EEPROM_Write
004C 2AE9      02811         INCF    FSR1L, F
               02812 ;       .line   789; main.c     MIOS_EEPROM_Write(0x03,eeprom_byte);
004E 0E00      02813         MOVLW   0x00
0050 6EED      02814         MOVWF   POSTDEC1
0052 0E03      02815         MOVLW   0x03
0054 EC00 F000 02816         CALL    _MIOS_EEPROM_Write
0058 2AE9      02817         INCF    FSR1L, F
               02818 ;       .line   792; main.c     MIOS_EEPROM_Write(0x04,1);      
005A 0E01      02819         MOVLW   0x01
005C 6EED      02820         MOVWF   POSTDEC1
005E 0E04      02821         MOVLW   0x04
0060 EC00 F000 02822         CALL    _MIOS_EEPROM_Write
0064 2AE9      02823         INCF    FSR1L, F
               02824 ;       .line   794; main.c     MIOS_EEPROM_Write(0x05,2);      
0066 0E02      02825         MOVLW   0x02
0068 6EED      02826         MOVWF   POSTDEC1
006A 0E05      02827         MOVLW   0x05
006C EC00 F000 02828         CALL    _MIOS_EEPROM_Write
0070 2AE9      02829         INCF    FSR1L, F
               02830 ;       .line   796; main.c     MIOS_EEPROM_Write(0x06,3);      
0072 0E03      02831         MOVLW   0x03
0074 6EED      02832         MOVWF   POSTDEC1
0076 0E06      02833         MOVLW   0x06
0078 EC00 F000 02834         CALL    _MIOS_EEPROM_Write
007C 2AE9      02835         INCF    FSR1L, F
               02836 ;       .line   798; main.c     MIOS_EEPROM_Write(0x07,4);      
007E 0E04      02837         MOVLW   0x04
0080 6EED      02838         MOVWF   POSTDEC1
0082 0E07      02839         MOVLW   0x07
0084 EC00 F000 02840         CALL    _MIOS_EEPROM_Write
0088 2AE9      02841         INCF    FSR1L, F
               02842 ;       .line   801; main.c     MIOS_EEPROM_Write(0x07,0);      
008A 0E00      02843         MOVLW   0x00
008C 6EED      02844         MOVWF   POSTDEC1
008E 0E07      02845         MOVLW   0x07
0090 EC00 F000 02846         CALL    _MIOS_EEPROM_Write
0094 2AE9      02847         INCF    FSR1L, F
               02848 ;       .line   810; main.c     for ( i = 0x08; i<0x10; i++)
0096 0E08      02849         MOVLW   0x08
0098 6E00      02850         MOVWF   r0x01
009A 6A00      02851         CLRF    r0x02
009C           02852 _00398_DS_:
009C 0E00      02853         MOVLW   0x00
009E 5C00      02854         SUBWF   r0x02, W
00A0 E100      02855         BNZ     _00415_DS_
00A2 0E10      02856         MOVLW   0x10
00A4 5C00      02857         SUBWF   r0x01, W
00A6           02858 _00415_DS_:
00A6 E200      02859         BC      _00401_DS_
               02860 ;       .line   812; main.c     MIOS_EEPROM_Write(i,0x00);
00A8 5000      02861         MOVF    r0x01, W
00AA 6E00      02862         MOVWF   r0x03
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AC 0E00      02863         MOVLW   0x00
00AE 6EED      02864         MOVWF   POSTDEC1
00B0 5000      02865         MOVF    r0x03, W
00B2 EC00 F000 02866         CALL    _MIOS_EEPROM_Write
00B6 2AE9      02867         INCF    FSR1L, F
               02868 ;       .line   810; main.c     for ( i = 0x08; i<0x10; i++)
00B8 2A00      02869         INCF    r0x01, F
00BA B0D8      02870         BTFSC   STATUS, 0
00BC 2A00      02871         INCF    r0x02, F
00BE D000      02872         BRA     _00398_DS_
00C0           02873 _00401_DS_:
               02874 ;       .line   817; main.c     for ( i = 0; i<100; i++)
00C0 6A00      02875         CLRF    r0x01
00C2 6A00      02876         CLRF    r0x02
00C4           02877 _00402_DS_:
00C4 0E00      02878         MOVLW   0x00
00C6 5C00      02879         SUBWF   r0x02, W
00C8 E100      02880         BNZ     _00416_DS_
00CA 0E64      02881         MOVLW   0x64
00CC 5C00      02882         SUBWF   r0x01, W
00CE           02883 _00416_DS_:
00CE E200      02884         BC      _00405_DS_
               02885 ;       .line   819; main.c     error |= MIOS_EEPROM_Write(i+16,0x00);  //all off
00D0 5000      02886         MOVF    r0x01, W
00D2 6E00      02887         MOVWF   r0x03
00D4 0E10      02888         MOVLW   0x10
00D6 2600      02889         ADDWF   r0x03, F
00D8 0E00      02890         MOVLW   0x00
00DA 6EED      02891         MOVWF   POSTDEC1
00DC 5000      02892         MOVF    r0x03, W
00DE EC00 F000 02893         CALL    _MIOS_EEPROM_Write
00E2 6E00      02894         MOVWF   r0x03
00E4 2AE9      02895         INCF    FSR1L, F
00E6 5000      02896         MOVF    r0x03, W
00E8 1200      02897         IORWF   r0x00, F
               02898 ;       .line   817; main.c     for ( i = 0; i<100; i++)
00EA 2A00      02899         INCF    r0x01, F
00EC B0D8      02900         BTFSC   STATUS, 0
00EE 2A00      02901         INCF    r0x02, F
00F0 D000      02902         BRA     _00402_DS_
00F2           02903 _00405_DS_:
               02904 ;       .line   821; main.c     if( error ) {
00F2 5000      02905         MOVF    r0x00, W
00F4 E000      02906         BZ      _00397_DS_
               02907 ;       .line   822; main.c     return 0;
00F6 6AE8      02908         CLRF    WREG
00F8 D000      02909         BRA     _00406_DS_
00FA           02910 _00397_DS_:
               02911 ;       .line   824; main.c     return 1;
00FA 0E01      02912         MOVLW   0x01
00FC           02913 _00406_DS_:
00FC CFEC F000 02914         MOVFF   PREINC1, r0x03
0100 CFEC F000 02915         MOVFF   PREINC1, r0x02
0104 CFEC F000 02916         MOVFF   PREINC1, r0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 CFEC F000 02917         MOVFF   PREINC1, r0x00
010C 0012      02918         RETURN  
               02919 
               02920 ; ; Starting pCode block
               02921 S_main__Preset_Down     code
0000           02922 _Preset_Down:
               02923 ;       .line   739; main.c     unsigned char Preset_Down()
0000 C000 FFED 02924         MOVFF   r0x00, POSTDEC1
0004 0000      02925         BANKSEL _CurrentPreset
               02926 ;       .line   741; main.c     if ( CurrentPreset > 0 )
0006 5100      02927         MOVF    _CurrentPreset, W, B
0008 E000      02928         BZ      _00389_DS_
               02929 ; removed redundant BANKSEL
               02930 ;       .line   743; main.c     LoadPreset(CurrentPreset-1);
000A 0500      02931         DECF    _CurrentPreset, W, B
000C 6E00      02932         MOVWF   r0x00
000E 5000      02933         MOVF    r0x00, W
0010 6EED      02934         MOVWF   POSTDEC1
0012 EC00 F000 02935         CALL    _LoadPreset
0016 2AE9      02936         INCF    FSR1L, F
0018 D000      02937         BRA     _00390_DS_
001A           02938 _00389_DS_:
               02939 ;       .line   748; main.c     DEBUG_MSG_SendHeader();
001A EC00 F000 02940         CALL    _DEBUG_MSG_SendHeader
               02941 ;       .line   749; main.c     DEBUG_MSG_SendCString("Ignored, already at lowest preset");
001E 0E00      02942         MOVLW   UPPER(__str_24)
0020 6EED      02943         MOVWF   POSTDEC1
0022 0E00      02944         MOVLW   HIGH(__str_24)
0024 6EED      02945         MOVWF   POSTDEC1
0026 0E00      02946         MOVLW   LOW(__str_24)
0028 EC00 F000 02947         CALL    _DEBUG_MSG_SendCString
002C 0E02      02948         MOVLW   0x02
002E 26E9      02949         ADDWF   FSR1L, F
               02950 ;       .line   750; main.c     DEBUG_MSG_SendFooter();
0030 EC00 F000 02951         CALL    _DEBUG_MSG_SendFooter
               02952 ;       .line   753; main.c     return 0;
0034 6AE8      02953         CLRF    WREG
0036 D000      02954         BRA     _00391_DS_
0038           02955 _00390_DS_:
               02956 ;       .line   755; main.c     return 1;
0038 0E01      02957         MOVLW   0x01
003A           02958 _00391_DS_:
003A CFEC F000 02959         MOVFF   PREINC1, r0x00
003E 0012      02960         RETURN  
               02961 
               02962 ; ; Starting pCode block
               02963 S_main__Preset_Up       code
0000           02964 _Preset_Up:
               02965 ;       .line   718; main.c     unsigned char Preset_Up()
0000 C000 FFED 02966         MOVFF   r0x00, POSTDEC1
               02967 ;       .line   720; main.c     if ( CurrentPreset < 100 )
0004 0E64      02968         MOVLW   0x64
0006 0000      02969         BANKSEL _CurrentPreset
0008 5D00      02970         SUBWF   _CurrentPreset, W, B
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000A E200      02971         BC      _00381_DS_
               02972 ; removed redundant BANKSEL
               02973 ;       .line   722; main.c     LoadPreset(CurrentPreset+1);
000C 2900      02974         INCF    _CurrentPreset, W, B
000E 6E00      02975         MOVWF   r0x00
0010 5000      02976         MOVF    r0x00, W
0012 6EED      02977         MOVWF   POSTDEC1
0014 EC00 F000 02978         CALL    _LoadPreset
0018 2AE9      02979         INCF    FSR1L, F
001A D000      02980         BRA     _00382_DS_
001C           02981 _00381_DS_:
               02982 ;       .line   727; main.c     DEBUG_MSG_SendHeader();
001C EC00 F000 02983         CALL    _DEBUG_MSG_SendHeader
               02984 ;       .line   728; main.c     DEBUG_MSG_SendCString("Ignored, already at highest preset");
0020 0E00      02985         MOVLW   UPPER(__str_23)
0022 6EED      02986         MOVWF   POSTDEC1
0024 0E00      02987         MOVLW   HIGH(__str_23)
0026 6EED      02988         MOVWF   POSTDEC1
0028 0E00      02989         MOVLW   LOW(__str_23)
002A EC00 F000 02990         CALL    _DEBUG_MSG_SendCString
002E 0E02      02991         MOVLW   0x02
0030 26E9      02992         ADDWF   FSR1L, F
               02993 ;       .line   729; main.c     DEBUG_MSG_SendFooter();
0032 EC00 F000 02994         CALL    _DEBUG_MSG_SendFooter
               02995 ;       .line   732; main.c     return 0;
0036 6AE8      02996         CLRF    WREG
0038 D000      02997         BRA     _00383_DS_
003A           02998 _00382_DS_:
               02999 ;       .line   734; main.c     return 1;
003A 0E01      03000         MOVLW   0x01
003C           03001 _00383_DS_:
003C CFEC F000 03002         MOVFF   PREINC1, r0x00
0040 0012      03003         RETURN  
               03004 
               03005 ; ; Starting pCode block
               03006 S_main__SavePreset      code
0000           03007 _SavePreset:
               03008 ;       .line   657; main.c     void SavePreset ( unsigned char preset_nb )
0000 CFD9 FFED 03009         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 03010         MOVFF   FSR1L, FSR2L
0008 C000 FFED 03011         MOVFF   r0x00, POSTDEC1
000C C000 FFED 03012         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 03013         MOVFF   r0x02, POSTDEC1
0014 0E02      03014         MOVLW   0x02
0016 CFDB F000 03015         MOVFF   PLUSW2, r0x00
               03016 ;       .line   661; main.c     if ( preset_nb == 0 )
001A 5000      03017         MOVF    r0x00, W
001C E100      03018         BNZ     _00372_DS_
               03019 ;       .line   665; main.c     MIOS_LCD_Clear();
001E EC00 F000 03020         CALL    _MIOS_LCD_Clear
               03021 ;       .line   666; main.c     MIOS_LCD_CursorSet(0x00);
0022 0E00      03022         MOVLW   0x00
0024 EC00 F000 03023         CALL    _MIOS_LCD_CursorSet
               03024 ;       .line   667; main.c     MIOS_LCD_PrintCString("Cannot Save to");
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 0E00      03025         MOVLW   UPPER(__str_19)
002A 6EED      03026         MOVWF   POSTDEC1
002C 0E00      03027         MOVLW   HIGH(__str_19)
002E 6EED      03028         MOVWF   POSTDEC1
0030 0E00      03029         MOVLW   LOW(__str_19)
0032 EC00 F000 03030         CALL    _MIOS_LCD_PrintCString
0036 0E02      03031         MOVLW   0x02
0038 26E9      03032         ADDWF   FSR1L, F
               03033 ;       .line   668; main.c     MIOS_LCD_CursorSet(0x40);
003A 0E40      03034         MOVLW   0x40
003C EC00 F000 03035         CALL    _MIOS_LCD_CursorSet
               03036 ;       .line   669; main.c     MIOS_LCD_PrintCString("Preset 0");
0040 0E00      03037         MOVLW   UPPER(__str_20)
0042 6EED      03038         MOVWF   POSTDEC1
0044 0E00      03039         MOVLW   HIGH(__str_20)
0046 6EED      03040         MOVWF   POSTDEC1
0048 0E00      03041         MOVLW   LOW(__str_20)
004A EC00 F000 03042         CALL    _MIOS_LCD_PrintCString
004E 0E02      03043         MOVLW   0x02
0050 26E9      03044         ADDWF   FSR1L, F
               03045 ;       .line   670; main.c     MIOS_LCD_MessageStart(255);
0052 0EFF      03046         MOVLW   0xff
0054 EC00 F000 03047         CALL    _MIOS_LCD_MessageStart
               03048 ;       .line   671; main.c     return;
0058 D000      03049         BRA     _00375_DS_
005A           03050 _00372_DS_:
               03051 ;       .line   674; main.c     if ( preset_nb > 0x69 )
005A 0E6A      03052         MOVLW   0x6a
005C 5C00      03053         SUBWF   r0x00, W
005E E300      03054         BNC     _00374_DS_
               03055 ;       .line   677; main.c     DEBUG_MSG_SendHeader();
0060 EC00 F000 03056         CALL    _DEBUG_MSG_SendHeader
               03057 ;       .line   678; main.c     DEBUG_MSG_SendCString("Discarded saving preset ");
0064 0E00      03058         MOVLW   UPPER(__str_21)
0066 6EED      03059         MOVWF   POSTDEC1
0068 0E00      03060         MOVLW   HIGH(__str_21)
006A 6EED      03061         MOVWF   POSTDEC1
006C 0E00      03062         MOVLW   LOW(__str_21)
006E EC00 F000 03063         CALL    _DEBUG_MSG_SendCString
0072 0E02      03064         MOVLW   0x02
0074 26E9      03065         ADDWF   FSR1L, F
               03066 ;       .line   679; main.c     DEBUG_MSG_SendBCD3(preset_nb);
0076 5000      03067         MOVF    r0x00, W
0078 EC00 F000 03068         CALL    _DEBUG_MSG_SendBCD3
               03069 ;       .line   680; main.c     DEBUG_MSG_SendFooter();
007C EC00 F000 03070         CALL    _DEBUG_MSG_SendFooter
               03071 ;       .line   682; main.c     return; 
0080 D000      03072         BRA     _00375_DS_
0082           03073 _00374_DS_:
0082 0000      03074         BANKSEL _CurrentPreset
               03075 ;       .line   686; main.c     MIOS_EEPROM_Write(0x01,CurrentPreset);
0084 5100      03076         MOVF    _CurrentPreset, W, B
0086 6EED      03077         MOVWF   POSTDEC1
0088 0E01      03078         MOVLW   0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A EC00 F000 03079         CALL    _MIOS_EEPROM_Write
008E 2AE9      03080         INCF    FSR1L, F
               03081 ;       .line   692; main.c     eeprom_byte = RelayState[0];
0090 C000 F000 03082         MOVFF   _RelayState, r0x01
0094 0000      03083         BANKSEL (_RelayState + 1)
               03084 ;       .line   693; main.c     eeprom_byte = eeprom_byte | RelayState[1]<<1;
0096 4500      03085         RLNCF   (_RelayState + 1), W, B
0098 0BFE      03086         ANDLW   0xfe
009A 6E00      03087         MOVWF   r0x02
009C 5000      03088         MOVF    r0x02, W
009E 1200      03089         IORWF   r0x01, F
               03090 ; removed redundant BANKSEL
               03091 ;       .line   694; main.c     eeprom_byte = eeprom_byte | RelayState[2]<<2;
00A0 4500      03092         RLNCF   (_RelayState + 2), W, B
00A2 44E8      03093         RLNCF   WREG, W
00A4 0BFC      03094         ANDLW   0xfc
00A6 6E00      03095         MOVWF   r0x02
00A8 5000      03096         MOVF    r0x02, W
00AA 1200      03097         IORWF   r0x01, F
               03098 ; removed redundant BANKSEL
               03099 ;       .line   695; main.c     eeprom_byte = eeprom_byte | RelayState[3]<<3;
00AC 3900      03100         SWAPF   (_RelayState + 3), W, B
00AE 40E8      03101         RRNCF   WREG, W
00B0 0BF8      03102         ANDLW   0xf8
00B2 6E00      03103         MOVWF   r0x02
00B4 5000      03104         MOVF    r0x02, W
00B6 1200      03105         IORWF   r0x01, F
               03106 ; removed redundant BANKSEL
               03107 ;       .line   696; main.c     eeprom_byte = eeprom_byte | RelayState[4]<<4;
00B8 3900      03108         SWAPF   (_RelayState + 4), W, B
00BA 0BF0      03109         ANDLW   0xf0
00BC 6E00      03110         MOVWF   r0x02
00BE 5000      03111         MOVF    r0x02, W
00C0 1200      03112         IORWF   r0x01, F
               03113 ; removed redundant BANKSEL
               03114 ;       .line   697; main.c     eeprom_byte = eeprom_byte | RelayState[5]<<5;
00C2 3900      03115         SWAPF   (_RelayState + 5), W, B
00C4 44E8      03116         RLNCF   WREG, W
00C6 0BE0      03117         ANDLW   0xe0
00C8 6E00      03118         MOVWF   r0x02
00CA 5000      03119         MOVF    r0x02, W
00CC 1200      03120         IORWF   r0x01, F
               03121 ; removed redundant BANKSEL
               03122 ;       .line   698; main.c     eeprom_byte = eeprom_byte | RelayState[6]<<6;
00CE 4100      03123         RRNCF   (_RelayState + 6), W, B
00D0 40E8      03124         RRNCF   WREG, W
00D2 0BC0      03125         ANDLW   0xc0
00D4 6E00      03126         MOVWF   r0x02
00D6 5000      03127         MOVF    r0x02, W
00D8 1200      03128         IORWF   r0x01, F
               03129 ; removed redundant BANKSEL
               03130 ;       .line   699; main.c     eeprom_byte = eeprom_byte | RelayState[7]<<7;
00DA 4100      03131         RRNCF   (_RelayState + 7), W, B
00DC 0B80      03132         ANDLW   0x80
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE 6E00      03133         MOVWF   r0x02
00E0 5000      03134         MOVF    r0x02, W
00E2 1200      03135         IORWF   r0x01, F
               03136 ;       .line   700; main.c     MIOS_EEPROM_Write(preset_nb+0x10,eeprom_byte);  
00E4 0E10      03137         MOVLW   0x10
00E6 2400      03138         ADDWF   r0x00, W
00E8 6E00      03139         MOVWF   r0x02
00EA 5000      03140         MOVF    r0x01, W
00EC 6EED      03141         MOVWF   POSTDEC1
00EE 5000      03142         MOVF    r0x02, W
00F0 EC00 F000 03143         CALL    _MIOS_EEPROM_Write
00F4 2AE9      03144         INCF    FSR1L, F
               03145 ;       .line   703; main.c     CurrentPreset = preset_nb;
00F6 C000 F000 03146         MOVFF   r0x00, _CurrentPreset
               03147 ;       .line   706; main.c     MIOS_LCD_Clear();
00FA EC00 F000 03148         CALL    _MIOS_LCD_Clear
               03149 ;       .line   707; main.c     MIOS_LCD_CursorSet(0x00 + 0);
00FE 0E00      03150         MOVLW   0x00
0100 EC00 F000 03151         CALL    _MIOS_LCD_CursorSet
               03152 ;       .line   708; main.c     MIOS_LCD_PrintCString("**  SAVED to  **");
0104 0E00      03153         MOVLW   UPPER(__str_22)
0106 6EED      03154         MOVWF   POSTDEC1
0108 0E00      03155         MOVLW   HIGH(__str_22)
010A 6EED      03156         MOVWF   POSTDEC1
010C 0E00      03157         MOVLW   LOW(__str_22)
010E EC00 F000 03158         CALL    _MIOS_LCD_PrintCString
0112 0E02      03159         MOVLW   0x02
0114 26E9      03160         ADDWF   FSR1L, F
               03161 ;       .line   709; main.c     MIOS_LCD_CursorSet(0x40 + 0);
0116 0E40      03162         MOVLW   0x40
0118 EC00 F000 03163         CALL    _MIOS_LCD_CursorSet
               03164 ;       .line   710; main.c     MIOS_LCD_PrintCString("** Preset     **");
011C 0E00      03165         MOVLW   UPPER(__str_7)
011E 6EED      03166         MOVWF   POSTDEC1
0120 0E00      03167         MOVLW   HIGH(__str_7)
0122 6EED      03168         MOVWF   POSTDEC1
0124 0E00      03169         MOVLW   LOW(__str_7)
0126 EC00 F000 03170         CALL    _MIOS_LCD_PrintCString
012A 0E02      03171         MOVLW   0x02
012C 26E9      03172         ADDWF   FSR1L, F
               03173 ;       .line   711; main.c     MIOS_LCD_CursorSet(0x40 + 10);
012E 0E4A      03174         MOVLW   0x4a
0130 EC00 F000 03175         CALL    _MIOS_LCD_CursorSet
0134 0000      03176         BANKSEL _CurrentPreset
               03177 ;       .line   712; main.c     MIOS_LCD_PrintBCD3(CurrentPreset);
0136 5100      03178         MOVF    _CurrentPreset, W, B
0138 EC00 F000 03179         CALL    _MIOS_LCD_PrintBCD3
               03180 ;       .line   713; main.c     MIOS_LCD_MessageStart(100);
013C 0E64      03181         MOVLW   0x64
013E EC00 F000 03182         CALL    _MIOS_LCD_MessageStart
0142           03183 _00375_DS_:
0142 CFEC F000 03184         MOVFF   PREINC1, r0x02
0146 CFEC F000 03185         MOVFF   PREINC1, r0x01
014A CFEC F000 03186         MOVFF   PREINC1, r0x00
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
014E CFEC FFD9 03187         MOVFF   PREINC1, FSR2L
0152 0012      03188         RETURN  
               03189 
               03190 ; ; Starting pCode block
               03191 S_main__LoadPreset      code
0000           03192 _LoadPreset:
               03193 ;       .line   502; main.c     void LoadPreset ( unsigned char preset_nb )
0000 CFD9 FFED 03194         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 03195         MOVFF   FSR1L, FSR2L
0008 C000 FFED 03196         MOVFF   r0x00, POSTDEC1
000C C000 FFED 03197         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 03198         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 03199         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 03200         MOVFF   r0x04, POSTDEC1
001C C000 FFED 03201         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 03202         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 03203         MOVFF   r0x07, POSTDEC1
0028 C000 FFED 03204         MOVFF   r0x08, POSTDEC1
002C C000 FFED 03205         MOVFF   r0x09, POSTDEC1
0030 0E02      03206         MOVLW   0x02
0032 CFDB F000 03207         MOVFF   PLUSW2, r0x00
               03208 ;       .line   505; main.c     unsigned int ActiveRadioFound = 0;
0036 6A00      03209         CLRF    r0x01
0038 6A00      03210         CLRF    r0x02
003A 0000      03211         BANKSEL _CurrentPreset
               03212 ;       .line   510; main.c     if ( CurrentPreset == preset_nb )
003C 5100      03213         MOVF    _CurrentPreset, W, B
003E 1800      03214         XORWF   r0x00, W
0040 E100      03215         BNZ     _00285_DS_
0042           03216 _00342_DS_:
0042 0000      03217         BANKSEL _ReloadActivePreset
               03218 ;       .line   512; main.c     if(ReloadActivePreset)
0044 5100      03219         MOVF    _ReloadActivePreset, W, B
0046 E000      03220         BZ      _00282_DS_
               03221 ;       .line   515; main.c     DEBUG_MSG_SendHeader();
0048 EC00 F000 03222         CALL    _DEBUG_MSG_SendHeader
               03223 ;       .line   516; main.c     DEBUG_MSG_SendCString("ReLoading active preset");
004C 0E00      03224         MOVLW   UPPER(__str_11)
004E 6EED      03225         MOVWF   POSTDEC1
0050 0E00      03226         MOVLW   HIGH(__str_11)
0052 6EED      03227         MOVWF   POSTDEC1
0054 0E00      03228         MOVLW   LOW(__str_11)
0056 EC00 F000 03229         CALL    _DEBUG_MSG_SendCString
005A 0E02      03230         MOVLW   0x02
005C 26E9      03231         ADDWF   FSR1L, F
               03232 ;       .line   517; main.c     DEBUG_MSG_SendFooter();
005E EC00 F000 03233         CALL    _DEBUG_MSG_SendFooter
0062 D000      03234         BRA     _00286_DS_
0064           03235 _00282_DS_:
               03236 ;       .line   524; main.c     DEBUG_MSG_SendHeader();
0064 EC00 F000 03237         CALL    _DEBUG_MSG_SendHeader
               03238 ;       .line   525; main.c     DEBUG_MSG_SendCString("NOT ReLoading active preset");
0068 0E00      03239         MOVLW   UPPER(__str_12)
006A 6EED      03240         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006C 0E00      03241         MOVLW   HIGH(__str_12)
006E 6EED      03242         MOVWF   POSTDEC1
0070 0E00      03243         MOVLW   LOW(__str_12)
0072 EC00 F000 03244         CALL    _DEBUG_MSG_SendCString
0076 0E02      03245         MOVLW   0x02
0078 26E9      03246         ADDWF   FSR1L, F
               03247 ;       .line   526; main.c     DEBUG_MSG_SendFooter();
007A EC00 F000 03248         CALL    _DEBUG_MSG_SendFooter
               03249 ;       .line   529; main.c     return;
007E D000      03250         BRA     _00318_DS_
0080           03251 _00285_DS_:
               03252 ;       .line   535; main.c     DEBUG_MSG_SendHeader();
0080 EC00 F000 03253         CALL    _DEBUG_MSG_SendHeader
               03254 ;       .line   536; main.c     DEBUG_MSG_SendCString("Loading preset ");
0084 0E00      03255         MOVLW   UPPER(__str_13)
0086 6EED      03256         MOVWF   POSTDEC1
0088 0E00      03257         MOVLW   HIGH(__str_13)
008A 6EED      03258         MOVWF   POSTDEC1
008C 0E00      03259         MOVLW   LOW(__str_13)
008E EC00 F000 03260         CALL    _DEBUG_MSG_SendCString
0092 0E02      03261         MOVLW   0x02
0094 26E9      03262         ADDWF   FSR1L, F
               03263 ;       .line   537; main.c     DEBUG_MSG_SendBCD3(preset_nb);
0096 5000      03264         MOVF    r0x00, W
0098 EC00 F000 03265         CALL    _DEBUG_MSG_SendBCD3
               03266 ;       .line   538; main.c     DEBUG_MSG_SendFooter();
009C EC00 F000 03267         CALL    _DEBUG_MSG_SendFooter
00A0           03268 _00286_DS_:
               03269 ;       .line   546; main.c     if ( preset_nb > 0x69 )
00A0 0E6A      03270         MOVLW   0x6a
00A2 5C00      03271         SUBWF   r0x00, W
00A4 E300      03272         BNC     _00288_DS_
               03273 ;       .line   549; main.c     DEBUG_MSG_SendHeader();
00A6 EC00 F000 03274         CALL    _DEBUG_MSG_SendHeader
               03275 ;       .line   550; main.c     DEBUG_MSG_SendCString("Discarded loading preset ");
00AA 0E00      03276         MOVLW   UPPER(__str_14)
00AC 6EED      03277         MOVWF   POSTDEC1
00AE 0E00      03278         MOVLW   HIGH(__str_14)
00B0 6EED      03279         MOVWF   POSTDEC1
00B2 0E00      03280         MOVLW   LOW(__str_14)
00B4 EC00 F000 03281         CALL    _DEBUG_MSG_SendCString
00B8 0E02      03282         MOVLW   0x02
00BA 26E9      03283         ADDWF   FSR1L, F
               03284 ;       .line   551; main.c     DEBUG_MSG_SendBCD3(preset_nb);
00BC 5000      03285         MOVF    r0x00, W
00BE EC00 F000 03286         CALL    _DEBUG_MSG_SendBCD3
               03287 ;       .line   552; main.c     DEBUG_MSG_SendFooter();
00C2 EC00 F000 03288         CALL    _DEBUG_MSG_SendFooter
               03289 ;       .line   554; main.c     return; 
00C6 D000      03290         BRA     _00318_DS_
00C8           03291 _00288_DS_:
               03292 ;       .line   557; main.c     eeprom_byte = MIOS_EEPROM_Read(preset_nb+0x10);
00C8 0E10      03293         MOVLW   0x10
00CA 2400      03294         ADDWF   r0x00, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CC 6E00      03295         MOVWF   r0x03
00CE 5000      03296         MOVF    r0x03, W
00D0 EC00 F000 03297         CALL    _MIOS_EEPROM_Read
00D4 6E00      03298         MOVWF   r0x03
               03299 ;       .line   558; main.c     TargetRelayState[0] = eeprom_byte & 0x01;
00D6 0E01      03300         MOVLW   0x01
00D8 1400      03301         ANDWF   r0x03, W
00DA 6E00      03302         MOVWF   r0x04
00DC 5000      03303         MOVF    r0x04, W
00DE 0000      03304         BANKSEL _LoadPreset_TargetRelayState_1_1
00E0 6F00      03305         MOVWF   _LoadPreset_TargetRelayState_1_1, B
               03306 ;       .line   559; main.c     TargetRelayState[1] = (eeprom_byte & 0x02)>>1;
00E2 0E02      03307         MOVLW   0x02
00E4 1400      03308         ANDWF   r0x03, W
00E6 6E00      03309         MOVWF   r0x04
00E8 4000      03310         RRNCF   r0x04, W
00EA 0B7F      03311         ANDLW   0x7f
00EC 6E00      03312         MOVWF   r0x04
00EE 5000      03313         MOVF    r0x04, W
               03314 ; removed redundant BANKSEL
00F0 6F00      03315         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 1), B
               03316 ;       .line   560; main.c     TargetRelayState[2] = (eeprom_byte & 0x04)>>2;
00F2 0E04      03317         MOVLW   0x04
00F4 1400      03318         ANDWF   r0x03, W
00F6 6E00      03319         MOVWF   r0x04
00F8 4000      03320         RRNCF   r0x04, W
00FA 40E8      03321         RRNCF   WREG, W
00FC 0B3F      03322         ANDLW   0x3f
00FE 6E00      03323         MOVWF   r0x04
0100 5000      03324         MOVF    r0x04, W
               03325 ; removed redundant BANKSEL
0102 6F00      03326         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 2), B
               03327 ;       .line   561; main.c     TargetRelayState[3] = (eeprom_byte & 0x08)>>3;
0104 0E08      03328         MOVLW   0x08
0106 1400      03329         ANDWF   r0x03, W
0108 6E00      03330         MOVWF   r0x04
010A 3800      03331         SWAPF   r0x04, W
010C 44E8      03332         RLNCF   WREG, W
010E 0B1F      03333         ANDLW   0x1f
0110 6E00      03334         MOVWF   r0x04
0112 5000      03335         MOVF    r0x04, W
               03336 ; removed redundant BANKSEL
0114 6F00      03337         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 3), B
               03338 ;       .line   562; main.c     TargetRelayState[4] = (eeprom_byte & 0x10)>>4;
0116 0E10      03339         MOVLW   0x10
0118 1400      03340         ANDWF   r0x03, W
011A 6E00      03341         MOVWF   r0x04
011C 3800      03342         SWAPF   r0x04, W
011E 0B0F      03343         ANDLW   0x0f
0120 6E00      03344         MOVWF   r0x04
0122 5000      03345         MOVF    r0x04, W
               03346 ; removed redundant BANKSEL
0124 6F00      03347         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 4), B
               03348 ;       .line   563; main.c     TargetRelayState[5] = (eeprom_byte & 0x20)>>5;
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0126 0E20      03349         MOVLW   0x20
0128 1400      03350         ANDWF   r0x03, W
012A 6E00      03351         MOVWF   r0x04
012C 3800      03352         SWAPF   r0x04, W
012E 40E8      03353         RRNCF   WREG, W
0130 0B07      03354         ANDLW   0x07
0132 6E00      03355         MOVWF   r0x04
0134 5000      03356         MOVF    r0x04, W
               03357 ; removed redundant BANKSEL
0136 6F00      03358         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 5), B
               03359 ;       .line   564; main.c     TargetRelayState[6] = (eeprom_byte & 0x40)>>6;
0138 0E40      03360         MOVLW   0x40
013A 1400      03361         ANDWF   r0x03, W
013C 6E00      03362         MOVWF   r0x04
013E 4400      03363         RLNCF   r0x04, W
0140 44E8      03364         RLNCF   WREG, W
0142 0B03      03365         ANDLW   0x03
0144 6E00      03366         MOVWF   r0x04
0146 5000      03367         MOVF    r0x04, W
               03368 ; removed redundant BANKSEL
0148 6F00      03369         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 6), B
               03370 ;       .line   565; main.c     TargetRelayState[7] = (eeprom_byte & 0x80)>>7;
014A 0E80      03371         MOVLW   0x80
014C 1400      03372         ANDWF   r0x03, W
014E 6E00      03373         MOVWF   r0x04
0150 4400      03374         RLNCF   r0x04, W
0152 0B01      03375         ANDLW   0x01
0154 6E00      03376         MOVWF   r0x04
0156 5000      03377         MOVF    r0x04, W
               03378 ; removed redundant BANKSEL
0158 6F00      03379         MOVWF   (_LoadPreset_TargetRelayState_1_1 + 7), B
               03380 ;       .line   568; main.c     DEBUG_MSG_SendHeader();
015A EC00 F000 03381         CALL    _DEBUG_MSG_SendHeader
               03382 ;       .line   569; main.c     DEBUG_MSG_SendCString("Relays state byte : ");
015E 0E00      03383         MOVLW   UPPER(__str_15)
0160 6EED      03384         MOVWF   POSTDEC1
0162 0E00      03385         MOVLW   HIGH(__str_15)
0164 6EED      03386         MOVWF   POSTDEC1
0166 0E00      03387         MOVLW   LOW(__str_15)
0168 EC00 F000 03388         CALL    _DEBUG_MSG_SendCString
016C 0E02      03389         MOVLW   0x02
016E 26E9      03390         ADDWF   FSR1L, F
               03391 ;       .line   570; main.c     DEBUG_MSG_SendBCD3(eeprom_byte);
0170 5000      03392         MOVF    r0x03, W
0172 EC00 F000 03393         CALL    _DEBUG_MSG_SendBCD3
               03394 ;       .line   571; main.c     DEBUG_MSG_SendFooter();
0176 EC00 F000 03395         CALL    _DEBUG_MSG_SendFooter
               03396 ;       .line   576; main.c     DEBUG_MSG_SendHeader();
017A EC00 F000 03397         CALL    _DEBUG_MSG_SendHeader
               03398 ;       .line   577; main.c     DEBUG_MSG_SendCString("Send midi ?");
017E 0E00      03399         MOVLW   UPPER(__str_16)
0180 6EED      03400         MOVWF   POSTDEC1
0182 0E00      03401         MOVLW   HIGH(__str_16)
0184 6EED      03402         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0186 0E00      03403         MOVLW   LOW(__str_16)
0188 EC00 F000 03404         CALL    _DEBUG_MSG_SendCString
018C 0E02      03405         MOVLW   0x02
018E 26E9      03406         ADDWF   FSR1L, F
0190 0000      03407         BANKSEL _SendMidiOnButtonChange
               03408 ;       .line   578; main.c     DEBUG_MSG_SendBCD1(SendMidiOnButtonChange);
0192 5100      03409         MOVF    _SendMidiOnButtonChange, W, B
0194 EC00 F000 03410         CALL    _DEBUG_MSG_SendBCD1
               03411 ;       .line   579; main.c     DEBUG_MSG_SendFooter();
0198 EC00 F000 03412         CALL    _DEBUG_MSG_SendFooter
019C 0000      03413         BANKSEL _SendMidiOnButtonChange
               03414 ;       .line   581; main.c     if (SendMidiOnButtonChange)
019E 5100      03415         MOVF    _SendMidiOnButtonChange, W, B
01A0 E000      03416         BZ      _00329_DS_
               03417 ;       .line   583; main.c     MIOS_MIDI_BeginStream();
01A2 EC00 F000 03418         CALL    _MIOS_MIDI_BeginStream
               03419 ;       .line   585; main.c     MIOS_MIDI_TxBufferPut((0xC0)+MidiChannel-1);
01A6 0EBF      03420         MOVLW   0xbf
01A8 0000      03421         BANKSEL _MidiChannel
01AA 2500      03422         ADDWF   _MidiChannel, W, B
01AC 6E00      03423         MOVWF   r0x03
01AE 5000      03424         MOVF    r0x03, W
01B0 EC00 F000 03425         CALL    _MIOS_MIDI_TxBufferPut
               03426 ;       .line   586; main.c     MIOS_MIDI_TxBufferPut(preset_nb-1); //PC
01B4 0400      03427         DECF    r0x00, W
01B6 6E00      03428         MOVWF   r0x03
01B8 5000      03429         MOVF    r0x03, W
01BA EC00 F000 03430         CALL    _MIOS_MIDI_TxBufferPut
               03431 ;       .line   587; main.c     MIOS_MIDI_EndStream();
01BE EC00 F000 03432         CALL    _MIOS_MIDI_EndStream
               03433 ;       .line   589; main.c     DEBUG_MSG_SendHeader();
01C2 EC00 F000 03434         CALL    _DEBUG_MSG_SendHeader
               03435 ;       .line   590; main.c     DEBUG_MSG_SendCString(" midi message :");
01C6 0E00      03436         MOVLW   UPPER(__str_17)
01C8 6EED      03437         MOVWF   POSTDEC1
01CA 0E00      03438         MOVLW   HIGH(__str_17)
01CC 6EED      03439         MOVWF   POSTDEC1
01CE 0E00      03440         MOVLW   LOW(__str_17)
01D0 EC00 F000 03441         CALL    _DEBUG_MSG_SendCString
01D4 0E02      03442         MOVLW   0x02
01D6 26E9      03443         ADDWF   FSR1L, F
               03444 ;       .line   591; main.c     DEBUG_MSG_SendBCD3((0xC0)+MidiChannel-1);
01D8 0EBF      03445         MOVLW   0xbf
01DA 0000      03446         BANKSEL _MidiChannel
01DC 2500      03447         ADDWF   _MidiChannel, W, B
01DE 6E00      03448         MOVWF   r0x04
01E0 5000      03449         MOVF    r0x04, W
01E2 EC00 F000 03450         CALL    _DEBUG_MSG_SendBCD3
               03451 ;       .line   592; main.c     DEBUG_MSG_SendBCD3(preset_nb-1);
01E6 5000      03452         MOVF    r0x03, W
01E8 EC00 F000 03453         CALL    _DEBUG_MSG_SendBCD3
               03454 ;       .line   593; main.c     DEBUG_MSG_SendFooter();
01EC EC00 F000 03455         CALL    _DEBUG_MSG_SendFooter
01F0           03456 _00329_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03457 ;       .line   598; main.c     for ( i=0; i<MAX_RELAYS_NB; i++)
01F0 6A00      03458         CLRF    r0x03
01F2 6A00      03459         CLRF    r0x04
01F4           03460 _00306_DS_:
01F4 0E00      03461         MOVLW   0x00
01F6 5C00      03462         SUBWF   r0x04, W
01F8 E100      03463         BNZ     _00352_DS_
01FA 0E08      03464         MOVLW   0x08
01FC 5C00      03465         SUBWF   r0x03, W
01FE           03466 _00352_DS_:
01FE B0D8      03467         BTFSC   STATUS, 0
0200 D000      03468         BRA     _00309_DS_
               03469 ;       .line   601; main.c     if ( RelayMode[i] == Free )
0202 0E00      03470         MOVLW   LOW(_RelayMode)
0204 2400      03471         ADDWF   r0x03, W
0206 6E00      03472         MOVWF   r0x05
0208 0E00      03473         MOVLW   HIGH(_RelayMode)
020A 2000      03474         ADDWFC  r0x04, W
020C 6E00      03475         MOVWF   r0x06
020E C000 FFE1 03476         MOVFF   r0x05, FSR0L
0212 C000 FFE2 03477         MOVFF   r0x06, FSR0H
0216 CFE7 F000 03478         MOVFF   INDF0, r0x05
021A 5000      03479         MOVF    r0x05, W
021C A4D8      03480         BTFSS   STATUS, 2
021E D000      03481         BRA     _00292_DS_
               03482 ;       .line   603; main.c     MIOS_DOUT_PinSet(RelayPin[i],TargetRelayState[i]);              
0220 0E00      03483         MOVLW   LOW(_RelayPin)
0222 2400      03484         ADDWF   r0x03, W
0224 6E00      03485         MOVWF   r0x05
0226 0E00      03486         MOVLW   HIGH(_RelayPin)
0228 2000      03487         ADDWFC  r0x04, W
022A 6E00      03488         MOVWF   r0x06
022C 6A00      03489         CLRF    r0x07
022E 0E00      03490         MOVLW   UPPER(_RelayPin)
0230 2200      03491         ADDWFC  r0x07, F
0232 C000 FFF6 03492         MOVFF   r0x05, TBLPTRL
0236 C000 FFF7 03493         MOVFF   r0x06, TBLPTRH
023A C000 FFF8 03494         MOVFF   r0x07, TBLPTRU
023E 0009      03495         TBLRD*+ 
0240 CFF5 F000 03496         MOVFF   TABLAT, r0x05
0244 0E00      03497         MOVLW   LOW(_LoadPreset_TargetRelayState_1_1)
0246 2400      03498         ADDWF   r0x03, W
0248 6E00      03499         MOVWF   r0x06
024A 0E00      03500         MOVLW   HIGH(_LoadPreset_TargetRelayState_1_1)
024C 2000      03501         ADDWFC  r0x04, W
024E 6E00      03502         MOVWF   r0x07
0250 C000 FFE1 03503         MOVFF   r0x06, FSR0L
0254 C000 FFE2 03504         MOVFF   r0x07, FSR0H
0258 CFE7 F000 03505         MOVFF   INDF0, r0x08
025C 5000      03506         MOVF    r0x08, W
025E 6EED      03507         MOVWF   POSTDEC1
0260 5000      03508         MOVF    r0x05, W
0262 EC00 F000 03509         CALL    _MIOS_DOUT_PinSet
0266 2AE9      03510         INCF    FSR1L, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03511 ;       .line   604; main.c     MIOS_DOUT_PinSet(RelayLedPin[i],TargetRelayState[i]);
0268 0E00      03512         MOVLW   LOW(_RelayLedPin)
026A 2400      03513         ADDWF   r0x03, W
026C 6E00      03514         MOVWF   r0x05
026E 0E00      03515         MOVLW   HIGH(_RelayLedPin)
0270 2000      03516         ADDWFC  r0x04, W
0272 6E00      03517         MOVWF   r0x08
0274 6A00      03518         CLRF    r0x09
0276 0E00      03519         MOVLW   UPPER(_RelayLedPin)
0278 2200      03520         ADDWFC  r0x09, F
027A C000 FFF6 03521         MOVFF   r0x05, TBLPTRL
027E C000 FFF7 03522         MOVFF   r0x08, TBLPTRH
0282 C000 FFF8 03523         MOVFF   r0x09, TBLPTRU
0286 0009      03524         TBLRD*+ 
0288 CFF5 F000 03525         MOVFF   TABLAT, r0x05
028C C000 FFE1 03526         MOVFF   r0x06, FSR0L
0290 C000 FFE2 03527         MOVFF   r0x07, FSR0H
0294 CFE7 F000 03528         MOVFF   INDF0, r0x08
0298 5000      03529         MOVF    r0x08, W
029A 6EED      03530         MOVWF   POSTDEC1
029C 5000      03531         MOVF    r0x05, W
029E EC00 F000 03532         CALL    _MIOS_DOUT_PinSet
02A2 2AE9      03533         INCF    FSR1L, F
               03534 ;       .line   606; main.c     RelayState[i] = TargetRelayState[i];    
02A4 0E00      03535         MOVLW   LOW(_RelayState)
02A6 2400      03536         ADDWF   r0x03, W
02A8 6E00      03537         MOVWF   r0x05
02AA 0E00      03538         MOVLW   HIGH(_RelayState)
02AC 2000      03539         ADDWFC  r0x04, W
02AE 6E00      03540         MOVWF   r0x08
02B0 C000 FFE1 03541         MOVFF   r0x06, FSR0L
02B4 C000 FFE2 03542         MOVFF   r0x07, FSR0H
02B8 CFE7 F000 03543         MOVFF   INDF0, r0x06
02BC C000 FFE1 03544         MOVFF   r0x05, FSR0L
02C0 C000 FFE2 03545         MOVFF   r0x08, FSR0H
02C4 C000 FFE7 03546         MOVFF   r0x06, INDF0
02C8           03547 _00292_DS_:
               03548 ;       .line   609; main.c     if (( RelayMode[i] == Radio ) && (TargetRelayState[i] == Active))
02C8 0E00      03549         MOVLW   LOW(_RelayMode)
02CA 2400      03550         ADDWF   r0x03, W
02CC 6E00      03551         MOVWF   r0x05
02CE 0E00      03552         MOVLW   HIGH(_RelayMode)
02D0 2000      03553         ADDWFC  r0x04, W
02D2 6E00      03554         MOVWF   r0x06
02D4 C000 FFE1 03555         MOVFF   r0x05, FSR0L
02D8 C000 FFE2 03556         MOVFF   r0x06, FSR0H
02DC CFE7 F000 03557         MOVFF   INDF0, r0x05
02E0 5000      03558         MOVF    r0x05, W
02E2 0A01      03559         XORLW   0x01
02E4 E000      03560         BZ      _00354_DS_
02E6 D000      03561         BRA     _00308_DS_
02E8           03562 _00354_DS_:
02E8 0E00      03563         MOVLW   LOW(_LoadPreset_TargetRelayState_1_1)
02EA 2400      03564         ADDWF   r0x03, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02EC 6E00      03565         MOVWF   r0x05
02EE 0E00      03566         MOVLW   HIGH(_LoadPreset_TargetRelayState_1_1)
02F0 2000      03567         ADDWFC  r0x04, W
02F2 6E00      03568         MOVWF   r0x06
02F4 C000 FFE1 03569         MOVFF   r0x05, FSR0L
02F8 C000 FFE2 03570         MOVFF   r0x06, FSR0H
02FC CFE7 F000 03571         MOVFF   INDF0, r0x05
0300 5000      03572         MOVF    r0x05, W
0302 0A01      03573         XORLW   0x01
0304 E000      03574         BZ      _00356_DS_
0306 D000      03575         BRA     _00308_DS_
0308           03576 _00356_DS_:
               03577 ;       .line   611; main.c     ActiveRadioFound = 1;
0308 0E01      03578         MOVLW   0x01
030A 6E00      03579         MOVWF   r0x01
030C 6A00      03580         CLRF    r0x02
               03581 ;       .line   612; main.c     if (RelayState[i] == Active)
030E 0E00      03582         MOVLW   LOW(_RelayState)
0310 2400      03583         ADDWF   r0x03, W
0312 6E00      03584         MOVWF   r0x05
0314 0E00      03585         MOVLW   HIGH(_RelayState)
0316 2000      03586         ADDWFC  r0x04, W
0318 6E00      03587         MOVWF   r0x06
031A C000 FFE1 03588         MOVFF   r0x05, FSR0L
031E C000 FFE2 03589         MOVFF   r0x06, FSR0H
0322 CFE7 F000 03590         MOVFF   INDF0, r0x05
0326 5000      03591         MOVF    r0x05, W
0328 0A01      03592         XORLW   0x01
032A E100      03593         BNZ     _00294_DS_
               03594 ;       .line   615; main.c     DEBUG_MSG_SendHeader();
032C EC00 F000 03595         CALL    _DEBUG_MSG_SendHeader
               03596 ;       .line   616; main.c     DEBUG_MSG_SendCString("Don't push an already active radio relay");
0330 0E00      03597         MOVLW   UPPER(__str_18)
0332 6EED      03598         MOVWF   POSTDEC1
0334 0E00      03599         MOVLW   HIGH(__str_18)
0336 6EED      03600         MOVWF   POSTDEC1
0338 0E00      03601         MOVLW   LOW(__str_18)
033A EC00 F000 03602         CALL    _DEBUG_MSG_SendCString
033E 0E02      03603         MOVLW   0x02
0340 26E9      03604         ADDWF   FSR1L, F
               03605 ;       .line   617; main.c     DEBUG_MSG_SendBCD3(i);
0342 5000      03606         MOVF    r0x03, W
0344 6E00      03607         MOVWF   r0x05
0346 5000      03608         MOVF    r0x05, W
0348 EC00 F000 03609         CALL    _DEBUG_MSG_SendBCD3
               03610 ;       .line   618; main.c     DEBUG_MSG_SendFooter();
034C EC00 F000 03611         CALL    _DEBUG_MSG_SendFooter
               03612 ;       .line   621; main.c     MIOS_DOUT_PinSet(RelayLedPin[i],Active);
0350 0E00      03613         MOVLW   LOW(_RelayLedPin)
0352 2400      03614         ADDWF   r0x03, W
0354 6E00      03615         MOVWF   r0x05
0356 0E00      03616         MOVLW   HIGH(_RelayLedPin)
0358 2000      03617         ADDWFC  r0x04, W
035A 6E00      03618         MOVWF   r0x06
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
035C 6A00      03619         CLRF    r0x07
035E 0E00      03620         MOVLW   UPPER(_RelayLedPin)
0360 2200      03621         ADDWFC  r0x07, F
0362 C000 FFF6 03622         MOVFF   r0x05, TBLPTRL
0366 C000 FFF7 03623         MOVFF   r0x06, TBLPTRH
036A C000 FFF8 03624         MOVFF   r0x07, TBLPTRU
036E 0009      03625         TBLRD*+ 
0370 CFF5 F000 03626         MOVFF   TABLAT, r0x05
0374 0E01      03627         MOVLW   0x01
0376 6EED      03628         MOVWF   POSTDEC1
0378 5000      03629         MOVF    r0x05, W
037A EC00 F000 03630         CALL    _MIOS_DOUT_PinSet
037E 2AE9      03631         INCF    FSR1L, F
0380 D000      03632         BRA     _00308_DS_
0382           03633 _00294_DS_:
               03634 ;       .line   625; main.c     DoRelay(i);
0382 5000      03635         MOVF    r0x03, W
0384 6E00      03636         MOVWF   r0x05
0386 5000      03637         MOVF    r0x05, W
0388 6EED      03638         MOVWF   POSTDEC1
038A EC00 F000 03639         CALL    _DoRelay
038E 2AE9      03640         INCF    FSR1L, F
0390           03641 _00308_DS_:
               03642 ;       .line   598; main.c     for ( i=0; i<MAX_RELAYS_NB; i++)
0390 2A00      03643         INCF    r0x03, F
0392 B0D8      03644         BTFSC   STATUS, 0
0394 2A00      03645         INCF    r0x04, F
0396 D000      03646         BRA     _00306_DS_
0398           03647 _00309_DS_:
               03648 ;       .line   630; main.c     if ( ActiveRadioFound == 0 ) // No radio relay should be active
0398 5000      03649         MOVF    r0x01, W
039A 1000      03650         IORWF   r0x02, W
039C E100      03651         BNZ     _00303_DS_
               03652 ;       .line   632; main.c     for ( i=0; i<MAX_RELAYS_NB; i++) // verify if one is active, then desactivate
039E 6A00      03653         CLRF    r0x01
03A0 6A00      03654         CLRF    r0x02
03A2           03655 _00310_DS_:
03A2 0E00      03656         MOVLW   0x00
03A4 5C00      03657         SUBWF   r0x02, W
03A6 E100      03658         BNZ     _00359_DS_
03A8 0E08      03659         MOVLW   0x08
03AA 5C00      03660         SUBWF   r0x01, W
03AC           03661 _00359_DS_:
03AC E200      03662         BC      _00303_DS_
               03663 ;       .line   634; main.c     if (( RelayMode[i] == Radio ) && (RelayState[i] == Active))
03AE 0E00      03664         MOVLW   LOW(_RelayMode)
03B0 2400      03665         ADDWF   r0x01, W
03B2 6E00      03666         MOVWF   r0x03
03B4 0E00      03667         MOVLW   HIGH(_RelayMode)
03B6 2000      03668         ADDWFC  r0x02, W
03B8 6E00      03669         MOVWF   r0x04
03BA C000 FFE1 03670         MOVFF   r0x03, FSR0L
03BE C000 FFE2 03671         MOVFF   r0x04, FSR0H
03C2 CFE7 F000 03672         MOVFF   INDF0, r0x03
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03C6 5000      03673         MOVF    r0x03, W
03C8 0A01      03674         XORLW   0x01
03CA E100      03675         BNZ     _00312_DS_
03CC 0E00      03676         MOVLW   LOW(_RelayState)
03CE 2400      03677         ADDWF   r0x01, W
03D0 6E00      03678         MOVWF   r0x03
03D2 0E00      03679         MOVLW   HIGH(_RelayState)
03D4 2000      03680         ADDWFC  r0x02, W
03D6 6E00      03681         MOVWF   r0x04
03D8 C000 FFE1 03682         MOVFF   r0x03, FSR0L
03DC C000 FFE2 03683         MOVFF   r0x04, FSR0H
03E0 CFE7 F000 03684         MOVFF   INDF0, r0x03
03E4 5000      03685         MOVF    r0x03, W
03E6 0A01      03686         XORLW   0x01
03E8 E100      03687         BNZ     _00312_DS_
               03688 ;       .line   636; main.c     DoRelay(i);
03EA 5000      03689         MOVF    r0x01, W
03EC 6E00      03690         MOVWF   r0x03
03EE 5000      03691         MOVF    r0x03, W
03F0 6EED      03692         MOVWF   POSTDEC1
03F2 EC00 F000 03693         CALL    _DoRelay
03F6 2AE9      03694         INCF    FSR1L, F
03F8           03695 _00312_DS_:
               03696 ;       .line   632; main.c     for ( i=0; i<MAX_RELAYS_NB; i++) // verify if one is active, then desactivate
03F8 2A00      03697         INCF    r0x01, F
03FA B0D8      03698         BTFSC   STATUS, 0
03FC 2A00      03699         INCF    r0x02, F
03FE D000      03700         BRA     _00310_DS_
0400           03701 _00303_DS_:
               03702 ;       .line   642; main.c     FootLedsOff();
0400 EC00 F000 03703         CALL    _FootLedsOff
               03704 ;       .line   643; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
0404 6A00      03705         CLRF    r0x01
0406 6A00      03706         CLRF    r0x02
0408           03707 _00314_DS_:
0408 0E00      03708         MOVLW   0x00
040A 5C00      03709         SUBWF   r0x02, W
040C E100      03710         BNZ     _00364_DS_
040E 0E04      03711         MOVLW   0x04
0410 5C00      03712         SUBWF   r0x01, W
0412           03713 _00364_DS_:
0412 E200      03714         BC      _00317_DS_
               03715 ;       .line   645; main.c     if ( FootPreset[i] == preset_nb )
0414 0E00      03716         MOVLW   LOW(_FootPreset)
0416 2400      03717         ADDWF   r0x01, W
0418 6E00      03718         MOVWF   r0x03
041A 0E00      03719         MOVLW   HIGH(_FootPreset)
041C 2000      03720         ADDWFC  r0x02, W
041E 6E00      03721         MOVWF   r0x04
0420 C000 FFE1 03722         MOVFF   r0x03, FSR0L
0424 C000 FFE2 03723         MOVFF   r0x04, FSR0H
0428 CFE7 F000 03724         MOVFF   INDF0, r0x03
042C 5000      03725         MOVF    r0x03, W
042E 1800      03726         XORWF   r0x00, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0430 E100      03727         BNZ     _00316_DS_
               03728 ;       .line   647; main.c     SetFootLed(i);
0432 5000      03729         MOVF    r0x01, W
0434 6E00      03730         MOVWF   r0x03
0436 5000      03731         MOVF    r0x03, W
0438 6EED      03732         MOVWF   POSTDEC1
043A EC00 F000 03733         CALL    _SetFootLed
043E 2AE9      03734         INCF    FSR1L, F
0440           03735 _00316_DS_:
               03736 ;       .line   643; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
0440 2A00      03737         INCF    r0x01, F
0442 B0D8      03738         BTFSC   STATUS, 0
0444 2A00      03739         INCF    r0x02, F
0446 D000      03740         BRA     _00314_DS_
0448           03741 _00317_DS_:
               03742 ;       .line   651; main.c     SetActivePreset(preset_nb);
0448 5000      03743         MOVF    r0x00, W
044A 6EED      03744         MOVWF   POSTDEC1
044C EC00 F000 03745         CALL    _SetActivePreset
0450 2AE9      03746         INCF    FSR1L, F
0452           03747 _00318_DS_:
0452 CFEC F000 03748         MOVFF   PREINC1, r0x09
0456 CFEC F000 03749         MOVFF   PREINC1, r0x08
045A CFEC F000 03750         MOVFF   PREINC1, r0x07
045E CFEC F000 03751         MOVFF   PREINC1, r0x06
0462 CFEC F000 03752         MOVFF   PREINC1, r0x05
0466 CFEC F000 03753         MOVFF   PREINC1, r0x04
046A CFEC F000 03754         MOVFF   PREINC1, r0x03
046E CFEC F000 03755         MOVFF   PREINC1, r0x02
0472 CFEC F000 03756         MOVFF   PREINC1, r0x01
0476 CFEC F000 03757         MOVFF   PREINC1, r0x00
047A CFEC FFD9 03758         MOVFF   PREINC1, FSR2L
047E 0012      03759         RETURN  
               03760 
               03761 ; ; Starting pCode block
               03762 S_main__SetFootLed      code
0000           03763 _SetFootLed:
               03764 ;       .line   485; main.c     void SetFootLed ( unsigned char led_nb )
0000 CFD9 FFED 03765         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 03766         MOVFF   FSR1L, FSR2L
0008 C000 FFED 03767         MOVFF   r0x00, POSTDEC1
000C C000 FFED 03768         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 03769         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 03770         MOVFF   r0x03, POSTDEC1
0018 0E02      03771         MOVLW   0x02
001A CFDB F000 03772         MOVFF   PLUSW2, r0x00
               03773 ;       .line   489; main.c     DEBUG_MSG_SendHeader();
001E EC00 F000 03774         CALL    _DEBUG_MSG_SendHeader
               03775 ;       .line   490; main.c     DEBUG_MSG_SendCString("Footswitch Led: ");
0022 0E00      03776         MOVLW   UPPER(__str_9)
0024 6EED      03777         MOVWF   POSTDEC1
0026 0E00      03778         MOVLW   HIGH(__str_9)
0028 6EED      03779         MOVWF   POSTDEC1
002A 0E00      03780         MOVLW   LOW(__str_9)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C EC00 F000 03781         CALL    _DEBUG_MSG_SendCString
0030 0E02      03782         MOVLW   0x02
0032 26E9      03783         ADDWF   FSR1L, F
               03784 ;       .line   491; main.c     DEBUG_MSG_SendBCD3(FootLedPin[led_nb]);
0034 0E00      03785         MOVLW   LOW(_FootLedPin)
0036 2400      03786         ADDWF   r0x00, W
0038 6E00      03787         MOVWF   r0x01
003A 6A00      03788         CLRF    r0x02
003C 0E00      03789         MOVLW   HIGH(_FootLedPin)
003E 2200      03790         ADDWFC  r0x02, F
0040 6A00      03791         CLRF    r0x03
0042 0E00      03792         MOVLW   UPPER(_FootLedPin)
0044 2200      03793         ADDWFC  r0x03, F
0046 C000 FFF6 03794         MOVFF   r0x01, TBLPTRL
004A C000 FFF7 03795         MOVFF   r0x02, TBLPTRH
004E C000 FFF8 03796         MOVFF   r0x03, TBLPTRU
0052 0009      03797         TBLRD*+ 
0054 CFF5 F000 03798         MOVFF   TABLAT, r0x01
0058 5000      03799         MOVF    r0x01, W
005A EC00 F000 03800         CALL    _DEBUG_MSG_SendBCD3
               03801 ;       .line   492; main.c     DEBUG_MSG_SendChar(' ');
005E 0E20      03802         MOVLW   0x20
0060 EC00 F000 03803         CALL    _DEBUG_MSG_SendChar
               03804 ;       .line   493; main.c     DEBUG_MSG_SendCString(" On");
0064 0E00      03805         MOVLW   UPPER(__str_10)
0066 6EED      03806         MOVWF   POSTDEC1
0068 0E00      03807         MOVLW   HIGH(__str_10)
006A 6EED      03808         MOVWF   POSTDEC1
006C 0E00      03809         MOVLW   LOW(__str_10)
006E EC00 F000 03810         CALL    _DEBUG_MSG_SendCString
0072 0E02      03811         MOVLW   0x02
0074 26E9      03812         ADDWF   FSR1L, F
               03813 ;       .line   494; main.c     DEBUG_MSG_SendFooter();
0076 EC00 F000 03814         CALL    _DEBUG_MSG_SendFooter
               03815 ;       .line   497; main.c     MIOS_DOUT_PinSet1(FootLedPin[led_nb]);
007A 6A00      03816         CLRF    r0x01
007C 6A00      03817         CLRF    r0x02
007E 0E00      03818         MOVLW   LOW(_FootLedPin)
0080 2600      03819         ADDWF   r0x00, F
0082 0E00      03820         MOVLW   HIGH(_FootLedPin)
0084 2200      03821         ADDWFC  r0x01, F
0086 0E00      03822         MOVLW   UPPER(_FootLedPin)
0088 2200      03823         ADDWFC  r0x02, F
008A C000 FFF6 03824         MOVFF   r0x00, TBLPTRL
008E C000 FFF7 03825         MOVFF   r0x01, TBLPTRH
0092 C000 FFF8 03826         MOVFF   r0x02, TBLPTRU
0096 0009      03827         TBLRD*+ 
0098 CFF5 F000 03828         MOVFF   TABLAT, r0x00
009C 5000      03829         MOVF    r0x00, W
009E EC00 F000 03830         CALL    _MIOS_DOUT_PinSet1
00A2 CFEC F000 03831         MOVFF   PREINC1, r0x03
00A6 CFEC F000 03832         MOVFF   PREINC1, r0x02
00AA CFEC F000 03833         MOVFF   PREINC1, r0x01
00AE CFEC F000 03834         MOVFF   PREINC1, r0x00
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B2 CFEC FFD9 03835         MOVFF   PREINC1, FSR2L
00B6 0012      03836         RETURN  
               03837 
               03838 ; ; Starting pCode block
               03839 S_main__FootLedsOff     code
0000           03840 _FootLedsOff:
               03841 ;       .line   467; main.c     void FootLedsOff ()
0000 C000 FFED 03842         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 03843         MOVFF   r0x01, POSTDEC1
0008 C000 FFED 03844         MOVFF   r0x02, POSTDEC1
000C C000 FFED 03845         MOVFF   r0x03, POSTDEC1
0010 C000 FFED 03846         MOVFF   r0x04, POSTDEC1
               03847 ;       .line   472; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
0014 6A00      03848         CLRF    r0x00
0016 6A00      03849         CLRF    r0x01
0018           03850 _00263_DS_:
0018 0E00      03851         MOVLW   0x00
001A 5C00      03852         SUBWF   r0x01, W
001C E100      03853         BNZ     _00272_DS_
001E 0E04      03854         MOVLW   0x04
0020 5C00      03855         SUBWF   r0x00, W
0022           03856 _00272_DS_:
0022 E200      03857         BC      _00266_DS_
               03858 ;       .line   474; main.c     MIOS_DOUT_PinSet(FootLedPin[i], 0);
0024 0E00      03859         MOVLW   LOW(_FootLedPin)
0026 2400      03860         ADDWF   r0x00, W
0028 6E00      03861         MOVWF   r0x02
002A 0E00      03862         MOVLW   HIGH(_FootLedPin)
002C 2000      03863         ADDWFC  r0x01, W
002E 6E00      03864         MOVWF   r0x03
0030 6A00      03865         CLRF    r0x04
0032 0E00      03866         MOVLW   UPPER(_FootLedPin)
0034 2200      03867         ADDWFC  r0x04, F
0036 C000 FFF6 03868         MOVFF   r0x02, TBLPTRL
003A C000 FFF7 03869         MOVFF   r0x03, TBLPTRH
003E C000 FFF8 03870         MOVFF   r0x04, TBLPTRU
0042 0009      03871         TBLRD*+ 
0044 CFF5 F000 03872         MOVFF   TABLAT, r0x02
0048 0E00      03873         MOVLW   0x00
004A 6EED      03874         MOVWF   POSTDEC1
004C 5000      03875         MOVF    r0x02, W
004E EC00 F000 03876         CALL    _MIOS_DOUT_PinSet
0052 2AE9      03877         INCF    FSR1L, F
               03878 ;       .line   472; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
0054 2A00      03879         INCF    r0x00, F
0056 B0D8      03880         BTFSC   STATUS, 0
0058 2A00      03881         INCF    r0x01, F
005A D000      03882         BRA     _00263_DS_
005C           03883 _00266_DS_:
               03884 ;       .line   477; main.c     DEBUG_MSG_SendHeader();
005C EC00 F000 03885         CALL    _DEBUG_MSG_SendHeader
               03886 ;       .line   478; main.c     DEBUG_MSG_SendCString("Footswitch Leds Off");
0060 0E00      03887         MOVLW   UPPER(__str_8)
0062 6EED      03888         MOVWF   POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0064 0E00      03889         MOVLW   HIGH(__str_8)
0066 6EED      03890         MOVWF   POSTDEC1
0068 0E00      03891         MOVLW   LOW(__str_8)
006A EC00 F000 03892         CALL    _DEBUG_MSG_SendCString
006E 0E02      03893         MOVLW   0x02
0070 26E9      03894         ADDWF   FSR1L, F
               03895 ;       .line   479; main.c     DEBUG_MSG_SendFooter();
0072 EC00 F000 03896         CALL    _DEBUG_MSG_SendFooter
0076 CFEC F000 03897         MOVFF   PREINC1, r0x04
007A CFEC F000 03898         MOVFF   PREINC1, r0x03
007E CFEC F000 03899         MOVFF   PREINC1, r0x02
0082 CFEC F000 03900         MOVFF   PREINC1, r0x01
0086 CFEC F000 03901         MOVFF   PREINC1, r0x00
008A 0012      03902         RETURN  
               03903 
               03904 ; ; Starting pCode block
               03905 S_main__SetActivePreset code
0000           03906 _SetActivePreset:
               03907 ;       .line   437; main.c     void SetActivePreset ( unsigned char preset_nb )
0000 CFD9 FFED 03908         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 03909         MOVFF   FSR1L, FSR2L
0008 C000 FFED 03910         MOVFF   r0x00, POSTDEC1
000C 0E02      03911         MOVLW   0x02
000E CFDB F000 03912         MOVFF   PLUSW2, r0x00
               03913 ;       .line   440; main.c     DEBUG_MSG_SendHeader();
0012 EC00 F000 03914         CALL    _DEBUG_MSG_SendHeader
               03915 ;       .line   441; main.c     DEBUG_MSG_SendCString("Set Active preset");
0016 0E00      03916         MOVLW   UPPER(__str_5)
0018 6EED      03917         MOVWF   POSTDEC1
001A 0E00      03918         MOVLW   HIGH(__str_5)
001C 6EED      03919         MOVWF   POSTDEC1
001E 0E00      03920         MOVLW   LOW(__str_5)
0020 EC00 F000 03921         CALL    _DEBUG_MSG_SendCString
0024 0E02      03922         MOVLW   0x02
0026 26E9      03923         ADDWF   FSR1L, F
               03924 ;       .line   442; main.c     DEBUG_MSG_SendBCD3(preset_nb);
0028 5000      03925         MOVF    r0x00, W
002A EC00 F000 03926         CALL    _DEBUG_MSG_SendBCD3
               03927 ;       .line   443; main.c     DEBUG_MSG_SendFooter();
002E EC00 F000 03928         CALL    _DEBUG_MSG_SendFooter
               03929 ;       .line   447; main.c     CurrentPreset = preset_nb;
0032 C000 F000 03930         MOVFF   r0x00, _CurrentPreset
0036 0000      03931         BANKSEL _CurrentPreset
               03932 ;       .line   450; main.c     MIOS_EEPROM_Write(0x01,CurrentPreset);
0038 5100      03933         MOVF    _CurrentPreset, W, B
003A 6EED      03934         MOVWF   POSTDEC1
003C 0E01      03935         MOVLW   0x01
003E EC00 F000 03936         CALL    _MIOS_EEPROM_Write
0042 2AE9      03937         INCF    FSR1L, F
               03938 ;       .line   454; main.c     MIOS_LCD_Clear();
0044 EC00 F000 03939         CALL    _MIOS_LCD_Clear
               03940 ;       .line   455; main.c     MIOS_LCD_CursorSet(0x00 + 0);
0048 0E00      03941         MOVLW   0x00
004A EC00 F000 03942         CALL    _MIOS_LCD_CursorSet
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03943 ;       .line   456; main.c     MIOS_LCD_PrintCString("** Change to  **");
004E 0E00      03944         MOVLW   UPPER(__str_6)
0050 6EED      03945         MOVWF   POSTDEC1
0052 0E00      03946         MOVLW   HIGH(__str_6)
0054 6EED      03947         MOVWF   POSTDEC1
0056 0E00      03948         MOVLW   LOW(__str_6)
0058 EC00 F000 03949         CALL    _MIOS_LCD_PrintCString
005C 0E02      03950         MOVLW   0x02
005E 26E9      03951         ADDWF   FSR1L, F
               03952 ;       .line   457; main.c     MIOS_LCD_CursorSet(0x40 + 0);
0060 0E40      03953         MOVLW   0x40
0062 EC00 F000 03954         CALL    _MIOS_LCD_CursorSet
               03955 ;       .line   458; main.c     MIOS_LCD_PrintCString("** Preset     **");
0066 0E00      03956         MOVLW   UPPER(__str_7)
0068 6EED      03957         MOVWF   POSTDEC1
006A 0E00      03958         MOVLW   HIGH(__str_7)
006C 6EED      03959         MOVWF   POSTDEC1
006E 0E00      03960         MOVLW   LOW(__str_7)
0070 EC00 F000 03961         CALL    _MIOS_LCD_PrintCString
0074 0E02      03962         MOVLW   0x02
0076 26E9      03963         ADDWF   FSR1L, F
               03964 ;       .line   459; main.c     MIOS_LCD_CursorSet(0x40 + 10);
0078 0E4A      03965         MOVLW   0x4a
007A EC00 F000 03966         CALL    _MIOS_LCD_CursorSet
007E 0000      03967         BANKSEL _CurrentPreset
               03968 ;       .line   460; main.c     MIOS_LCD_PrintBCD3(CurrentPreset);
0080 5100      03969         MOVF    _CurrentPreset, W, B
0082 EC00 F000 03970         CALL    _MIOS_LCD_PrintBCD3
               03971 ;       .line   461; main.c     MIOS_LCD_MessageStart(100);
0086 0E64      03972         MOVLW   0x64
0088 EC00 F000 03973         CALL    _MIOS_LCD_MessageStart
008C CFEC F000 03974         MOVFF   PREINC1, r0x00
0090 CFEC FFD9 03975         MOVFF   PREINC1, FSR2L
0094 0012      03976         RETURN  
               03977 
               03978 ; ; Starting pCode block
               03979 S_main__SaveGlobalOptions       code
0000           03980 _SaveGlobalOptions:
               03981 ;       .line   367; main.c     void SaveGlobalOptions ()
0000 C000 FFED 03982         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 03983         MOVFF   r0x01, POSTDEC1
               03984 ;       .line   377; main.c     eeprom_byte = MidiChannel & 0x0F;
0008 0E0F      03985         MOVLW   0x0f
000A 0000      03986         BANKSEL _MidiChannel
000C 1500      03987         ANDWF   _MidiChannel, W, B
000E 6E00      03988         MOVWF   r0x00
0010 0000      03989         BANKSEL _SendMidiOnButtonChange
               03990 ;       .line   378; main.c     eeprom_byte = eeprom_byte | SendMidiOnButtonChange<<4;
0012 3900      03991         SWAPF   _SendMidiOnButtonChange, W, B
0014 0BF0      03992         ANDLW   0xf0
0016 6E00      03993         MOVWF   r0x01
0018 5000      03994         MOVF    r0x01, W
001A 1200      03995         IORWF   r0x00, F
001C 0000      03996         BANKSEL _ReloadActivePreset
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03997 ;       .line   379; main.c     eeprom_byte = eeprom_byte | ReloadActivePreset<<5;
001E 3900      03998         SWAPF   _ReloadActivePreset, W, B
0020 44E8      03999         RLNCF   WREG, W
0022 0BE0      04000         ANDLW   0xe0
0024 6E00      04001         MOVWF   r0x01
0026 5000      04002         MOVF    r0x01, W
0028 1200      04003         IORWF   r0x00, F
002A 0000      04004         BANKSEL _ForceStartupPreset
               04005 ;       .line   380; main.c     eeprom_byte = eeprom_byte | ForceStartupPreset<<6;
002C 4100      04006         RRNCF   _ForceStartupPreset, W, B
002E 40E8      04007         RRNCF   WREG, W
0030 0BC0      04008         ANDLW   0xc0
0032 6E00      04009         MOVWF   r0x01
0034 5000      04010         MOVF    r0x01, W
0036 1200      04011         IORWF   r0x00, F
               04012 ;       .line   381; main.c     MIOS_EEPROM_Write(0x00,eeprom_byte);
0038 5000      04013         MOVF    r0x00, W
003A 6EED      04014         MOVWF   POSTDEC1
003C 0E00      04015         MOVLW   0x00
003E EC00 F000 04016         CALL    _MIOS_EEPROM_Write
0042 2AE9      04017         INCF    FSR1L, F
0044 0000      04018         BANKSEL _CurrentPreset
               04019 ;       .line   385; main.c     MIOS_EEPROM_Write(0x01,CurrentPreset);
0046 5100      04020         MOVF    _CurrentPreset, W, B
0048 6EED      04021         MOVWF   POSTDEC1
004A 0E01      04022         MOVLW   0x01
004C EC00 F000 04023         CALL    _MIOS_EEPROM_Write
0050 2AE9      04024         INCF    FSR1L, F
               04025 ;       .line   388; main.c     eeprom_byte = RelayType[0];
0052 C000 F000 04026         MOVFF   _RelayType, r0x00
0056 0000      04027         BANKSEL (_RelayType + 1)
               04028 ;       .line   389; main.c     eeprom_byte = eeprom_byte | RelayType[1]<<1;
0058 4500      04029         RLNCF   (_RelayType + 1), W, B
005A 0BFE      04030         ANDLW   0xfe
005C 6E00      04031         MOVWF   r0x01
005E 5000      04032         MOVF    r0x01, W
0060 1200      04033         IORWF   r0x00, F
               04034 ; removed redundant BANKSEL
               04035 ;       .line   390; main.c     eeprom_byte = eeprom_byte | RelayType[2]<<2;
0062 4500      04036         RLNCF   (_RelayType + 2), W, B
0064 44E8      04037         RLNCF   WREG, W
0066 0BFC      04038         ANDLW   0xfc
0068 6E00      04039         MOVWF   r0x01
006A 5000      04040         MOVF    r0x01, W
006C 1200      04041         IORWF   r0x00, F
               04042 ; removed redundant BANKSEL
               04043 ;       .line   391; main.c     eeprom_byte = eeprom_byte | RelayType[3]<<3;
006E 3900      04044         SWAPF   (_RelayType + 3), W, B
0070 40E8      04045         RRNCF   WREG, W
0072 0BF8      04046         ANDLW   0xf8
0074 6E00      04047         MOVWF   r0x01
0076 5000      04048         MOVF    r0x01, W
0078 1200      04049         IORWF   r0x00, F
               04050 ; removed redundant BANKSEL
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04051 ;       .line   392; main.c     eeprom_byte = eeprom_byte | RelayType[4]<<4;
007A 3900      04052         SWAPF   (_RelayType + 4), W, B
007C 0BF0      04053         ANDLW   0xf0
007E 6E00      04054         MOVWF   r0x01
0080 5000      04055         MOVF    r0x01, W
0082 1200      04056         IORWF   r0x00, F
               04057 ; removed redundant BANKSEL
               04058 ;       .line   393; main.c     eeprom_byte = eeprom_byte | RelayType[5]<<5;
0084 3900      04059         SWAPF   (_RelayType + 5), W, B
0086 44E8      04060         RLNCF   WREG, W
0088 0BE0      04061         ANDLW   0xe0
008A 6E00      04062         MOVWF   r0x01
008C 5000      04063         MOVF    r0x01, W
008E 1200      04064         IORWF   r0x00, F
               04065 ; removed redundant BANKSEL
               04066 ;       .line   394; main.c     eeprom_byte = eeprom_byte | RelayType[6]<<6;
0090 4100      04067         RRNCF   (_RelayType + 6), W, B
0092 40E8      04068         RRNCF   WREG, W
0094 0BC0      04069         ANDLW   0xc0
0096 6E00      04070         MOVWF   r0x01
0098 5000      04071         MOVF    r0x01, W
009A 1200      04072         IORWF   r0x00, F
               04073 ; removed redundant BANKSEL
               04074 ;       .line   395; main.c     eeprom_byte = eeprom_byte | RelayType[7]<<7;
009C 4100      04075         RRNCF   (_RelayType + 7), W, B
009E 0B80      04076         ANDLW   0x80
00A0 6E00      04077         MOVWF   r0x01
00A2 5000      04078         MOVF    r0x01, W
00A4 1200      04079         IORWF   r0x00, F
               04080 ;       .line   396; main.c     MIOS_EEPROM_Write(0x02,eeprom_byte);
00A6 5000      04081         MOVF    r0x00, W
00A8 6EED      04082         MOVWF   POSTDEC1
00AA 0E02      04083         MOVLW   0x02
00AC EC00 F000 04084         CALL    _MIOS_EEPROM_Write
00B0 2AE9      04085         INCF    FSR1L, F
               04086 ;       .line   399; main.c     eeprom_byte = RelayMode[0];
00B2 C000 F000 04087         MOVFF   _RelayMode, r0x00
00B6 0000      04088         BANKSEL (_RelayMode + 1)
               04089 ;       .line   400; main.c     eeprom_byte = eeprom_byte | RelayMode[1]<<1;
00B8 4500      04090         RLNCF   (_RelayMode + 1), W, B
00BA 0BFE      04091         ANDLW   0xfe
00BC 6E00      04092         MOVWF   r0x01
00BE 5000      04093         MOVF    r0x01, W
00C0 1200      04094         IORWF   r0x00, F
               04095 ; removed redundant BANKSEL
               04096 ;       .line   401; main.c     eeprom_byte = eeprom_byte | RelayMode[2]<<2;
00C2 4500      04097         RLNCF   (_RelayMode + 2), W, B
00C4 44E8      04098         RLNCF   WREG, W
00C6 0BFC      04099         ANDLW   0xfc
00C8 6E00      04100         MOVWF   r0x01
00CA 5000      04101         MOVF    r0x01, W
00CC 1200      04102         IORWF   r0x00, F
               04103 ; removed redundant BANKSEL
               04104 ;       .line   402; main.c     eeprom_byte = eeprom_byte | RelayMode[3]<<3;
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CE 3900      04105         SWAPF   (_RelayMode + 3), W, B
00D0 40E8      04106         RRNCF   WREG, W
00D2 0BF8      04107         ANDLW   0xf8
00D4 6E00      04108         MOVWF   r0x01
00D6 5000      04109         MOVF    r0x01, W
00D8 1200      04110         IORWF   r0x00, F
               04111 ; removed redundant BANKSEL
               04112 ;       .line   403; main.c     eeprom_byte = eeprom_byte | RelayMode[4]<<4;
00DA 3900      04113         SWAPF   (_RelayMode + 4), W, B
00DC 0BF0      04114         ANDLW   0xf0
00DE 6E00      04115         MOVWF   r0x01
00E0 5000      04116         MOVF    r0x01, W
00E2 1200      04117         IORWF   r0x00, F
               04118 ; removed redundant BANKSEL
               04119 ;       .line   404; main.c     eeprom_byte = eeprom_byte | RelayMode[5]<<5;
00E4 3900      04120         SWAPF   (_RelayMode + 5), W, B
00E6 44E8      04121         RLNCF   WREG, W
00E8 0BE0      04122         ANDLW   0xe0
00EA 6E00      04123         MOVWF   r0x01
00EC 5000      04124         MOVF    r0x01, W
00EE 1200      04125         IORWF   r0x00, F
               04126 ; removed redundant BANKSEL
               04127 ;       .line   405; main.c     eeprom_byte = eeprom_byte | RelayMode[6]<<6;
00F0 4100      04128         RRNCF   (_RelayMode + 6), W, B
00F2 40E8      04129         RRNCF   WREG, W
00F4 0BC0      04130         ANDLW   0xc0
00F6 6E00      04131         MOVWF   r0x01
00F8 5000      04132         MOVF    r0x01, W
00FA 1200      04133         IORWF   r0x00, F
               04134 ; removed redundant BANKSEL
               04135 ;       .line   406; main.c     eeprom_byte = eeprom_byte | RelayMode[7]<<7;
00FC 4100      04136         RRNCF   (_RelayMode + 7), W, B
00FE 0B80      04137         ANDLW   0x80
0100 6E00      04138         MOVWF   r0x01
0102 5000      04139         MOVF    r0x01, W
0104 1200      04140         IORWF   r0x00, F
               04141 ;       .line   407; main.c     MIOS_EEPROM_Write(0x03,eeprom_byte);
0106 5000      04142         MOVF    r0x00, W
0108 6EED      04143         MOVWF   POSTDEC1
010A 0E03      04144         MOVLW   0x03
010C EC00 F000 04145         CALL    _MIOS_EEPROM_Write
0110 2AE9      04146         INCF    FSR1L, F
               04147 ;       .line   410; main.c     eeprom_byte = FootPreset[0];
0112 C000 F000 04148         MOVFF   _FootPreset, r0x00
               04149 ;       .line   411; main.c     MIOS_EEPROM_Write(0x04,eeprom_byte);    
0116 5000      04150         MOVF    r0x00, W
0118 6EED      04151         MOVWF   POSTDEC1
011A 0E04      04152         MOVLW   0x04
011C EC00 F000 04153         CALL    _MIOS_EEPROM_Write
0120 2AE9      04154         INCF    FSR1L, F
               04155 ;       .line   413; main.c     eeprom_byte = FootPreset[1];
0122 C000 F000 04156         MOVFF   (_FootPreset + 1), r0x00
               04157 ;       .line   414; main.c     MIOS_EEPROM_Write(0x05,eeprom_byte);    
0126 5000      04158         MOVF    r0x00, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0128 6EED      04159         MOVWF   POSTDEC1
012A 0E05      04160         MOVLW   0x05
012C EC00 F000 04161         CALL    _MIOS_EEPROM_Write
0130 2AE9      04162         INCF    FSR1L, F
               04163 ;       .line   416; main.c     eeprom_byte = FootPreset[2];
0132 C000 F000 04164         MOVFF   (_FootPreset + 2), r0x00
               04165 ;       .line   417; main.c     MIOS_EEPROM_Write(0x06,eeprom_byte);    
0136 5000      04166         MOVF    r0x00, W
0138 6EED      04167         MOVWF   POSTDEC1
013A 0E06      04168         MOVLW   0x06
013C EC00 F000 04169         CALL    _MIOS_EEPROM_Write
0140 2AE9      04170         INCF    FSR1L, F
               04171 ;       .line   419; main.c     eeprom_byte = FootPreset[3];
0142 C000 F000 04172         MOVFF   (_FootPreset + 3), r0x00
               04173 ;       .line   420; main.c     MIOS_EEPROM_Write(0x07,eeprom_byte);    
0146 5000      04174         MOVF    r0x00, W
0148 6EED      04175         MOVWF   POSTDEC1
014A 0E07      04176         MOVLW   0x07
014C EC00 F000 04177         CALL    _MIOS_EEPROM_Write
0150 2AE9      04178         INCF    FSR1L, F
0152 0000      04179         BANKSEL _ThisStartupPreset
               04180 ;       .line   423; main.c     MIOS_EEPROM_Write(0x08,ThisStartupPreset);      
0154 5100      04181         MOVF    _ThisStartupPreset, W, B
0156 6EED      04182         MOVWF   POSTDEC1
0158 0E08      04183         MOVLW   0x08
015A EC00 F000 04184         CALL    _MIOS_EEPROM_Write
015E 2AE9      04185         INCF    FSR1L, F
0160 CFEC F000 04186         MOVFF   PREINC1, r0x01
0164 CFEC F000 04187         MOVFF   PREINC1, r0x00
0168 0012      04188         RETURN  
               04189 
               04190 ; ; Starting pCode block
               04191 S_main__LoadGlobalOptions       code
0000           04192 _LoadGlobalOptions:
               04193 ;       .line   302; main.c     void LoadGlobalOptions ()
0000 C000 FFED 04194         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 04195         MOVFF   r0x01, POSTDEC1
               04196 ;       .line   312; main.c     eeprom_byte = MIOS_EEPROM_Read(0x00);
0008 0E00      04197         MOVLW   0x00
000A EC00 F000 04198         CALL    _MIOS_EEPROM_Read
000E 6E00      04199         MOVWF   r0x00
               04200 ;       .line   313; main.c     MidiChannel = eeprom_byte & 0x0F;
0010 0E0F      04201         MOVLW   0x0f
0012 1400      04202         ANDWF   r0x00, W
0014 0000      04203         BANKSEL _MidiChannel
0016 6F00      04204         MOVWF   _MidiChannel, B
               04205 ;       .line   314; main.c     SendMidiOnButtonChange = (eeprom_byte & 0x10)>>4;
0018 0E10      04206         MOVLW   0x10
001A 1400      04207         ANDWF   r0x00, W
001C 6E00      04208         MOVWF   r0x01
001E 3800      04209         SWAPF   r0x01, W
0020 0B0F      04210         ANDLW   0x0f
0022 0000      04211         BANKSEL _SendMidiOnButtonChange
0024 6F00      04212         MOVWF   _SendMidiOnButtonChange, B
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04213 ;       .line   315; main.c     ReloadActivePreset = (eeprom_byte & 0x20)>>5;
0026 0E20      04214         MOVLW   0x20
0028 1400      04215         ANDWF   r0x00, W
002A 6E00      04216         MOVWF   r0x01
002C 3800      04217         SWAPF   r0x01, W
002E 40E8      04218         RRNCF   WREG, W
0030 0B07      04219         ANDLW   0x07
0032 0000      04220         BANKSEL _ReloadActivePreset
0034 6F00      04221         MOVWF   _ReloadActivePreset, B
               04222 ;       .line   316; main.c     ForceStartupPreset = (eeprom_byte & 0x40)>>6;
0036 0E40      04223         MOVLW   0x40
0038 1400      04224         ANDWF   r0x00, W
003A 6E00      04225         MOVWF   r0x01
003C 4400      04226         RLNCF   r0x01, W
003E 44E8      04227         RLNCF   WREG, W
0040 0B03      04228         ANDLW   0x03
0042 0000      04229         BANKSEL _ForceStartupPreset
0044 6F00      04230         MOVWF   _ForceStartupPreset, B
               04231 ;       .line   320; main.c     CurrentPreset = MIOS_EEPROM_Read(0x01);
0046 0E01      04232         MOVLW   0x01
0048 EC00 F000 04233         CALL    _MIOS_EEPROM_Read
004C 0000      04234         BANKSEL _CurrentPreset
004E 6F00      04235         MOVWF   _CurrentPreset, B
               04236 ;       .line   323; main.c     eeprom_byte = MIOS_EEPROM_Read(0x02);   
0050 0E02      04237         MOVLW   0x02
0052 EC00 F000 04238         CALL    _MIOS_EEPROM_Read
0056 6E00      04239         MOVWF   r0x00
               04240 ;       .line   324; main.c     RelayType[0] = eeprom_byte & 0x01;
0058 0E01      04241         MOVLW   0x01
005A 1400      04242         ANDWF   r0x00, W
005C 6E00      04243         MOVWF   r0x01
005E 5000      04244         MOVF    r0x01, W
0060 0000      04245         BANKSEL _RelayType
0062 6F00      04246         MOVWF   _RelayType, B
               04247 ;       .line   325; main.c     RelayType[1] = (eeprom_byte & 0x02)>>1;
0064 0E02      04248         MOVLW   0x02
0066 1400      04249         ANDWF   r0x00, W
0068 6E00      04250         MOVWF   r0x01
006A 4000      04251         RRNCF   r0x01, W
006C 0B7F      04252         ANDLW   0x7f
006E 6E00      04253         MOVWF   r0x01
0070 5000      04254         MOVF    r0x01, W
               04255 ; removed redundant BANKSEL
0072 6F00      04256         MOVWF   (_RelayType + 1), B
               04257 ;       .line   326; main.c     RelayType[2] = (eeprom_byte & 0x04)>>2;
0074 0E04      04258         MOVLW   0x04
0076 1400      04259         ANDWF   r0x00, W
0078 6E00      04260         MOVWF   r0x01
007A 4000      04261         RRNCF   r0x01, W
007C 40E8      04262         RRNCF   WREG, W
007E 0B3F      04263         ANDLW   0x3f
0080 6E00      04264         MOVWF   r0x01
0082 5000      04265         MOVF    r0x01, W
               04266 ; removed redundant BANKSEL
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 6F00      04267         MOVWF   (_RelayType + 2), B
               04268 ;       .line   327; main.c     RelayType[3] = (eeprom_byte & 0x08)>>3;
0086 0E08      04269         MOVLW   0x08
0088 1400      04270         ANDWF   r0x00, W
008A 6E00      04271         MOVWF   r0x01
008C 3800      04272         SWAPF   r0x01, W
008E 44E8      04273         RLNCF   WREG, W
0090 0B1F      04274         ANDLW   0x1f
0092 6E00      04275         MOVWF   r0x01
0094 5000      04276         MOVF    r0x01, W
               04277 ; removed redundant BANKSEL
0096 6F00      04278         MOVWF   (_RelayType + 3), B
               04279 ;       .line   328; main.c     RelayType[4] = (eeprom_byte & 0x10)>>4;
0098 0E10      04280         MOVLW   0x10
009A 1400      04281         ANDWF   r0x00, W
009C 6E00      04282         MOVWF   r0x01
009E 3800      04283         SWAPF   r0x01, W
00A0 0B0F      04284         ANDLW   0x0f
00A2 6E00      04285         MOVWF   r0x01
00A4 5000      04286         MOVF    r0x01, W
               04287 ; removed redundant BANKSEL
00A6 6F00      04288         MOVWF   (_RelayType + 4), B
               04289 ;       .line   329; main.c     RelayType[5] = (eeprom_byte & 0x20)>>5;
00A8 0E20      04290         MOVLW   0x20
00AA 1400      04291         ANDWF   r0x00, W
00AC 6E00      04292         MOVWF   r0x01
00AE 3800      04293         SWAPF   r0x01, W
00B0 40E8      04294         RRNCF   WREG, W
00B2 0B07      04295         ANDLW   0x07
00B4 6E00      04296         MOVWF   r0x01
00B6 5000      04297         MOVF    r0x01, W
               04298 ; removed redundant BANKSEL
00B8 6F00      04299         MOVWF   (_RelayType + 5), B
               04300 ;       .line   330; main.c     RelayType[6] = (eeprom_byte & 0x40)>>6;
00BA 0E40      04301         MOVLW   0x40
00BC 1400      04302         ANDWF   r0x00, W
00BE 6E00      04303         MOVWF   r0x01
00C0 4400      04304         RLNCF   r0x01, W
00C2 44E8      04305         RLNCF   WREG, W
00C4 0B03      04306         ANDLW   0x03
00C6 6E00      04307         MOVWF   r0x01
00C8 5000      04308         MOVF    r0x01, W
               04309 ; removed redundant BANKSEL
00CA 6F00      04310         MOVWF   (_RelayType + 6), B
               04311 ;       .line   331; main.c     RelayType[7] = (eeprom_byte & 0x80)>>7;
00CC 0E80      04312         MOVLW   0x80
00CE 1400      04313         ANDWF   r0x00, W
00D0 6E00      04314         MOVWF   r0x01
00D2 4400      04315         RLNCF   r0x01, W
00D4 0B01      04316         ANDLW   0x01
00D6 6E00      04317         MOVWF   r0x01
00D8 5000      04318         MOVF    r0x01, W
               04319 ; removed redundant BANKSEL
00DA 6F00      04320         MOVWF   (_RelayType + 7), B
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04321 ;       .line   334; main.c     eeprom_byte = MIOS_EEPROM_Read(0x03);   
00DC 0E03      04322         MOVLW   0x03
00DE EC00 F000 04323         CALL    _MIOS_EEPROM_Read
00E2 6E00      04324         MOVWF   r0x00
               04325 ;       .line   335; main.c     RelayMode[0] = eeprom_byte & 0x01;
00E4 0E01      04326         MOVLW   0x01
00E6 1400      04327         ANDWF   r0x00, W
00E8 6E00      04328         MOVWF   r0x01
00EA 5000      04329         MOVF    r0x01, W
00EC 0000      04330         BANKSEL _RelayMode
00EE 6F00      04331         MOVWF   _RelayMode, B
               04332 ;       .line   336; main.c     RelayMode[1] = (eeprom_byte & 0x02)>>1;
00F0 0E02      04333         MOVLW   0x02
00F2 1400      04334         ANDWF   r0x00, W
00F4 6E00      04335         MOVWF   r0x01
00F6 4000      04336         RRNCF   r0x01, W
00F8 0B7F      04337         ANDLW   0x7f
00FA 6E00      04338         MOVWF   r0x01
00FC 5000      04339         MOVF    r0x01, W
               04340 ; removed redundant BANKSEL
00FE 6F00      04341         MOVWF   (_RelayMode + 1), B
               04342 ;       .line   337; main.c     RelayMode[2] = (eeprom_byte & 0x04)>>2;
0100 0E04      04343         MOVLW   0x04
0102 1400      04344         ANDWF   r0x00, W
0104 6E00      04345         MOVWF   r0x01
0106 4000      04346         RRNCF   r0x01, W
0108 40E8      04347         RRNCF   WREG, W
010A 0B3F      04348         ANDLW   0x3f
010C 6E00      04349         MOVWF   r0x01
010E 5000      04350         MOVF    r0x01, W
               04351 ; removed redundant BANKSEL
0110 6F00      04352         MOVWF   (_RelayMode + 2), B
               04353 ;       .line   338; main.c     RelayMode[3] = (eeprom_byte & 0x08)>>3;
0112 0E08      04354         MOVLW   0x08
0114 1400      04355         ANDWF   r0x00, W
0116 6E00      04356         MOVWF   r0x01
0118 3800      04357         SWAPF   r0x01, W
011A 44E8      04358         RLNCF   WREG, W
011C 0B1F      04359         ANDLW   0x1f
011E 6E00      04360         MOVWF   r0x01
0120 5000      04361         MOVF    r0x01, W
               04362 ; removed redundant BANKSEL
0122 6F00      04363         MOVWF   (_RelayMode + 3), B
               04364 ;       .line   339; main.c     RelayMode[4] = (eeprom_byte & 0x10)>>4;
0124 0E10      04365         MOVLW   0x10
0126 1400      04366         ANDWF   r0x00, W
0128 6E00      04367         MOVWF   r0x01
012A 3800      04368         SWAPF   r0x01, W
012C 0B0F      04369         ANDLW   0x0f
012E 6E00      04370         MOVWF   r0x01
0130 5000      04371         MOVF    r0x01, W
               04372 ; removed redundant BANKSEL
0132 6F00      04373         MOVWF   (_RelayMode + 4), B
               04374 ;       .line   340; main.c     RelayMode[5] = (eeprom_byte & 0x20)>>5;
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0134 0E20      04375         MOVLW   0x20
0136 1400      04376         ANDWF   r0x00, W
0138 6E00      04377         MOVWF   r0x01
013A 3800      04378         SWAPF   r0x01, W
013C 40E8      04379         RRNCF   WREG, W
013E 0B07      04380         ANDLW   0x07
0140 6E00      04381         MOVWF   r0x01
0142 5000      04382         MOVF    r0x01, W
               04383 ; removed redundant BANKSEL
0144 6F00      04384         MOVWF   (_RelayMode + 5), B
               04385 ;       .line   341; main.c     RelayMode[6] = (eeprom_byte & 0x40)>>6;
0146 0E40      04386         MOVLW   0x40
0148 1400      04387         ANDWF   r0x00, W
014A 6E00      04388         MOVWF   r0x01
014C 4400      04389         RLNCF   r0x01, W
014E 44E8      04390         RLNCF   WREG, W
0150 0B03      04391         ANDLW   0x03
0152 6E00      04392         MOVWF   r0x01
0154 5000      04393         MOVF    r0x01, W
               04394 ; removed redundant BANKSEL
0156 6F00      04395         MOVWF   (_RelayMode + 6), B
               04396 ;       .line   342; main.c     RelayMode[7] = (eeprom_byte & 0x80)>>7;
0158 0E80      04397         MOVLW   0x80
015A 1600      04398         ANDWF   r0x00, F
015C 4400      04399         RLNCF   r0x00, W
015E 0B01      04400         ANDLW   0x01
0160 6E00      04401         MOVWF   r0x00
0162 5000      04402         MOVF    r0x00, W
               04403 ; removed redundant BANKSEL
0164 6F00      04404         MOVWF   (_RelayMode + 7), B
               04405 ;       .line   345; main.c     FootPreset[0] = MIOS_EEPROM_Read(0x04); 
0166 0E04      04406         MOVLW   0x04
0168 EC00 F000 04407         CALL    _MIOS_EEPROM_Read
016C 6E00      04408         MOVWF   r0x00
016E 5000      04409         MOVF    r0x00, W
0170 0000      04410         BANKSEL _FootPreset
0172 6F00      04411         MOVWF   _FootPreset, B
               04412 ;       .line   347; main.c     FootPreset[1] = MIOS_EEPROM_Read(0x05); 
0174 0E05      04413         MOVLW   0x05
0176 EC00 F000 04414         CALL    _MIOS_EEPROM_Read
017A 6E00      04415         MOVWF   r0x00
017C 5000      04416         MOVF    r0x00, W
017E 0000      04417         BANKSEL (_FootPreset + 1)
0180 6F00      04418         MOVWF   (_FootPreset + 1), B
               04419 ;       .line   349; main.c     FootPreset[2] = MIOS_EEPROM_Read(0x06); 
0182 0E06      04420         MOVLW   0x06
0184 EC00 F000 04421         CALL    _MIOS_EEPROM_Read
0188 6E00      04422         MOVWF   r0x00
018A 5000      04423         MOVF    r0x00, W
018C 0000      04424         BANKSEL (_FootPreset + 2)
018E 6F00      04425         MOVWF   (_FootPreset + 2), B
               04426 ;       .line   351; main.c     FootPreset[3] = MIOS_EEPROM_Read(0x07); 
0190 0E07      04427         MOVLW   0x07
0192 EC00 F000 04428         CALL    _MIOS_EEPROM_Read
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 6E00      04429         MOVWF   r0x00
0198 5000      04430         MOVF    r0x00, W
019A 0000      04431         BANKSEL (_FootPreset + 3)
019C 6F00      04432         MOVWF   (_FootPreset + 3), B
               04433 ;       .line   354; main.c     ThisStartupPreset = MIOS_EEPROM_Read(0x08);     
019E 0E08      04434         MOVLW   0x08
01A0 EC00 F000 04435         CALL    _MIOS_EEPROM_Read
01A4 0000      04436         BANKSEL _ThisStartupPreset
01A6 6F00      04437         MOVWF   _ThisStartupPreset, B
01A8 CFEC F000 04438         MOVFF   PREINC1, r0x01
01AC CFEC F000 04439         MOVFF   PREINC1, r0x00
01B0 0012      04440         RETURN  
               04441 
               04442 ; ; Starting pCode block
               04443 S_main__LoadTestPreset  code
0000           04444 _LoadTestPreset:
               04445 ;       .line   276; main.c     void LoadTestPreset()
0000 C000 FFED 04446         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 04447         MOVFF   r0x01, POSTDEC1
0008 C000 FFED 04448         MOVFF   r0x02, POSTDEC1
000C C000 FFED 04449         MOVFF   r0x03, POSTDEC1
0010 0000      04450         BANKSEL _MidiChannel
               04451 ;       .line   282; main.c     MidiChannel = 0;
0012 6B00      04452         CLRF    _MidiChannel, B
               04453 ;       .line   283; main.c     CurrentPreset = 1;
0014 0E01      04454         MOVLW   0x01
0016 0000      04455         BANKSEL _CurrentPreset
0018 6F00      04456         MOVWF   _CurrentPreset, B
001A 0000      04457         BANKSEL _SendMidiOnButtonChange
               04458 ;       .line   284; main.c     SendMidiOnButtonChange = 0;
001C 6B00      04459         CLRF    _SendMidiOnButtonChange, B
               04460 ;       .line   285; main.c     for ( i=0; i<5; i++)
001E 6A00      04461         CLRF    r0x00
0020 6A00      04462         CLRF    r0x01
0022           04463 _00229_DS_:
0022 0E00      04464         MOVLW   0x00
0024 5C00      04465         SUBWF   r0x01, W
0026 E100      04466         BNZ     _00245_DS_
0028 0E05      04467         MOVLW   0x05
002A 5C00      04468         SUBWF   r0x00, W
002C           04469 _00245_DS_:
002C E200      04470         BC      _00232_DS_
               04471 ;       .line   287; main.c     RelayType[i] = 0; //Toggle=0, Momentary=1
002E 0E00      04472         MOVLW   LOW(_RelayType)
0030 2400      04473         ADDWF   r0x00, W
0032 6E00      04474         MOVWF   r0x02
0034 0E00      04475         MOVLW   HIGH(_RelayType)
0036 2000      04476         ADDWFC  r0x01, W
0038 6E00      04477         MOVWF   r0x03
003A C000 FFE1 04478         MOVFF   r0x02, FSR0L
003E C000 FFE2 04479         MOVFF   r0x03, FSR0H
0042 0E00      04480         MOVLW   0x00
0044 6EE7      04481         MOVWF   INDF0
               04482 ;       .line   288; main.c     RelayMode[i] = 0; //Free=0, radiogroup=1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0046 0E00      04483         MOVLW   LOW(_RelayMode)
0048 2400      04484         ADDWF   r0x00, W
004A 6E00      04485         MOVWF   r0x02
004C 0E00      04486         MOVLW   HIGH(_RelayMode)
004E 2000      04487         ADDWFC  r0x01, W
0050 6E00      04488         MOVWF   r0x03
0052 C000 FFE1 04489         MOVFF   r0x02, FSR0L
0056 C000 FFE2 04490         MOVFF   r0x03, FSR0H
005A 0E00      04491         MOVLW   0x00
005C 6EE7      04492         MOVWF   INDF0
               04493 ;       .line   289; main.c     RelayState[i] = 0; //Open/Inactive=0, Closed/Active=1
005E 0E00      04494         MOVLW   LOW(_RelayState)
0060 2400      04495         ADDWF   r0x00, W
0062 6E00      04496         MOVWF   r0x02
0064 0E00      04497         MOVLW   HIGH(_RelayState)
0066 2000      04498         ADDWFC  r0x01, W
0068 6E00      04499         MOVWF   r0x03
006A C000 FFE1 04500         MOVFF   r0x02, FSR0L
006E C000 FFE2 04501         MOVFF   r0x03, FSR0H
0072 0E00      04502         MOVLW   0x00
0074 6EE7      04503         MOVWF   INDF0
               04504 ;       .line   285; main.c     for ( i=0; i<5; i++)
0076 2A00      04505         INCF    r0x00, F
0078 B0D8      04506         BTFSC   STATUS, 0
007A 2A00      04507         INCF    r0x01, F
007C D000      04508         BRA     _00229_DS_
007E           04509 _00232_DS_:
               04510 ;       .line   291; main.c     for ( i=5; i<8; i++)
007E 0E05      04511         MOVLW   0x05
0080 6E00      04512         MOVWF   r0x00
0082 6A00      04513         CLRF    r0x01
0084           04514 _00233_DS_:
0084 0E00      04515         MOVLW   0x00
0086 5C00      04516         SUBWF   r0x01, W
0088 E100      04517         BNZ     _00246_DS_
008A 0E08      04518         MOVLW   0x08
008C 5C00      04519         SUBWF   r0x00, W
008E           04520 _00246_DS_:
008E E200      04521         BC      _00237_DS_
               04522 ;       .line   293; main.c     RelayType[i] = 1; //Toggle=0, Momentary=1
0090 0E00      04523         MOVLW   LOW(_RelayType)
0092 2400      04524         ADDWF   r0x00, W
0094 6E00      04525         MOVWF   r0x02
0096 0E00      04526         MOVLW   HIGH(_RelayType)
0098 2000      04527         ADDWFC  r0x01, W
009A 6E00      04528         MOVWF   r0x03
009C C000 FFE1 04529         MOVFF   r0x02, FSR0L
00A0 C000 FFE2 04530         MOVFF   r0x03, FSR0H
00A4 0E01      04531         MOVLW   0x01
00A6 6EE7      04532         MOVWF   INDF0
               04533 ;       .line   294; main.c     RelayMode[i] = 1; //Free=0, radiogroup=1
00A8 0E00      04534         MOVLW   LOW(_RelayMode)
00AA 2400      04535         ADDWF   r0x00, W
00AC 6E00      04536         MOVWF   r0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE 0E00      04537         MOVLW   HIGH(_RelayMode)
00B0 2000      04538         ADDWFC  r0x01, W
00B2 6E00      04539         MOVWF   r0x03
00B4 C000 FFE1 04540         MOVFF   r0x02, FSR0L
00B8 C000 FFE2 04541         MOVFF   r0x03, FSR0H
00BC 0E01      04542         MOVLW   0x01
00BE 6EE7      04543         MOVWF   INDF0
               04544 ;       .line   295; main.c     RelayState[i] = 0; //Open/Inactive=0, Closed/Active=1
00C0 0E00      04545         MOVLW   LOW(_RelayState)
00C2 2400      04546         ADDWF   r0x00, W
00C4 6E00      04547         MOVWF   r0x02
00C6 0E00      04548         MOVLW   HIGH(_RelayState)
00C8 2000      04549         ADDWFC  r0x01, W
00CA 6E00      04550         MOVWF   r0x03
00CC C000 FFE1 04551         MOVFF   r0x02, FSR0L
00D0 C000 FFE2 04552         MOVFF   r0x03, FSR0H
00D4 0E00      04553         MOVLW   0x00
00D6 6EE7      04554         MOVWF   INDF0
               04555 ;       .line   291; main.c     for ( i=5; i<8; i++)
00D8 2A00      04556         INCF    r0x00, F
00DA B0D8      04557         BTFSC   STATUS, 0
00DC 2A00      04558         INCF    r0x01, F
00DE D000      04559         BRA     _00233_DS_
00E0           04560 _00237_DS_:
00E0 CFEC F000 04561         MOVFF   PREINC1, r0x03
00E4 CFEC F000 04562         MOVFF   PREINC1, r0x02
00E8 CFEC F000 04563         MOVFF   PREINC1, r0x01
00EC CFEC F000 04564         MOVFF   PREINC1, r0x00
00F0 0012      04565         RETURN  
               04566 
               04567 ; ; Starting pCode block
               04568 S_main__MenuButton      code
0000           04569 _MenuButton:
               04570 ;       .line   260; main.c     unsigned char MenuButton ( unsigned char pin_number )
0000 CFD9 FFED 04571         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 04572         MOVFF   FSR1L, FSR2L
0008 C000 FFED 04573         MOVFF   r0x00, POSTDEC1
000C C000 FFED 04574         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 04575         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 04576         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 04577         MOVFF   r0x04, POSTDEC1
001C C000 FFED 04578         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 04579         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 04580         MOVFF   r0x07, POSTDEC1
0028 0E02      04581         MOVLW   0x02
002A CFDB F000 04582         MOVFF   PLUSW2, r0x00
               04583 ;       .line   264; main.c     for ( i=0; i<MAX_MENU_BUTTONS_NB; i++ )
002E 6A00      04584         CLRF    r0x01
0030 6A00      04585         CLRF    r0x02
0032 6A00      04586         CLRF    r0x03
0034 6A00      04587         CLRF    r0x04
0036           04588 _00213_DS_:
0036 0E00      04589         MOVLW   0x00
0038 5C00      04590         SUBWF   r0x04, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
003A E100      04591         BNZ     _00222_DS_
003C 0E04      04592         MOVLW   0x04
003E 5C00      04593         SUBWF   r0x03, W
0040           04594 _00222_DS_:
0040 E200      04595         BC      _00216_DS_
               04596 ;       .line   266; main.c     if ( MenuButtonPin[i] == pin_number )
0042 0E00      04597         MOVLW   LOW(_MenuButtonPin)
0044 2400      04598         ADDWF   r0x03, W
0046 6E00      04599         MOVWF   r0x05
0048 0E00      04600         MOVLW   HIGH(_MenuButtonPin)
004A 2000      04601         ADDWFC  r0x04, W
004C 6E00      04602         MOVWF   r0x06
004E 6A00      04603         CLRF    r0x07
0050 0E00      04604         MOVLW   UPPER(_MenuButtonPin)
0052 2200      04605         ADDWFC  r0x07, F
0054 C000 FFF6 04606         MOVFF   r0x05, TBLPTRL
0058 C000 FFF7 04607         MOVFF   r0x06, TBLPTRH
005C C000 FFF8 04608         MOVFF   r0x07, TBLPTRU
0060 0009      04609         TBLRD*+ 
0062 CFF5 F000 04610         MOVFF   TABLAT, r0x05
0066 5000      04611         MOVF    r0x05, W
0068 1800      04612         XORWF   r0x00, W
006A E100      04613         BNZ     _00215_DS_
               04614 ;       .line   268; main.c     return i+1;
006C 5000      04615         MOVF    r0x01, W
006E 6E00      04616         MOVWF   r0x05
0070 2A00      04617         INCF    r0x05, F
0072 5000      04618         MOVF    r0x05, W
0074 D000      04619         BRA     _00217_DS_
0076           04620 _00215_DS_:
               04621 ;       .line   264; main.c     for ( i=0; i<MAX_MENU_BUTTONS_NB; i++ )
0076 2A00      04622         INCF    r0x03, F
0078 B0D8      04623         BTFSC   STATUS, 0
007A 2A00      04624         INCF    r0x04, F
007C C000 F000 04625         MOVFF   r0x03, r0x01
0080 C000 F000 04626         MOVFF   r0x04, r0x02
0084 D000      04627         BRA     _00213_DS_
0086           04628 _00216_DS_:
               04629 ;       .line   271; main.c     return 0;
0086 6AE8      04630         CLRF    WREG
0088           04631 _00217_DS_:
0088 CFEC F000 04632         MOVFF   PREINC1, r0x07
008C CFEC F000 04633         MOVFF   PREINC1, r0x06
0090 CFEC F000 04634         MOVFF   PREINC1, r0x05
0094 CFEC F000 04635         MOVFF   PREINC1, r0x04
0098 CFEC F000 04636         MOVFF   PREINC1, r0x03
009C CFEC F000 04637         MOVFF   PREINC1, r0x02
00A0 CFEC F000 04638         MOVFF   PREINC1, r0x01
00A4 CFEC F000 04639         MOVFF   PREINC1, r0x00
00A8 CFEC FFD9 04640         MOVFF   PREINC1, FSR2L
00AC 0012      04641         RETURN  
               04642 
               04643 ; ; Starting pCode block
               04644 S_main__RelayButton     code
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000           04645 _RelayButton:
               04646 ;       .line   243; main.c     unsigned char RelayButton ( unsigned char pin_number )
0000 CFD9 FFED 04647         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 04648         MOVFF   FSR1L, FSR2L
0008 C000 FFED 04649         MOVFF   r0x00, POSTDEC1
000C C000 FFED 04650         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 04651         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 04652         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 04653         MOVFF   r0x04, POSTDEC1
001C C000 FFED 04654         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 04655         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 04656         MOVFF   r0x07, POSTDEC1
0028 0E02      04657         MOVLW   0x02
002A CFDB F000 04658         MOVFF   PLUSW2, r0x00
               04659 ;       .line   247; main.c     for ( i=0; i<MAX_RELAY_BUTTONS_NB; i++ )
002E 6A00      04660         CLRF    r0x01
0030 6A00      04661         CLRF    r0x02
0032 6A00      04662         CLRF    r0x03
0034 6A00      04663         CLRF    r0x04
0036           04664 _00195_DS_:
0036 0E00      04665         MOVLW   0x00
0038 5C00      04666         SUBWF   r0x04, W
003A E100      04667         BNZ     _00204_DS_
003C 0E08      04668         MOVLW   0x08
003E 5C00      04669         SUBWF   r0x03, W
0040           04670 _00204_DS_:
0040 E200      04671         BC      _00198_DS_
               04672 ;       .line   249; main.c     if ( ButtonPin[i] == pin_number )
0042 0E00      04673         MOVLW   LOW(_ButtonPin)
0044 2400      04674         ADDWF   r0x03, W
0046 6E00      04675         MOVWF   r0x05
0048 0E00      04676         MOVLW   HIGH(_ButtonPin)
004A 2000      04677         ADDWFC  r0x04, W
004C 6E00      04678         MOVWF   r0x06
004E 6A00      04679         CLRF    r0x07
0050 0E00      04680         MOVLW   UPPER(_ButtonPin)
0052 2200      04681         ADDWFC  r0x07, F
0054 C000 FFF6 04682         MOVFF   r0x05, TBLPTRL
0058 C000 FFF7 04683         MOVFF   r0x06, TBLPTRH
005C C000 FFF8 04684         MOVFF   r0x07, TBLPTRU
0060 0009      04685         TBLRD*+ 
0062 CFF5 F000 04686         MOVFF   TABLAT, r0x05
0066 5000      04687         MOVF    r0x05, W
0068 1800      04688         XORWF   r0x00, W
006A E100      04689         BNZ     _00197_DS_
               04690 ;       .line   251; main.c     return i+1;
006C 5000      04691         MOVF    r0x01, W
006E 6E00      04692         MOVWF   r0x05
0070 2A00      04693         INCF    r0x05, F
0072 5000      04694         MOVF    r0x05, W
0074 D000      04695         BRA     _00199_DS_
0076           04696 _00197_DS_:
               04697 ;       .line   247; main.c     for ( i=0; i<MAX_RELAY_BUTTONS_NB; i++ )
0076 2A00      04698         INCF    r0x03, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0078 B0D8      04699         BTFSC   STATUS, 0
007A 2A00      04700         INCF    r0x04, F
007C C000 F000 04701         MOVFF   r0x03, r0x01
0080 C000 F000 04702         MOVFF   r0x04, r0x02
0084 D000      04703         BRA     _00195_DS_
0086           04704 _00198_DS_:
               04705 ;       .line   254; main.c     return 0;
0086 6AE8      04706         CLRF    WREG
0088           04707 _00199_DS_:
0088 CFEC F000 04708         MOVFF   PREINC1, r0x07
008C CFEC F000 04709         MOVFF   PREINC1, r0x06
0090 CFEC F000 04710         MOVFF   PREINC1, r0x05
0094 CFEC F000 04711         MOVFF   PREINC1, r0x04
0098 CFEC F000 04712         MOVFF   PREINC1, r0x03
009C CFEC F000 04713         MOVFF   PREINC1, r0x02
00A0 CFEC F000 04714         MOVFF   PREINC1, r0x01
00A4 CFEC F000 04715         MOVFF   PREINC1, r0x00
00A8 CFEC FFD9 04716         MOVFF   PREINC1, FSR2L
00AC 0012      04717         RETURN  
               04718 
               04719 ; ; Starting pCode block
               04720 S_main__FootButton      code
0000           04721 _FootButton:
               04722 ;       .line   226; main.c     unsigned char FootButton ( unsigned char pin_number )
0000 CFD9 FFED 04723         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 04724         MOVFF   FSR1L, FSR2L
0008 C000 FFED 04725         MOVFF   r0x00, POSTDEC1
000C C000 FFED 04726         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 04727         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 04728         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 04729         MOVFF   r0x04, POSTDEC1
001C C000 FFED 04730         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 04731         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 04732         MOVFF   r0x07, POSTDEC1
0028 0E02      04733         MOVLW   0x02
002A CFDB F000 04734         MOVFF   PLUSW2, r0x00
               04735 ;       .line   230; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
002E 6A00      04736         CLRF    r0x01
0030 6A00      04737         CLRF    r0x02
0032 6A00      04738         CLRF    r0x03
0034 6A00      04739         CLRF    r0x04
0036           04740 _00177_DS_:
0036 0E00      04741         MOVLW   0x00
0038 5C00      04742         SUBWF   r0x04, W
003A E100      04743         BNZ     _00186_DS_
003C 0E04      04744         MOVLW   0x04
003E 5C00      04745         SUBWF   r0x03, W
0040           04746 _00186_DS_:
0040 E200      04747         BC      _00180_DS_
               04748 ;       .line   232; main.c     if ( FootButtonPin[i] == pin_number )
0042 0E00      04749         MOVLW   LOW(_FootButtonPin)
0044 2400      04750         ADDWF   r0x03, W
0046 6E00      04751         MOVWF   r0x05
0048 0E00      04752         MOVLW   HIGH(_FootButtonPin)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 2000      04753         ADDWFC  r0x04, W
004C 6E00      04754         MOVWF   r0x06
004E 6A00      04755         CLRF    r0x07
0050 0E00      04756         MOVLW   UPPER(_FootButtonPin)
0052 2200      04757         ADDWFC  r0x07, F
0054 C000 FFF6 04758         MOVFF   r0x05, TBLPTRL
0058 C000 FFF7 04759         MOVFF   r0x06, TBLPTRH
005C C000 FFF8 04760         MOVFF   r0x07, TBLPTRU
0060 0009      04761         TBLRD*+ 
0062 CFF5 F000 04762         MOVFF   TABLAT, r0x05
0066 5000      04763         MOVF    r0x05, W
0068 1800      04764         XORWF   r0x00, W
006A E100      04765         BNZ     _00179_DS_
               04766 ;       .line   234; main.c     return i+1;
006C 5000      04767         MOVF    r0x01, W
006E 6E00      04768         MOVWF   r0x05
0070 2A00      04769         INCF    r0x05, F
0072 5000      04770         MOVF    r0x05, W
0074 D000      04771         BRA     _00181_DS_
0076           04772 _00179_DS_:
               04773 ;       .line   230; main.c     for ( i=0; i<MAX_FOOTSWITCHES_NB; i++ )
0076 2A00      04774         INCF    r0x03, F
0078 B0D8      04775         BTFSC   STATUS, 0
007A 2A00      04776         INCF    r0x04, F
007C C000 F000 04777         MOVFF   r0x03, r0x01
0080 C000 F000 04778         MOVFF   r0x04, r0x02
0084 D000      04779         BRA     _00177_DS_
0086           04780 _00180_DS_:
               04781 ;       .line   237; main.c     return 0;
0086 6AE8      04782         CLRF    WREG
0088           04783 _00181_DS_:
0088 CFEC F000 04784         MOVFF   PREINC1, r0x07
008C CFEC F000 04785         MOVFF   PREINC1, r0x06
0090 CFEC F000 04786         MOVFF   PREINC1, r0x05
0094 CFEC F000 04787         MOVFF   PREINC1, r0x04
0098 CFEC F000 04788         MOVFF   PREINC1, r0x03
009C CFEC F000 04789         MOVFF   PREINC1, r0x02
00A0 CFEC F000 04790         MOVFF   PREINC1, r0x01
00A4 CFEC F000 04791         MOVFF   PREINC1, r0x00
00A8 CFEC FFD9 04792         MOVFF   PREINC1, FSR2L
00AC 0012      04793         RETURN  
               04794 
               04795 ; ; Starting pCode block
               04796 S_main__DoRelay code
0000           04797 _DoRelay:
               04798 ;       .line   176; main.c     void DoRelay(unsigned char relay_nb)
0000 CFD9 FFED 04799         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 04800         MOVFF   FSR1L, FSR2L
0008 C000 FFED 04801         MOVFF   r0x00, POSTDEC1
000C C000 FFED 04802         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 04803         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 04804         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 04805         MOVFF   r0x04, POSTDEC1
001C C000 FFED 04806         MOVFF   r0x05, POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFED 04807         MOVFF   r0x06, POSTDEC1
0024 0E02      04808         MOVLW   0x02
0026 CFDB F000 04809         MOVFF   PLUSW2, r0x00
               04810 ;       .line   178; main.c     unsigned char Found = 0;
002A 6A00      04811         CLRF    r0x01
               04812 ;       .line   181; main.c     if ( RelayMode[relay_nb] == Free )
002C 0E00      04813         MOVLW   LOW(_RelayMode)
002E 2400      04814         ADDWF   r0x00, W
0030 6E00      04815         MOVWF   r0x02
0032 6A00      04816         CLRF    r0x03
0034 0E00      04817         MOVLW   HIGH(_RelayMode)
0036 2200      04818         ADDWFC  r0x03, F
0038 C000 FFE1 04819         MOVFF   r0x02, FSR0L
003C C000 FFE2 04820         MOVFF   r0x03, FSR0H
0040 CFE7 F000 04821         MOVFF   INDF0, r0x02
0044 5000      04822         MOVF    r0x02, W
0046 E100      04823         BNZ     _00145_DS_
               04824 ;       .line   184; main.c     toggle_dout(relay_nb);
0048 5000      04825         MOVF    r0x00, W
004A 6EED      04826         MOVWF   POSTDEC1
004C EC00 F000 04827         CALL    _toggle_dout
0050 2AE9      04828         INCF    FSR1L, F
0052 D000      04829         BRA     _00151_DS_
0054           04830 _00145_DS_:
               04831 ;       .line   186; main.c     else if ( RelayMode[relay_nb] == Radio )
0054 5000      04832         MOVF    r0x02, W
0056 0A01      04833         XORLW   0x01
0058 E000      04834         BZ      _00163_DS_
005A D000      04835         BRA     _00151_DS_
005C           04836 _00163_DS_:
               04837 ;       .line   188; main.c     if ( RelayState[relay_nb] == Active )
005C 0E00      04838         MOVLW   LOW(_RelayState)
005E 2400      04839         ADDWF   r0x00, W
0060 6E00      04840         MOVWF   r0x02
0062 6A00      04841         CLRF    r0x03
0064 0E00      04842         MOVLW   HIGH(_RelayState)
0066 2200      04843         ADDWFC  r0x03, F
0068 C000 FFE1 04844         MOVFF   r0x02, FSR0L
006C C000 FFE2 04845         MOVFF   r0x03, FSR0H
0070 CFE7 F000 04846         MOVFF   INDF0, r0x02
0074 5000      04847         MOVF    r0x02, W
0076 0A01      04848         XORLW   0x01
0078 E100      04849         BNZ     _00159_DS_
               04850 ;       .line   191; main.c     toggle_dout(relay_nb);
007A 5000      04851         MOVF    r0x00, W
007C 6EED      04852         MOVWF   POSTDEC1
007E EC00 F000 04853         CALL    _toggle_dout
0082 2AE9      04854         INCF    FSR1L, F
0084 D000      04855         BRA     _00151_DS_
0086           04856 _00159_DS_:
               04857 ;       .line   195; main.c     for ( i=0; i<MAX_RELAYS_NB; i++ )
0086 6A00      04858         CLRF    r0x02
0088 6A00      04859         CLRF    r0x03
008A           04860 _00147_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A 0E00      04861         MOVLW   0x00
008C 5C00      04862         SUBWF   r0x03, W
008E E100      04863         BNZ     _00166_DS_
0090 0E08      04864         MOVLW   0x08
0092 5C00      04865         SUBWF   r0x02, W
0094           04866 _00166_DS_:
0094 B0D8      04867         BTFSC   STATUS, 0
0096 D000      04868         BRA     _00150_DS_
               04869 ;       .line   197; main.c     if ( (RelayMode[i] == Radio) && (RelayState[i] == Active) )
0098 0E00      04870         MOVLW   LOW(_RelayMode)
009A 2400      04871         ADDWF   r0x02, W
009C 6E00      04872         MOVWF   r0x04
009E 0E00      04873         MOVLW   HIGH(_RelayMode)
00A0 2000      04874         ADDWFC  r0x03, W
00A2 6E00      04875         MOVWF   r0x05
00A4 C000 FFE1 04876         MOVFF   r0x04, FSR0L
00A8 C000 FFE2 04877         MOVFF   r0x05, FSR0H
00AC CFE7 F000 04878         MOVFF   INDF0, r0x04
00B0 5000      04879         MOVF    r0x04, W
00B2 0A01      04880         XORLW   0x01
00B4 E000      04881         BZ      _00168_DS_
00B6 D000      04882         BRA     _00149_DS_
00B8           04883 _00168_DS_:
00B8 0E00      04884         MOVLW   LOW(_RelayState)
00BA 2400      04885         ADDWF   r0x02, W
00BC 6E00      04886         MOVWF   r0x04
00BE 0E00      04887         MOVLW   HIGH(_RelayState)
00C0 2000      04888         ADDWFC  r0x03, W
00C2 6E00      04889         MOVWF   r0x05
00C4 C000 FFE1 04890         MOVFF   r0x04, FSR0L
00C8 C000 FFE2 04891         MOVFF   r0x05, FSR0H
00CC CFE7 F000 04892         MOVFF   INDF0, r0x04
00D0 5000      04893         MOVF    r0x04, W
00D2 0A01      04894         XORLW   0x01
00D4 E000      04895         BZ      _00170_DS_
00D6 D000      04896         BRA     _00149_DS_
00D8           04897 _00170_DS_:
               04898 ;       .line   201; main.c     MIOS_DOUT_PinSet0(RelayLedPin[i]);              
00D8 0E00      04899         MOVLW   LOW(_RelayLedPin)
00DA 2400      04900         ADDWF   r0x02, W
00DC 6E00      04901         MOVWF   r0x04
00DE 0E00      04902         MOVLW   HIGH(_RelayLedPin)
00E0 2000      04903         ADDWFC  r0x03, W
00E2 6E00      04904         MOVWF   r0x05
00E4 6A00      04905         CLRF    r0x06
00E6 0E00      04906         MOVLW   UPPER(_RelayLedPin)
00E8 2200      04907         ADDWFC  r0x06, F
00EA C000 FFF6 04908         MOVFF   r0x04, TBLPTRL
00EE C000 FFF7 04909         MOVFF   r0x05, TBLPTRH
00F2 C000 FFF8 04910         MOVFF   r0x06, TBLPTRU
00F6 0009      04911         TBLRD*+ 
00F8 CFF5 F000 04912         MOVFF   TABLAT, r0x04
00FC 5000      04913         MOVF    r0x04, W
00FE EC00 F000 04914         CALL    _MIOS_DOUT_PinSet0
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04915 ;       .line   203; main.c     MIOS_DOUT_PinSet1(RelayPin[relay_nb]);
0102 0E00      04916         MOVLW   LOW(_RelayPin)
0104 2400      04917         ADDWF   r0x00, W
0106 6E00      04918         MOVWF   r0x04
0108 6A00      04919         CLRF    r0x05
010A 0E00      04920         MOVLW   HIGH(_RelayPin)
010C 2200      04921         ADDWFC  r0x05, F
010E 6A00      04922         CLRF    r0x06
0110 0E00      04923         MOVLW   UPPER(_RelayPin)
0112 2200      04924         ADDWFC  r0x06, F
0114 C000 FFF6 04925         MOVFF   r0x04, TBLPTRL
0118 C000 FFF7 04926         MOVFF   r0x05, TBLPTRH
011C C000 FFF8 04927         MOVFF   r0x06, TBLPTRU
0120 0009      04928         TBLRD*+ 
0122 CFF5 F000 04929         MOVFF   TABLAT, r0x04
0126 5000      04930         MOVF    r0x04, W
0128 EC00 F000 04931         CALL    _MIOS_DOUT_PinSet1
               04932 ;       .line   204; main.c     MIOS_Delay(200);
012C 0EC8      04933         MOVLW   0xc8
012E EC00 F000 04934         CALL    _MIOS_Delay
               04935 ;       .line   205; main.c     MIOS_DOUT_PinSet0(RelayPin[relay_nb]);                  
0132 0E00      04936         MOVLW   LOW(_RelayPin)
0134 2400      04937         ADDWF   r0x00, W
0136 6E00      04938         MOVWF   r0x04
0138 6A00      04939         CLRF    r0x05
013A 0E00      04940         MOVLW   HIGH(_RelayPin)
013C 2200      04941         ADDWFC  r0x05, F
013E 6A00      04942         CLRF    r0x06
0140 0E00      04943         MOVLW   UPPER(_RelayPin)
0142 2200      04944         ADDWFC  r0x06, F
0144 C000 FFF6 04945         MOVFF   r0x04, TBLPTRL
0148 C000 FFF7 04946         MOVFF   r0x05, TBLPTRH
014C C000 FFF8 04947         MOVFF   r0x06, TBLPTRU
0150 0009      04948         TBLRD*+ 
0152 CFF5 F000 04949         MOVFF   TABLAT, r0x04
0156 5000      04950         MOVF    r0x04, W
0158 EC00 F000 04951         CALL    _MIOS_DOUT_PinSet0
               04952 ;       .line   207; main.c     MIOS_DOUT_PinSet1(RelayLedPin[relay_nb]);               
015C 0E00      04953         MOVLW   LOW(_RelayLedPin)
015E 2400      04954         ADDWF   r0x00, W
0160 6E00      04955         MOVWF   r0x04
0162 6A00      04956         CLRF    r0x05
0164 0E00      04957         MOVLW   HIGH(_RelayLedPin)
0166 2200      04958         ADDWFC  r0x05, F
0168 6A00      04959         CLRF    r0x06
016A 0E00      04960         MOVLW   UPPER(_RelayLedPin)
016C 2200      04961         ADDWFC  r0x06, F
016E C000 FFF6 04962         MOVFF   r0x04, TBLPTRL
0172 C000 FFF7 04963         MOVFF   r0x05, TBLPTRH
0176 C000 FFF8 04964         MOVFF   r0x06, TBLPTRU
017A 0009      04965         TBLRD*+ 
017C CFF5 F000 04966         MOVFF   TABLAT, r0x04
0180 5000      04967         MOVF    r0x04, W
0182 EC00 F000 04968         CALL    _MIOS_DOUT_PinSet1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               04969 ;       .line   208; main.c     Found = 1;
0186 0E01      04970         MOVLW   0x01
0188 6E00      04971         MOVWF   r0x01
               04972 ;       .line   210; main.c     RelayState[i] = Inactive;
018A 0E00      04973         MOVLW   LOW(_RelayState)
018C 2400      04974         ADDWF   r0x02, W
018E 6E00      04975         MOVWF   r0x04
0190 0E00      04976         MOVLW   HIGH(_RelayState)
0192 2000      04977         ADDWFC  r0x03, W
0194 6E00      04978         MOVWF   r0x05
0196 C000 FFE1 04979         MOVFF   r0x04, FSR0L
019A C000 FFE2 04980         MOVFF   r0x05, FSR0H
019E 0E00      04981         MOVLW   0x00
01A0 6EE7      04982         MOVWF   INDF0
               04983 ;       .line   211; main.c     RelayState[relay_nb] = Active;
01A2 0E00      04984         MOVLW   LOW(_RelayState)
01A4 2400      04985         ADDWF   r0x00, W
01A6 6E00      04986         MOVWF   r0x04
01A8 6A00      04987         CLRF    r0x05
01AA 0E00      04988         MOVLW   HIGH(_RelayState)
01AC 2200      04989         ADDWFC  r0x05, F
01AE C000 FFE1 04990         MOVFF   r0x04, FSR0L
01B2 C000 FFE2 04991         MOVFF   r0x05, FSR0H
01B6 0E01      04992         MOVLW   0x01
01B8 6EE7      04993         MOVWF   INDF0
01BA           04994 _00149_DS_:
               04995 ;       .line   195; main.c     for ( i=0; i<MAX_RELAYS_NB; i++ )
01BA 2A00      04996         INCF    r0x02, F
01BC B0D8      04997         BTFSC   STATUS, 0
01BE 2A00      04998         INCF    r0x03, F
01C0 D000      04999         BRA     _00147_DS_
01C2           05000 _00150_DS_:
               05001 ;       .line   214; main.c     if ( Found == 0 )
01C2 5000      05002         MOVF    r0x01, W
01C4 E100      05003         BNZ     _00151_DS_
               05004 ;       .line   217; main.c     toggle_dout(relay_nb);
01C6 5000      05005         MOVF    r0x00, W
01C8 6EED      05006         MOVWF   POSTDEC1
01CA EC00 F000 05007         CALL    _toggle_dout
01CE 2AE9      05008         INCF    FSR1L, F
01D0           05009 _00151_DS_:
01D0 CFEC F000 05010         MOVFF   PREINC1, r0x06
01D4 CFEC F000 05011         MOVFF   PREINC1, r0x05
01D8 CFEC F000 05012         MOVFF   PREINC1, r0x04
01DC CFEC F000 05013         MOVFF   PREINC1, r0x03
01E0 CFEC F000 05014         MOVFF   PREINC1, r0x02
01E4 CFEC F000 05015         MOVFF   PREINC1, r0x01
01E8 CFEC F000 05016         MOVFF   PREINC1, r0x00
01EC CFEC FFD9 05017         MOVFF   PREINC1, FSR2L
01F0 0012      05018         RETURN  
               05019 
               05020 ; ; Starting pCode block
               05021 S_main__toggle_dout     code
0000           05022 _toggle_dout:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               05023 ;       .line   115; main.c     void toggle_dout(unsigned char relay_nb)
0000 CFD9 FFED 05024         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 05025         MOVFF   FSR1L, FSR2L
0008 C000 FFED 05026         MOVFF   r0x00, POSTDEC1
000C C000 FFED 05027         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 05028         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 05029         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 05030         MOVFF   r0x04, POSTDEC1
001C 0E02      05031         MOVLW   0x02
001E CFDB F000 05032         MOVFF   PLUSW2, r0x00
               05033 ;       .line   117; main.c     if ( RelayType[relay_nb] == Toggle )
0022 0E00      05034         MOVLW   LOW(_RelayType)
0024 2400      05035         ADDWF   r0x00, W
0026 6E00      05036         MOVWF   r0x01
0028 6A00      05037         CLRF    r0x02
002A 0E00      05038         MOVLW   HIGH(_RelayType)
002C 2200      05039         ADDWFC  r0x02, F
002E C000 FFE1 05040         MOVFF   r0x01, FSR0L
0032 C000 FFE2 05041         MOVFF   r0x02, FSR0H
0036 CFE7 F000 05042         MOVFF   INDF0, r0x01
003A 5000      05043         MOVF    r0x01, W
003C A4D8      05044         BTFSS   STATUS, 2
003E D000      05045         BRA     _00111_DS_
               05046 ;       .line   120; main.c     DEBUG_MSG_SendHeader();
0040 EC00 F000 05047         CALL    _DEBUG_MSG_SendHeader
               05048 ;       .line   121; main.c     DEBUG_MSG_SendCString("Relay");
0044 0E00      05049         MOVLW   UPPER(__str_0)
0046 6EED      05050         MOVWF   POSTDEC1
0048 0E00      05051         MOVLW   HIGH(__str_0)
004A 6EED      05052         MOVWF   POSTDEC1
004C 0E00      05053         MOVLW   LOW(__str_0)
004E EC00 F000 05054         CALL    _DEBUG_MSG_SendCString
0052 0E02      05055         MOVLW   0x02
0054 26E9      05056         ADDWF   FSR1L, F
               05057 ;       .line   122; main.c     DEBUG_MSG_SendBCD3(relay_nb);
0056 5000      05058         MOVF    r0x00, W
0058 EC00 F000 05059         CALL    _DEBUG_MSG_SendBCD3
               05060 ;       .line   123; main.c     DEBUG_MSG_SendCString(" original state");
005C 0E00      05061         MOVLW   UPPER(__str_1)
005E 6EED      05062         MOVWF   POSTDEC1
0060 0E00      05063         MOVLW   HIGH(__str_1)
0062 6EED      05064         MOVWF   POSTDEC1
0064 0E00      05065         MOVLW   LOW(__str_1)
0066 EC00 F000 05066         CALL    _DEBUG_MSG_SendCString
006A 0E02      05067         MOVLW   0x02
006C 26E9      05068         ADDWF   FSR1L, F
               05069 ;       .line   124; main.c     DEBUG_MSG_SendBCD3(RelayState[relay_nb]);
006E 0E00      05070         MOVLW   LOW(_RelayState)
0070 2400      05071         ADDWF   r0x00, W
0072 6E00      05072         MOVWF   r0x02
0074 6A00      05073         CLRF    r0x03
0076 0E00      05074         MOVLW   HIGH(_RelayState)
0078 2200      05075         ADDWFC  r0x03, F
007A C000 FFE1 05076         MOVFF   r0x02, FSR0L
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007E C000 FFE2 05077         MOVFF   r0x03, FSR0H
0082 CFE7 F000 05078         MOVFF   INDF0, r0x02
0086 5000      05079         MOVF    r0x02, W
0088 EC00 F000 05080         CALL    _DEBUG_MSG_SendBCD3
               05081 ;       .line   125; main.c     DEBUG_MSG_SendFooter();
008C EC00 F000 05082         CALL    _DEBUG_MSG_SendFooter
               05083 ;       .line   129; main.c     MIOS_DOUT_PinSet(RelayPin[relay_nb], RelayState[relay_nb] ? 0 : 1);
0090 0E00      05084         MOVLW   LOW(_RelayPin)
0092 2400      05085         ADDWF   r0x00, W
0094 6E00      05086         MOVWF   r0x02
0096 6A00      05087         CLRF    r0x03
0098 0E00      05088         MOVLW   HIGH(_RelayPin)
009A 2200      05089         ADDWFC  r0x03, F
009C 6A00      05090         CLRF    r0x04
009E 0E00      05091         MOVLW   UPPER(_RelayPin)
00A0 2200      05092         ADDWFC  r0x04, F
00A2 C000 FFF6 05093         MOVFF   r0x02, TBLPTRL
00A6 C000 FFF7 05094         MOVFF   r0x03, TBLPTRH
00AA C000 FFF8 05095         MOVFF   r0x04, TBLPTRU
00AE 0009      05096         TBLRD*+ 
00B0 CFF5 F000 05097         MOVFF   TABLAT, r0x02
00B4 0E00      05098         MOVLW   LOW(_RelayState)
00B6 2400      05099         ADDWF   r0x00, W
00B8 6E00      05100         MOVWF   r0x03
00BA 6A00      05101         CLRF    r0x04
00BC 0E00      05102         MOVLW   HIGH(_RelayState)
00BE 2200      05103         ADDWFC  r0x04, F
00C0 C000 FFE1 05104         MOVFF   r0x03, FSR0L
00C4 C000 FFE2 05105         MOVFF   r0x04, FSR0H
00C8 CFE7 F000 05106         MOVFF   INDF0, r0x03
00CC 5000      05107         MOVF    r0x03, W
00CE E000      05108         BZ      _00118_DS_
00D0 6A00      05109         CLRF    r0x03
00D2 D000      05110         BRA     _00119_DS_
00D4           05111 _00118_DS_:
00D4 0E01      05112         MOVLW   0x01
00D6 6E00      05113         MOVWF   r0x03
00D8           05114 _00119_DS_:
00D8 5000      05115         MOVF    r0x03, W
00DA 6EED      05116         MOVWF   POSTDEC1
00DC 5000      05117         MOVF    r0x02, W
00DE EC00 F000 05118         CALL    _MIOS_DOUT_PinSet
00E2 2AE9      05119         INCF    FSR1L, F
               05120 ;       .line   131; main.c     MIOS_DOUT_PinSet(RelayLedPin[relay_nb], RelayState[relay_nb] ? 0 : 1);
00E4 0E00      05121         MOVLW   LOW(_RelayLedPin)
00E6 2400      05122         ADDWF   r0x00, W
00E8 6E00      05123         MOVWF   r0x02
00EA 6A00      05124         CLRF    r0x03
00EC 0E00      05125         MOVLW   HIGH(_RelayLedPin)
00EE 2200      05126         ADDWFC  r0x03, F
00F0 6A00      05127         CLRF    r0x04
00F2 0E00      05128         MOVLW   UPPER(_RelayLedPin)
00F4 2200      05129         ADDWFC  r0x04, F
00F6 C000 FFF6 05130         MOVFF   r0x02, TBLPTRL
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FA C000 FFF7 05131         MOVFF   r0x03, TBLPTRH
00FE C000 FFF8 05132         MOVFF   r0x04, TBLPTRU
0102 0009      05133         TBLRD*+ 
0104 CFF5 F000 05134         MOVFF   TABLAT, r0x02
0108 0E00      05135         MOVLW   LOW(_RelayState)
010A 2400      05136         ADDWF   r0x00, W
010C 6E00      05137         MOVWF   r0x03
010E 6A00      05138         CLRF    r0x04
0110 0E00      05139         MOVLW   HIGH(_RelayState)
0112 2200      05140         ADDWFC  r0x04, F
0114 C000 FFE1 05141         MOVFF   r0x03, FSR0L
0118 C000 FFE2 05142         MOVFF   r0x04, FSR0H
011C CFE7 F000 05143         MOVFF   INDF0, r0x03
0120 5000      05144         MOVF    r0x03, W
0122 E000      05145         BZ      _00120_DS_
0124 6A00      05146         CLRF    r0x03
0126 D000      05147         BRA     _00121_DS_
0128           05148 _00120_DS_:
0128 0E01      05149         MOVLW   0x01
012A 6E00      05150         MOVWF   r0x03
012C           05151 _00121_DS_:
012C 5000      05152         MOVF    r0x03, W
012E 6EED      05153         MOVWF   POSTDEC1
0130 5000      05154         MOVF    r0x02, W
0132 EC00 F000 05155         CALL    _MIOS_DOUT_PinSet
0136 2AE9      05156         INCF    FSR1L, F
               05157 ;       .line   134; main.c     DEBUG_MSG_SendHeader();
0138 EC00 F000 05158         CALL    _DEBUG_MSG_SendHeader
               05159 ;       .line   135; main.c     DEBUG_MSG_SendCString("Toggled relay");
013C 0E00      05160         MOVLW   UPPER(__str_2)
013E 6EED      05161         MOVWF   POSTDEC1
0140 0E00      05162         MOVLW   HIGH(__str_2)
0142 6EED      05163         MOVWF   POSTDEC1
0144 0E00      05164         MOVLW   LOW(__str_2)
0146 EC00 F000 05165         CALL    _DEBUG_MSG_SendCString
014A 0E02      05166         MOVLW   0x02
014C 26E9      05167         ADDWF   FSR1L, F
               05168 ;       .line   136; main.c     DEBUG_MSG_SendBCD3(relay_nb);
014E 5000      05169         MOVF    r0x00, W
0150 EC00 F000 05170         CALL    _DEBUG_MSG_SendBCD3
               05171 ;       .line   137; main.c     DEBUG_MSG_SendFooter();
0154 EC00 F000 05172         CALL    _DEBUG_MSG_SendFooter
0158 D000      05173         BRA     _00112_DS_
015A           05174 _00111_DS_:
               05175 ;       .line   140; main.c     else if ( RelayType[relay_nb] == Momentary )
015A 5000      05176         MOVF    r0x01, W
015C 0A01      05177         XORLW   0x01
015E E000      05178         BZ      _00129_DS_
0160 D000      05179         BRA     _00112_DS_
0162           05180 _00129_DS_:
               05181 ;       .line   143; main.c     MIOS_DOUT_PinSet1(RelayPin[relay_nb]);
0162 0E00      05182         MOVLW   LOW(_RelayPin)
0164 2400      05183         ADDWF   r0x00, W
0166 6E00      05184         MOVWF   r0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0168 6A00      05185         CLRF    r0x02
016A 0E00      05186         MOVLW   HIGH(_RelayPin)
016C 2200      05187         ADDWFC  r0x02, F
016E 6A00      05188         CLRF    r0x03
0170 0E00      05189         MOVLW   UPPER(_RelayPin)
0172 2200      05190         ADDWFC  r0x03, F
0174 C000 FFF6 05191         MOVFF   r0x01, TBLPTRL
0178 C000 FFF7 05192         MOVFF   r0x02, TBLPTRH
017C C000 FFF8 05193         MOVFF   r0x03, TBLPTRU
0180 0009      05194         TBLRD*+ 
0182 CFF5 F000 05195         MOVFF   TABLAT, r0x01
0186 5000      05196         MOVF    r0x01, W
0188 EC00 F000 05197         CALL    _MIOS_DOUT_PinSet1
               05198 ;       .line   144; main.c     MIOS_Delay(MOMENTARY_PUSH_LENGTH);
018C 0EC8      05199         MOVLW   0xc8
018E EC00 F000 05200         CALL    _MIOS_Delay
               05201 ;       .line   145; main.c     MIOS_DOUT_PinSet0(RelayPin[relay_nb]);
0192 0E00      05202         MOVLW   LOW(_RelayPin)
0194 2400      05203         ADDWF   r0x00, W
0196 6E00      05204         MOVWF   r0x01
0198 6A00      05205         CLRF    r0x02
019A 0E00      05206         MOVLW   HIGH(_RelayPin)
019C 2200      05207         ADDWFC  r0x02, F
019E 6A00      05208         CLRF    r0x03
01A0 0E00      05209         MOVLW   UPPER(_RelayPin)
01A2 2200      05210         ADDWFC  r0x03, F
01A4 C000 FFF6 05211         MOVFF   r0x01, TBLPTRL
01A8 C000 FFF7 05212         MOVFF   r0x02, TBLPTRH
01AC C000 FFF8 05213         MOVFF   r0x03, TBLPTRU
01B0 0009      05214         TBLRD*+ 
01B2 CFF5 F000 05215         MOVFF   TABLAT, r0x01
01B6 5000      05216         MOVF    r0x01, W
01B8 EC00 F000 05217         CALL    _MIOS_DOUT_PinSet0
               05218 ;       .line   147; main.c     if ( RelayState[relay_nb] == Inactive )
01BC 0E00      05219         MOVLW   LOW(_RelayState)
01BE 2400      05220         ADDWF   r0x00, W
01C0 6E00      05221         MOVWF   r0x01
01C2 6A00      05222         CLRF    r0x02
01C4 0E00      05223         MOVLW   HIGH(_RelayState)
01C6 2200      05224         ADDWFC  r0x02, F
01C8 C000 FFE1 05225         MOVFF   r0x01, FSR0L
01CC C000 FFE2 05226         MOVFF   r0x02, FSR0H
01D0 CFE7 F000 05227         MOVFF   INDF0, r0x01
01D4 5000      05228         MOVF    r0x01, W
01D6 E100      05229         BNZ     _00106_DS_
               05230 ;       .line   148; main.c     MIOS_DOUT_PinSet1(RelayLedPin[relay_nb]);
01D8 0E00      05231         MOVLW   LOW(_RelayLedPin)
01DA 2400      05232         ADDWF   r0x00, W
01DC 6E00      05233         MOVWF   r0x01
01DE 6A00      05234         CLRF    r0x02
01E0 0E00      05235         MOVLW   HIGH(_RelayLedPin)
01E2 2200      05236         ADDWFC  r0x02, F
01E4 6A00      05237         CLRF    r0x03
01E6 0E00      05238         MOVLW   UPPER(_RelayLedPin)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01E8 2200      05239         ADDWFC  r0x03, F
01EA C000 FFF6 05240         MOVFF   r0x01, TBLPTRL
01EE C000 FFF7 05241         MOVFF   r0x02, TBLPTRH
01F2 C000 FFF8 05242         MOVFF   r0x03, TBLPTRU
01F6 0009      05243         TBLRD*+ 
01F8 CFF5 F000 05244         MOVFF   TABLAT, r0x01
01FC 5000      05245         MOVF    r0x01, W
01FE EC00 F000 05246         CALL    _MIOS_DOUT_PinSet1
0202 D000      05247         BRA     _00107_DS_
0204           05248 _00106_DS_:
               05249 ;       .line   150; main.c     MIOS_DOUT_PinSet0(RelayLedPin[relay_nb]);
0204 0E00      05250         MOVLW   LOW(_RelayLedPin)
0206 2400      05251         ADDWF   r0x00, W
0208 6E00      05252         MOVWF   r0x01
020A 6A00      05253         CLRF    r0x02
020C 0E00      05254         MOVLW   HIGH(_RelayLedPin)
020E 2200      05255         ADDWFC  r0x02, F
0210 6A00      05256         CLRF    r0x03
0212 0E00      05257         MOVLW   UPPER(_RelayLedPin)
0214 2200      05258         ADDWFC  r0x03, F
0216 C000 FFF6 05259         MOVFF   r0x01, TBLPTRL
021A C000 FFF7 05260         MOVFF   r0x02, TBLPTRH
021E C000 FFF8 05261         MOVFF   r0x03, TBLPTRU
0222 0009      05262         TBLRD*+ 
0224 CFF5 F000 05263         MOVFF   TABLAT, r0x01
0228 5000      05264         MOVF    r0x01, W
022A EC00 F000 05265         CALL    _MIOS_DOUT_PinSet0
022E           05266 _00107_DS_:
               05267 ;       .line   153; main.c     DEBUG_MSG_SendHeader();
022E EC00 F000 05268         CALL    _DEBUG_MSG_SendHeader
               05269 ;       .line   154; main.c     DEBUG_MSG_SendCString("Pushed relay");
0232 0E00      05270         MOVLW   UPPER(__str_3)
0234 6EED      05271         MOVWF   POSTDEC1
0236 0E00      05272         MOVLW   HIGH(__str_3)
0238 6EED      05273         MOVWF   POSTDEC1
023A 0E00      05274         MOVLW   LOW(__str_3)
023C EC00 F000 05275         CALL    _DEBUG_MSG_SendCString
0240 0E02      05276         MOVLW   0x02
0242 26E9      05277         ADDWF   FSR1L, F
               05278 ;       .line   155; main.c     DEBUG_MSG_SendBCD3(relay_nb);
0244 5000      05279         MOVF    r0x00, W
0246 EC00 F000 05280         CALL    _DEBUG_MSG_SendBCD3
               05281 ;       .line   156; main.c     DEBUG_MSG_SendFooter();
024A EC00 F000 05282         CALL    _DEBUG_MSG_SendFooter
024E           05283 _00112_DS_:
               05284 ;       .line   161; main.c     if ( RelayState[relay_nb] )
024E 0E00      05285         MOVLW   LOW(_RelayState)
0250 2400      05286         ADDWF   r0x00, W
0252 6E00      05287         MOVWF   r0x01
0254 6A00      05288         CLRF    r0x02
0256 0E00      05289         MOVLW   HIGH(_RelayState)
0258 2200      05290         ADDWFC  r0x02, F
025A C000 FFE1 05291         MOVFF   r0x01, FSR0L
025E C000 FFE2 05292         MOVFF   r0x02, FSR0H
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0262 CFE7 F000 05293         MOVFF   INDF0, r0x03
0266 5000      05294         MOVF    r0x03, W
0268 E000      05295         BZ      _00114_DS_
               05296 ;       .line   162; main.c     { RelayState[relay_nb] = 0;     }
026A C000 FFE1 05297         MOVFF   r0x01, FSR0L
026E C000 FFE2 05298         MOVFF   r0x02, FSR0H
0272 0E00      05299         MOVLW   0x00
0274 6EE7      05300         MOVWF   INDF0
0276 D000      05301         BRA     _00115_DS_
0278           05302 _00114_DS_:
               05303 ;       .line   164; main.c     { RelayState[relay_nb] = 1; }
0278 C000 FFE1 05304         MOVFF   r0x01, FSR0L
027C C000 FFE2 05305         MOVFF   r0x02, FSR0H
0280 0E01      05306         MOVLW   0x01
0282 6EE7      05307         MOVWF   INDF0
0284           05308 _00115_DS_:
               05309 ;       .line   167; main.c     DEBUG_MSG_SendHeader();
0284 EC00 F000 05310         CALL    _DEBUG_MSG_SendHeader
               05311 ;       .line   168; main.c     DEBUG_MSG_SendCString(" to state");
0288 0E00      05312         MOVLW   UPPER(__str_4)
028A 6EED      05313         MOVWF   POSTDEC1
028C 0E00      05314         MOVLW   HIGH(__str_4)
028E 6EED      05315         MOVWF   POSTDEC1
0290 0E00      05316         MOVLW   LOW(__str_4)
0292 EC00 F000 05317         CALL    _DEBUG_MSG_SendCString
0296 0E02      05318         MOVLW   0x02
0298 26E9      05319         ADDWF   FSR1L, F
               05320 ;       .line   169; main.c     DEBUG_MSG_SendBCD3(RelayState[relay_nb]);
029A 6A00      05321         CLRF    r0x01
029C 0E00      05322         MOVLW   LOW(_RelayState)
029E 2600      05323         ADDWF   r0x00, F
02A0 0E00      05324         MOVLW   HIGH(_RelayState)
02A2 2200      05325         ADDWFC  r0x01, F
02A4 C000 FFE1 05326         MOVFF   r0x00, FSR0L
02A8 C000 FFE2 05327         MOVFF   r0x01, FSR0H
02AC CFE7 F000 05328         MOVFF   INDF0, r0x00
02B0 5000      05329         MOVF    r0x00, W
02B2 EC00 F000 05330         CALL    _DEBUG_MSG_SendBCD3
               05331 ;       .line   170; main.c     DEBUG_MSG_SendFooter();
02B6 EC00 F000 05332         CALL    _DEBUG_MSG_SendFooter
02BA CFEC F000 05333         MOVFF   PREINC1, r0x04
02BE CFEC F000 05334         MOVFF   PREINC1, r0x03
02C2 CFEC F000 05335         MOVFF   PREINC1, r0x02
02C6 CFEC F000 05336         MOVFF   PREINC1, r0x01
02CA CFEC F000 05337         MOVFF   PREINC1, r0x00
02CE CFEC FFD9 05338         MOVFF   PREINC1, FSR2L
02D2 0012      05339         RETURN  
               05340 
               05341 ; ; Starting pCode block for Ival
               05342         code
0000           05343 _RelayLedPin:
0000 0100 0302 05344         DB      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07
0004 0504 0706
               05345 ; ; Starting pCode block for Ival
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008           05346 _RelayPin:
0008 0908 0B0A 05347         DB      0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
000C 0D0C 0F0E
               05348 ; ; Starting pCode block for Ival
0010           05349 _FootLedPin:
0010 1617 1415 05350         DB      0x17, 0x16, 0x15, 0x14
               05351 ; ; Starting pCode block for Ival
0014           05352 _ButtonPin:
0014 0100 0302 05353         DB      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07
0018 0504 0706
               05354 ; ; Starting pCode block for Ival
001C           05355 _MenuButtonPin:
001C 0A0B 0908 05356         DB      0x0b, 0x0a, 0x08, 0x09
               05357 ; ; Starting pCode block for Ival
0020           05358 _FootButtonPin:
0020 0F0E 0C0D 05359         DB      0x0e, 0x0f, 0x0d, 0x0c
               05360 ; ; Starting pCode block
0024           05361 __str_0:
0024 6552 616C 05362         DB      0x52, 0x65, 0x6c, 0x61, 0x79, 0x00
0028 0079
               05363 ; ; Starting pCode block
002A           05364 __str_1:
002A 6F20 6972 05365         DB      0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x20, 0x73, 0x74
002E 6967 616E
0032 206C 7473
0036 7461 0065 05366         DB      0x61, 0x74, 0x65, 0x00
               05367 ; ; Starting pCode block
003A           05368 __str_2:
003A 6F54 6767 05369         DB      0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64, 0x20, 0x72, 0x65, 0x6c, 0x61
003E 656C 2064
0042 6572 616C
0046 0079      05370         DB      0x79, 0x00
               05371 ; ; Starting pCode block
0048           05372 __str_3:
0048 7550 6873 05373         DB      0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x79
004C 6465 7220
0050 6C65 7961
0054 0000      05374         DB      0x00
               05375 ; ; Starting pCode block
0056           05376 __str_4:
0056 7420 206F 05377         DB      0x20, 0x74, 0x6f, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x00
005A 7473 7461
005E 0065
               05378 ; ; Starting pCode block
0060           05379 __str_5:
0060 6553 2074 05380         DB      0x53, 0x65, 0x74, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x70
0064 6341 6974
0068 6576 7020
006C 6572 6573 05381         DB      0x72, 0x65, 0x73, 0x65, 0x74, 0x00
0070 0074
               05382 ; ; Starting pCode block
0072           05383 __str_6:
0072 2A2A 4320 05384         DB      0x2a, 0x2a, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x6f
0076 6168 676E
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A 2065 6F74
007E 2020 2A2A 05385         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
0082 0000
               05386 ; ; Starting pCode block
0084           05387 __str_7:
0084 2A2A 5020 05388         DB      0x2a, 0x2a, 0x20, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x20, 0x20
0088 6572 6573
008C 2074 2020
0090 2020 2A2A 05389         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
0094 0000
               05390 ; ; Starting pCode block
0096           05391 __str_8:
0096 6F46 746F 05392         DB      0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x4c
009A 7773 7469
009E 6863 4C20
00A2 6465 2073 05393         DB      0x65, 0x64, 0x73, 0x20, 0x4f, 0x66, 0x66, 0x00
00A6 664F 0066
               05394 ; ; Starting pCode block
00AA           05395 __str_9:
00AA 6F46 746F 05396         DB      0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x4c
00AE 7773 7469
00B2 6863 4C20
00B6 6465 203A 05397         DB      0x65, 0x64, 0x3a, 0x20, 0x00
00BA 0000
               05398 ; ; Starting pCode block
00BC           05399 __str_10:
00BC 4F20 006E 05400         DB      0x20, 0x4f, 0x6e, 0x00
               05401 ; ; Starting pCode block
00C0           05402 __str_11:
00C0 6552 6F4C 05403         DB      0x52, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x63
00C4 6461 6E69
00C8 2067 6361
00CC 6974 6576 05404         DB      0x74, 0x69, 0x76, 0x65, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x00
00D0 7020 6572
00D4 6573 0074
               05405 ; ; Starting pCode block
00D8           05406 __str_12:
00D8 4F4E 2054 05407         DB      0x4e, 0x4f, 0x54, 0x20, 0x52, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e
00DC 6552 6F4C
00E0 6461 6E69
00E4 2067 6361 05408         DB      0x67, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x70, 0x72, 0x65
00E8 6974 6576
00EC 7020 6572
00F0 6573 0074 05409         DB      0x73, 0x65, 0x74, 0x00
               05410 ; ; Starting pCode block
00F4           05411 __str_13:
00F4 6F4C 6461 05412         DB      0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x65, 0x73
00F8 6E69 2067
00FC 7270 7365
0100 7465 0020 05413         DB      0x65, 0x74, 0x20, 0x00
               05414 ; ; Starting pCode block
0104           05415 __str_14:
0104 6944 6373 05416         DB      0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x20, 0x6c, 0x6f
0108 7261 6564
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 2064 6F6C
0110 6461 6E69 05417         DB      0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74
0114 2067 7270
0118 7365 7465
011C 0020      05418         DB      0x20, 0x00
               05419 ; ; Starting pCode block
011E           05420 __str_15:
011E 6552 616C 05421         DB      0x52, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65
0122 7379 7320
0126 6174 6574
012A 6220 7479 05422         DB      0x20, 0x62, 0x79, 0x74, 0x65, 0x20, 0x3a, 0x20, 0x00
012E 2065 203A
0132 0000
               05423 ; ; Starting pCode block
0134           05424 __str_16:
0134 6553 646E 05425         DB      0x53, 0x65, 0x6e, 0x64, 0x20, 0x6d, 0x69, 0x64, 0x69, 0x20, 0x3f, 0x00
0138 6D20 6469
013C 2069 003F
               05426 ; ; Starting pCode block
0140           05427 __str_17:
0140 6D20 6469 05428         DB      0x20, 0x6d, 0x69, 0x64, 0x69, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67
0144 2069 656D
0148 7373 6761
014C 2065 003A 05429         DB      0x65, 0x20, 0x3a, 0x00
               05430 ; ; Starting pCode block
0150           05431 __str_18:
0150 6F44 276E 05432         DB      0x44, 0x6f, 0x6e, 0x27, 0x74, 0x20, 0x70, 0x75, 0x73, 0x68, 0x20, 0x61
0154 2074 7570
0158 6873 6120
015C 206E 6C61 05433         DB      0x6e, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x61, 0x63
0160 6572 6461
0164 2079 6361
0168 6974 6576 05434         DB      0x74, 0x69, 0x76, 0x65, 0x20, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x20, 0x72
016C 7220 6461
0170 6F69 7220
0174 6C65 7961 05435         DB      0x65, 0x6c, 0x61, 0x79, 0x00
0178 0000
               05436 ; ; Starting pCode block
017A           05437 __str_19:
017A 6143 6E6E 05438         DB      0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x53, 0x61, 0x76, 0x65, 0x20
017E 746F 5320
0182 7661 2065
0186 6F74 0000 05439         DB      0x74, 0x6f, 0x00
               05440 ; ; Starting pCode block
018A           05441 __str_20:
018A 7250 7365 05442         DB      0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x30, 0x00
018E 7465 3020
0192 0000
               05443 ; ; Starting pCode block
0194           05444 __str_21:
0194 6944 6373 05445         DB      0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x20, 0x73, 0x61
0198 7261 6564
019C 2064 6173
01A0 6976 676E 05446         DB      0x76, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01A4 7020 6572
01A8 6573 2074
01AC 0000      05447         DB      0x00
               05448 ; ; Starting pCode block
01AE           05449 __str_22:
01AE 2A2A 2020 05450         DB      0x2a, 0x2a, 0x20, 0x20, 0x53, 0x41, 0x56, 0x45, 0x44, 0x20, 0x74, 0x6f
01B2 4153 4556
01B6 2044 6F74
01BA 2020 2A2A 05451         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
01BE 0000
               05452 ; ; Starting pCode block
01C0           05453 __str_23:
01C0 6749 6F6E 05454         DB      0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x61, 0x6c, 0x72
01C4 6572 2C64
01C8 6120 726C
01CC 6165 7964 05455         DB      0x65, 0x61, 0x64, 0x79, 0x20, 0x61, 0x74, 0x20, 0x68, 0x69, 0x67, 0x68
01D0 6120 2074
01D4 6968 6867
01D8 7365 2074 05456         DB      0x65, 0x73, 0x74, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x00
01DC 7270 7365
01E0 7465 0000
               05457 ; ; Starting pCode block
01E4           05458 __str_24:
01E4 6749 6F6E 05459         DB      0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x61, 0x6c, 0x72
01E8 6572 2C64
01EC 6120 726C
01F0 6165 7964 05460         DB      0x65, 0x61, 0x64, 0x79, 0x20, 0x61, 0x74, 0x20, 0x6c, 0x6f, 0x77, 0x65
01F4 6120 2074
01F8 6F6C 6577
01FC 7473 7020 05461         DB      0x73, 0x74, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x00
0200 6572 6573
0204 0074
               05462 ; ; Starting pCode block
0206           05463 __str_25:
0206 6146 7463 05464         DB      0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x52, 0x65, 0x73, 0x65
020A 726F 2079
020E 6552 6573
0212 0074      05465         DB      0x74, 0x00
               05466 ; ; Starting pCode block
0214           05467 __str_26:
0214 5453 5241 05468         DB      0x53, 0x54, 0x41, 0x52, 0x54, 0x55, 0x50, 0x20, 0x50, 0x52, 0x45, 0x53
0218 5554 2050
021C 5250 5345
0220 5445 0000 05469         DB      0x45, 0x54, 0x00
               05470 ; ; Starting pCode block
0224           05471 __str_27:
0224 7041 6C70 05472         DB      0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20
0228 6369 7461
022C 6F69 206E
0230 6572 6461 05473         DB      0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x00
0234 2E79 0000
               05474 ; ; Starting pCode block
0238           05475 __str_28:
0238 4153 4556 05476         DB      0x53, 0x41, 0x56, 0x45, 0x00
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
023C 0000
               05477 ; ; Starting pCode block
023E           05478 __str_29:
023E 4142 4B43 05479         DB      0x42, 0x41, 0x43, 0x4b, 0x00
0242 0000
               05480 ; ; Starting pCode block
0244           05481 __str_30:
0244 6F74 7020 05482         DB      0x74, 0x6f, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x00
0248 6572 6573
024C 2074 0000
               05483 ; ; Starting pCode block
0250           05484 __str_31:
0250 003E      05485         DB      0x3e, 0x00
               05486 ; ; Starting pCode block
0252           05487 __str_32:
0252 0051      05488         DB      0x51, 0x00
               05489 ; ; Starting pCode block
0254           05490 __str_33:
0254 2020 6F46 05491         DB      0x20, 0x20, 0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68
0258 746F 7773
025C 7469 6863
0260 3120 2020 05492         DB      0x20, 0x31, 0x20, 0x20, 0x00
0264 0000
               05493 ; ; Starting pCode block
0266           05494 __str_34:
0266 2020 7250 05495         DB      0x20, 0x20, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x20, 0x20, 0x20
026A 7365 7465
026E 2020 2020
0272 2020 2020 05496         DB      0x20, 0x20, 0x20, 0x20, 0x00
0276 0000
               05497 ; ; Starting pCode block
0278           05498 __str_35:
0278 2A2A 2020 05499         DB      0x2a, 0x2a, 0x20, 0x20, 0x20, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67
027C 4E20 746F
0280 6968 676E
0284 2020 2A2A 05500         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
0288 0000
               05501 ; ; Starting pCode block
028A           05502 __str_36:
028A 2A2A 2020 05503         DB      0x2a, 0x2a, 0x20, 0x20, 0x20, 0x20, 0x53, 0x61, 0x76, 0x65, 0x64, 0x20
028E 2020 6153
0292 6576 2064
0296 2020 2A2A 05504         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
029A 0000
               05505 ; ; Starting pCode block
029C           05506 __str_37:
029C 2020 6F46 05507         DB      0x20, 0x20, 0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68
02A0 746F 7773
02A4 7469 6863
02A8 3220 2020 05508         DB      0x20, 0x32, 0x20, 0x20, 0x00
02AC 0000
               05509 ; ; Starting pCode block
02AE           05510 __str_38:
02AE 2020 6F46 05511         DB      0x20, 0x20, 0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02B2 746F 7773
02B6 7469 6863
02BA 3320 2020 05512         DB      0x20, 0x33, 0x20, 0x20, 0x00
02BE 0000
               05513 ; ; Starting pCode block
02C0           05514 __str_39:
02C0 2020 6F46 05515         DB      0x20, 0x20, 0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68
02C4 746F 7773
02C8 7469 6863
02CC 3420 2020 05516         DB      0x20, 0x34, 0x20, 0x20, 0x00
02D0 0000
               05517 ; ; Starting pCode block
02D2           05518 __str_40:
02D2 2020 494D 05519         DB      0x20, 0x20, 0x4d, 0x49, 0x44, 0x49, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e
02D6 4944 6320
02DA 6168 6E6E
02DE 6C65 2020 05520         DB      0x65, 0x6c, 0x20, 0x20, 0x00
02E2 0000
               05521 ; ; Starting pCode block
02E4           05522 __str_41:
02E4 2020 2020 05523         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
02E8 2020 2020
02EC 2020 2020
02F0 2020 2020 05524         DB      0x20, 0x20, 0x20, 0x20, 0x00
02F4 0000
               05525 ; ; Starting pCode block
02F6           05526 __str_42:
02F6 5320 6174 05527         DB      0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x20, 0x50, 0x72, 0x65
02FA 7472 7075
02FE 5020 6572
0302 6573 2074 05528         DB      0x73, 0x65, 0x74, 0x20, 0x00
0306 0000
               05529 ; ; Starting pCode block
0308           05530 __str_43:
0308 2A20 202A 05531         DB      0x20, 0x2a, 0x2a, 0x20, 0x4c, 0x61, 0x73, 0x74, 0x20, 0x55, 0x73, 0x65
030C 614C 7473
0310 5520 6573
0314 2064 2A2A 05532         DB      0x64, 0x20, 0x2a, 0x2a, 0x00
0318 0000
               05533 ; ; Starting pCode block
031A           05534 __str_44:
031A 2020 6553 05535         DB      0x20, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x4d, 0x49, 0x44, 0x49, 0x20
031E 646E 4D20
0322 4449 2049
0326 203F 2020 05536         DB      0x3f, 0x20, 0x20, 0x20, 0x00
032A 0000
               05537 ; ; Starting pCode block
032C           05538 __str_45:
032C 6559 0073 05539         DB      0x59, 0x65, 0x73, 0x00
               05540 ; ; Starting pCode block
0330           05541 __str_46:
0330 6F4E 0000 05542         DB      0x4e, 0x6f, 0x00
               05543 ; ; Starting pCode block
0334           05544 __str_47:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0334 5220 6C65 05545         DB      0x20, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x41, 0x63, 0x74, 0x69
0338 616F 2064
033C 6341 6974
0340 6576 3F20 05546         DB      0x76, 0x65, 0x20, 0x3f, 0x00
0344 0000
               05547 ; ; Starting pCode block
0346           05548 __str_48:
0346 4F20 7475 05549         DB      0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x20, 0x20, 0x74, 0x79
034A 7570 2074
034E 2020 7974
0352 6570 0020 05550         DB      0x70, 0x65, 0x20, 0x00
               05551 ; ; Starting pCode block
0356           05552 __str_49:
0356 6F4D 656D 05553         DB      0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x00
035A 746E 7261
035E 0079
               05554 ; ; Starting pCode block
0360           05555 __str_50:
0360 6F54 6767 05556         DB      0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x00
0364 656C 0000
               05557 ; ; Starting pCode block
0368           05558 __str_51:
0368 4F20 7475 05559         DB      0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x20, 0x20, 0x6d, 0x6f
036C 7570 2074
0370 2020 6F6D
0374 6564 0020 05560         DB      0x64, 0x65, 0x20, 0x00
               05561 ; ; Starting pCode block
0378           05562 __str_52:
0378 6152 6964 05563         DB      0x52, 0x61, 0x64, 0x69, 0x6f, 0x00
037C 006F
               05564 ; ; Starting pCode block
037E           05565 __str_53:
037E 7246 6565 05566         DB      0x46, 0x72, 0x65, 0x65, 0x00
0382 0000
               05567 ; ; Starting pCode block
0384           05568 __str_54:
0384 2A2A 2020 05569         DB      0x2a, 0x2a, 0x20, 0x20, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73
0388 4F20 7470
038C 6F69 736E
0390 2020 2A2A 05570         DB      0x20, 0x20, 0x2a, 0x2a, 0x00
0394 0000
               05571 ; ; Starting pCode block
0396           05572 __str_55:
0396 6C41 006C 05573         DB      0x41, 0x6c, 0x6c, 0x00
               05574 ; ; Starting pCode block
039A           05575 __str_56:
039A 5250 474F 05576         DB      0x50, 0x52, 0x4f, 0x47, 0x00
039E 0000
               05577 ; ; Starting pCode block
03A0           05578 __str_57:
03A0 504F 5354 05579         DB      0x4f, 0x50, 0x54, 0x53, 0x00
03A4 0000
               05580 ; ; Starting pCode block
03A6           05581 __str_58:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03A6 7250 7365 05582         DB      0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x00
03AA 7465 0020
               05583 ; ; Starting pCode block
03AE           05584 __str_59:
03AE 6552 6563 05585         DB      0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x20, 0x4d, 0x69, 0x64
03B2 7669 6465
03B6 4D20 6469
03BA 2069 654D 05586         DB      0x69, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x3a, 0x20
03BE 7373 6761
03C2 2065 203A
03C6 0000      05587         DB      0x00
               05588 ; ; Starting pCode block
03C8           05589 __str_60:
03C8 6749 6F6E 05590         DB      0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x42, 0x61, 0x64
03CC 6572 2C64
03D0 4220 6461
03D4 4D20 4449 05591         DB      0x20, 0x4d, 0x49, 0x44, 0x49, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65
03D8 2049 6863
03DC 6E61 656E
03E0 006C      05592         DB      0x6c, 0x00
               05593 ; ; Starting pCode block
03E2           05594 __str_61:
03E2 6749 6F6E 05595         DB      0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x6e, 0x6f, 0x74
03E6 6572 2C64
03EA 6E20 746F
03EE 6120 5020 05596         DB      0x20, 0x61, 0x20, 0x50, 0x43, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67
03F2 2043 656D
03F6 7373 6761
03FA 0065      05597         DB      0x65, 0x00
               05598 ; ; Starting pCode block
03FC           05599 __str_62:
03FC 4350 0000 05600         DB      0x50, 0x43, 0x00
               05601 ; ; Starting pCode block
0400           05602 __str_63:
0400 3A20 4C20 05603         DB      0x20, 0x3a, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x70
0404 616F 6964
0408 676E 7020
040C 6572 6573 05604         DB      0x72, 0x65, 0x73, 0x65, 0x74, 0x00
0410 0074
               05605 ; ; Starting pCode block
0412           05606 __str_64:
0412 3A20 5420 05607         DB      0x20, 0x3a, 0x20, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 0x52, 0x65
0416 676F 6C67
041A 2065 6552
041E 616C 0079 05608         DB      0x6c, 0x61, 0x79, 0x00
               05609 ; ; Starting pCode block
0422           05610 __str_65:
0422 5320 6174 05611         DB      0x20, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x00
0426 7574 0073
               05612 ; ; Starting pCode block
042A           05613 __str_66:
042A 4350 3031 05614         DB      0x50, 0x43, 0x31, 0x30, 0x39, 0x20, 0x3a, 0x20, 0x55, 0x70, 0x20, 0x6f
042E 2039 203A
0432 7055 6F20
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0436 656E 7020 05615         DB      0x6e, 0x65, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x00
043A 6572 6573
043E 0074
               05616 ; ; Starting pCode block
0440           05617 __str_67:
0440 7266 6D6F 05618         DB      0x66, 0x72, 0x6f, 0x6d, 0x00
0444 0000
               05619 ; ; Starting pCode block
0446           05620 __str_68:
0446 6F74 0000 05621         DB      0x74, 0x6f, 0x00
               05622 ; ; Starting pCode block
044A           05623 __str_69:
044A 6749 6F6E 05624         DB      0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x4d, 0x69, 0x64, 0x69
044E 6572 2064
0452 694D 6964
0456 4920 206E 05625         DB      0x20, 0x49, 0x6e, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a
045A 656D 7373
045E 6761 3A65
0462 0020      05626         DB      0x20, 0x00
               05627 ; ; Starting pCode block
0464           05628 __str_70:
0464 4350 6E20 05629         DB      0x50, 0x43, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f
0468 6D75 6562
046C 2072 6F74
0470 206F 6968 05630         DB      0x6f, 0x20, 0x68, 0x69, 0x67, 0x68, 0x00
0474 6867 0000
               05631 ; ; Starting pCode block
0478           05632 __str_71:
0478 6F46 746F 05633         DB      0x46, 0x6f, 0x6f, 0x74, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x3a, 0x20
047C 7773 7469
0480 6863 203A
0484 0000      05634         DB      0x00
               05635 ; ; Starting pCode block
0486           05636 __str_72:
0486 6564 7270 05637         DB      0x64, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x00
048A 7365 6573
048E 0064
               05638 ; ; Starting pCode block
0490           05639 __str_73:
0490 7270 7365 05640         DB      0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x00
0494 6573 0064
               05641 ; ; Starting pCode block
0498           05642 __str_74:
0498 7542 7474 05643         DB      0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x3a, 0x20, 0x00
049C 6E6F 203A
04A0 0000
               05644 ; ; Starting pCode block
04A2           05645 __str_75:
04A2 4F4E 4854 05646         DB      0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x20, 0x54, 0x4f, 0x20, 0x44
04A6 4E49 2047
04AA 4F54 4420
04AE 204F 4E49 05647         DB      0x4f, 0x20, 0x49, 0x4e, 0x20, 0x44, 0x49, 0x4e, 0x20, 0x4e, 0x4f, 0x54
04B2 4420 4E49
04B6 4E20 544F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
04BA 4649 0059 05648         DB      0x49, 0x46, 0x59, 0x00
               05649 
               05650 
               05651 ; Statistics:
               05652 ; code size:    10182 (0x27c6) bytes ( 7.77%)
               05653 ;                5091 (0x13e3) words
               05654 ; udata size:      46 (0x002e) bytes ( 3.59%)
               05655 ; access size:     10 (0x000a) bytes
               05656 
               05657 
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 110


SYMBOL TABLE
  LABEL                             VALUE 

FSR0H                             00000FE2
FSR0L                             00000FE1
FSR1L                             00000FE9
FSR2L                             00000FD9
INDF0                             00000FE7
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FED
PREINC1                           00000FEC
STATUS                            00000FD8
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
WREG                              00000FE8
_00106_DS_                        00000204
_00107_DS_                        0000022E
_00111_DS_                        0000015A
_00112_DS_                        0000024E
_00114_DS_                        00000278
_00115_DS_                        00000284
_00118_DS_                        000000D4
_00119_DS_                        000000D8
_00120_DS_                        00000128
_00121_DS_                        0000012C
_00129_DS_                        00000162
_00145_DS_                        00000054
_00147_DS_                        0000008A
_00149_DS_                        000001BA
_00150_DS_                        000001C2
_00151_DS_                        000001D0
_00159_DS_                        00000086
_00163_DS_                        0000005C
_00166_DS_                        00000094
_00168_DS_                        000000B8
_00170_DS_                        000000D8
_00177_DS_                        00000036
_00179_DS_                        00000076
_00180_DS_                        00000086
_00181_DS_                        00000088
_00186_DS_                        00000040
_00195_DS_                        00000036
_00197_DS_                        00000076
_00198_DS_                        00000086
_00199_DS_                        00000088
_00204_DS_                        00000040
_00213_DS_                        00000036
_00215_DS_                        00000076
_00216_DS_                        00000086
_00217_DS_                        00000088
_00222_DS_                        00000040
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00229_DS_                        00000022
_00232_DS_                        0000007E
_00233_DS_                        00000084
_00237_DS_                        000000E0
_00245_DS_                        0000002C
_00246_DS_                        0000008E
_00263_DS_                        00000018
_00266_DS_                        0000005C
_00272_DS_                        00000022
_00282_DS_                        00000064
_00285_DS_                        00000080
_00286_DS_                        000000A0
_00288_DS_                        000000C8
_00292_DS_                        000002C8
_00294_DS_                        00000382
_00303_DS_                        00000400
_00306_DS_                        000001F4
_00308_DS_                        00000390
_00309_DS_                        00000398
_00310_DS_                        000003A2
_00312_DS_                        000003F8
_00314_DS_                        00000408
_00316_DS_                        00000440
_00317_DS_                        00000448
_00318_DS_                        00000452
_00329_DS_                        000001F0
_00342_DS_                        00000042
_00352_DS_                        000001FE
_00354_DS_                        000002E8
_00356_DS_                        00000308
_00359_DS_                        000003AC
_00364_DS_                        00000412
_00372_DS_                        0000005A
_00374_DS_                        00000082
_00375_DS_                        00000142
_00381_DS_                        0000001C
_00382_DS_                        0000003A
_00383_DS_                        0000003C
_00389_DS_                        0000001A
_00390_DS_                        00000038
_00391_DS_                        0000003A
_00397_DS_                        000000FA
_00398_DS_                        0000009C
_00401_DS_                        000000C0
_00402_DS_                        000000C4
_00405_DS_                        000000F2
_00406_DS_                        000000FC
_00415_DS_                        000000A6
_00416_DS_                        000000CE
_00422_DS_                        00000024
_00423_DS_                        00000058
_00432_DS_                        00000076
_00433_DS_                        0000007A
_00434_DS_                        000000E2
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00435_DS_                        00000162
_00436_DS_                        0000016A
_00438_DS_                        000001D2
_00439_DS_                        000001D6
_00440_DS_                        000001F6
_00442_DS_                        00000238
_00444_DS_                        0000025C
_00447_DS_                        0000027E
_00452_DS_                        00000264
_00453_DS_                        00000284
_00455_DS_                        00000300
_00456_DS_                        00000304
_00457_DS_                        000003C2
_00458_DS_                        00000404
_00459_DS_                        00000446
_00460_DS_                        00000488
_00461_DS_                        000004CA
_00462_DS_                        0000050C
_00464_DS_                        0000055E
_00466_DS_                        00000570
_00467_DS_                        000005D8
_00472_DS_                        00000640
_00473_DS_                        00000640
_00474_DS_                        00000640
_00475_DS_                        00000640
_00480_DS_                        000006D8
_00481_DS_                        000006D8
_00482_DS_                        000006D8
_00483_DS_                        000006D8
_00486_DS_                        00000770
_00488_DS_                        000007B8
_00490_DS_                        000007FE
_00494_DS_                        000008AE
_00496_DS_                        000008F2
_00499_DS_                        0000093A
_00504_DS_                        00000900
_00505_DS_                        00000946
_00506_DS_                        0000098A
_00508_DS_                        000009AC
_00511_DS_                        000009CE
_00516_DS_                        000009B4
_00517_DS_                        000009D2
_00519_DS_                        00000A0A
_00521_DS_                        00000A14
_00523_DS_                        00000A36
_00526_DS_                        00000A58
_00531_DS_                        00000A3E
_00532_DS_                        00000A5C
_00534_DS_                        00000A98
_00536_DS_                        00000AAE
_00537_DS_                        00000B08
_00542_DS_                        00000B62
_00543_DS_                        00000B62
_00544_DS_                        00000B62
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00545_DS_                        00000B62
_00550_DS_                        00000C00
_00551_DS_                        00000C00
_00552_DS_                        00000C00
_00553_DS_                        00000C00
_00559_DS_                        00000296
_00562_DS_                        00000172
_00563_DS_                        00000C9C
_00566_DS_                        000005C2
_00568_DS_                        0000062A
_00570_DS_                        000006C2
_00572_DS_                        0000075A
_00574_DS_                        00000AF4
_00576_DS_                        00000B4E
_00578_DS_                        00000BEC
_00580_DS_                        00000C8A
_00621_DS_                        00000062
_00623_DS_                        0000017C
_00625_DS_                        000001BE
_00631_DS_                        000002EC
_00635_DS_                        00000362
_00637_DS_                        0000084E
_00652_DS_                        0000001C
_00658_DS_                        000000B4
_00661_DS_                        000000DC
_00667_DS_                        0000024A
_00670_DS_                        000001EC
_00673_DS_                        0000018C
_00676_DS_                        00000124
_00678_DS_                        00000294
_00691_DS_                        00000098
_00726_DS_                        000000B6
_00728_DS_                        00000132
_00729_DS_                        00000156
_00730_DS_                        0000015C
_00736_DS_                        00000176
_00738_DS_                        0000006E
_00739_DS_                        0000007A
_00740_DS_                        000000F0
_00741_DS_                        000000FC
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_AIN_NotifyChange                 00000000
_BSR                              00000000
_ButtonPin                        00000014
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1H                           00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CCPR1L                           00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CurrentPreset                    00000000
_DEBUG_MSG_SendBCD1               00000000
_DEBUG_MSG_SendBCD3               00000000
_DEBUG_MSG_SendCString            00000000
_DEBUG_MSG_SendChar               00000000
_DEBUG_MSG_SendFooter             00000000
_DEBUG_MSG_SendHeader             00000000
_DIN_NotifyToggle                 00000000
_DISPLAY_Init                     00000000
_DISPLAY_Tick                     00000000
_DoRelay                          00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_ENC_NotifyChange                 00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_FactoryReset                     00000000
_FootButton                       00000000
_FootButtonPin                    00000020
_FootLedPin                       00000010
_FootLedsOff                      00000000
_FootPreset                       00000000
_ForceStartupPreset               00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_Init                             00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LVDCON                           00000000
_LVDCONbits                       00000000
_LastButton                       00000000
_LoadGlobalOptions                00000000
_LoadPreset                       00000000
_LoadPreset_TargetRelayState_1_1  00000000
_LoadTestPreset                   00000000
_MIOS_BOX_CFG0                    00000000
_MIOS_BOX_CFG1                    00000000
_MIOS_BOX_STAT                    00000000
_MIOS_DOUT_PinSet                 00000000
_MIOS_DOUT_PinSet0                00000000
_MIOS_DOUT_PinSet1                00000000
_MIOS_Delay                       00000000
_MIOS_EEPROM_Read                 00000000
_MIOS_EEPROM_Write                00000000
_MIOS_ENC_PIN_TABLE               00000000
_MIOS_LCD_Clear                   00000000
_MIOS_LCD_CursorSet               00000000
_MIOS_LCD_MessageStart            00000000
_MIOS_LCD_PrintBCD1               00000000
_MIOS_LCD_PrintBCD2               00000000
_MIOS_LCD_PrintBCD3               00000000
_MIOS_LCD_PrintCString            00000000
_MIOS_LCD_PrintChar               00000000
_MIOS_MIDI_BeginStream            00000000
_MIOS_MIDI_EndStream              00000000
_MIOS_MIDI_TxBufferPut            00000000
_MIOS_MPROC_EVENT_TABLE           00000000
_MIOS_PARAMETER1                  00000000
_MIOS_PARAMETER2                  00000000
_MIOS_PARAMETER3                  00000000
_MIOS_SRIO_DebounceSet            00000000
_MIOS_SRIO_NumberSet              00000000
_MIOS_SRIO_UpdateFrqSet           00000000
_MPROC_NotifyFoundEvent           00000000
_MPROC_NotifyReceivedByte         00000000
_MPROC_NotifyReceivedEvnt         00000000
_MPROC_NotifyTimeout              00000000
_MenuButton                       00000000
_MenuButtonPin                    0000001C
_MenuPos                          00000000
_MidiChannel                      00000000
_MidiIn                           00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_Preset_Down                      00000000
_Preset_Up                        00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_RelayButton                      00000000
_RelayLedPin                      00000000
_RelayMode                        00000000
_RelayPin                         00000008
_RelayState                       00000000
_RelayType                        00000000
_ReloadActivePreset               00000000
_SPBRG                            00000000
_SR_Service_Finish                00000000
_SR_Service_Prepare               00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_SaveGlobalOptions                00000000
_SavePreset                       00000000
_SendMidiOnButtonChange           00000000
_SetActivePreset                  00000000
_SetFootLed                       00000000
_StartupPreset                    00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_TargetPreset                     00000000
_ThisStartupPreset                00000000
_Tick                             00000000
_Timer                            00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__18F452                          00000001
__str_0                           00000024
__str_1                           0000002A
__str_10                          000000BC
__str_11                          000000C0
__str_12                          000000D8
__str_13                          000000F4
__str_14                          00000104
__str_15                          0000011E
__str_16                          00000134
__str_17                          00000140
__str_18                          00000150
__str_19                          0000017A
__str_2                           0000003A
__str_20                          0000018A
__str_21                          00000194
__str_22                          000001AE
__str_23                          000001C0
__str_24                          000001E4
__str_25                          00000206
__str_26                          00000214
__str_27                          00000224
__str_28                          00000238
__str_29                          0000023E
__str_3                           00000048
__str_30                          00000244
__str_31                          00000250
__str_32                          00000252
__str_33                          00000254
__str_34                          00000266
__str_35                          00000278
__str_36                          0000028A
__str_37                          0000029C
__str_38                          000002AE
__str_39                          000002C0
__str_4                           00000056
__str_40                          000002D2
__str_41                          000002E4
__str_42                          000002F6
__str_43                          00000308
__str_44                          0000031A
__str_45                          0000032C
__str_46                          00000330
__str_47                          00000334
__str_48                          00000346
__str_49                          00000356
__str_5                           00000060
__str_50                          00000360
__str_51                          00000368
__str_52                          00000378
__str_53                          0000037E
__str_54                          00000384
__str_55                          00000396
__str_56                          0000039A
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm2-4-2013  11:12:39           PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__str_57                          000003A0
__str_58                          000003A6
__str_59                          000003AE
__str_6                           00000072
__str_60                          000003C8
__str_61                          000003E2
__str_62                          000003FC
__str_63                          00000400
__str_64                          00000412
__str_65                          00000422
__str_66                          0000042A
__str_67                          00000440
__str_68                          00000446
__str_69                          0000044A
__str_7                           00000084
__str_70                          00000464
__str_71                          00000478
__str_72                          00000486
__str_73                          00000490
__str_74                          00000498
__str_75                          000004A2
__str_8                           00000096
__str_9                           000000AA
_mios_enc_pin_table               00000000
_mios_mproc_event_table           00000000
_toggle_dout                      00000000
r0x00                             00000010
r0x01                             00000011
r0x02                             00000012
r0x03                             00000013
r0x04                             00000014
r0x05                             00000015
r0x06                             00000016
r0x07                             00000017
r0x08                             00000018
r0x09                             00000019


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

